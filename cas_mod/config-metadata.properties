# Type: java.lang.String
# Module: cas-server-support-aup-webflow
# Owner: org.apereo.cas.configuration.model.support.aup.AcceptableUsagePolicyCoreProperties
#
# AUP attribute to choose in order to determine whether policy has been
# accepted or not. The attribute is expected to contain a boolean value
# where {@code true} indicates policy has been accepted and {@code
# false} indicates otherwise. The attribute is fetched for the principal
# from configured sources and compared for the right match to determine
# policy status. If the attribute is not found, the policy status is
# considered as denied.
#
# cas.acceptable-usage-policy.core.aup-attribute-name: aupAccepted

# Type: java.lang.Boolean
# Module: cas-server-support-aup-webflow
# Owner: org.apereo.cas.configuration.model.support.aup.AcceptableUsagePolicyCoreProperties
#
# By default, the policy status is considered as denied when the
# attribute {@link #aupAttributeName} is not found. If set to {@code
# true}, the policy status in those cases is considered as accepted.
#
# cas.acceptable-usage-policy.core.aup-omit-if-attribute-missing: false

# Type: java.lang.String
# Module: cas-server-support-aup-webflow
# Owner: org.apereo.cas.configuration.model.support.aup.AcceptableUsagePolicyCoreProperties
#
# AUP attribute to choose whose single value dictates how CAS should
# fetch the policy terms from the relevant message bundles.
#
# cas.acceptable-usage-policy.core.aup-policy-terms-attribute-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-webflow
# Owner: org.apereo.cas.configuration.model.support.aup.AcceptableUsagePolicyCoreProperties
#
# Allows AUP to be turned off on startup.
#
# cas.acceptable-usage-policy.core.enabled: true

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Configuration setting is moved to the new core namespace
# Replace with: Configuration setting is moved to the new core namespace
#
# 
#
# cas.acceptable-usage-policy.enabled: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-aup-core
# Owner: org.apereo.cas.configuration.model.support.aup.GroovyAcceptableUsagePolicyProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.acceptable-usage-policy.groovy.location: 

# Type: org.apereo.cas.configuration.model.support.aup.InMemoryAcceptableUsagePolicyProperties$Scope
# Module: cas-server-support-aup-core
# Owner: org.apereo.cas.configuration.model.support.aup.InMemoryAcceptableUsagePolicyProperties
#
# Scope of map where the aup selection is stored.
# Available values are
# as follows:
# <ul><li>{@code GLOBAL}: Store in global in-memory map
# (for life of server).</li><li>{@code AUTHENTICATION}: Store aup
# acceptance such that user is prompted when
# they authenticate via
# credentials.</li></ul>
#
# cas.acceptable-usage-policy.in-memory.scope: GLOBAL

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The column to store the AUP attribute. May differ from the profile
# attribute defined by {@link
# AcceptableUsagePolicyCoreProperties#getAupAttributeName()}. SQL query
# can be further customized by setting {@link #sqlUpdate}.
#
# cas.acceptable-usage-policy.jdbc.aup-column: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.acceptable-usage-policy.jdbc.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.acceptable-usage-policy.jdbc.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.acceptable-usage-policy.jdbc.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.acceptable-usage-policy.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.acceptable-usage-policy.jdbc.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.acceptable-usage-policy.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.acceptable-usage-policy.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.acceptable-usage-policy.jdbc.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The JDBC driver used to connect to the database.
#
# cas.acceptable-usage-policy.jdbc.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.acceptable-usage-policy.jdbc.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.acceptable-usage-policy.jdbc.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Allow hibernate to generate query statistics.
#
# cas.acceptable-usage-policy.jdbc.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.acceptable-usage-policy.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.acceptable-usage-policy.jdbc.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.acceptable-usage-policy.jdbc.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.acceptable-usage-policy.jdbc.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.acceptable-usage-policy.jdbc.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The database connection password.
#
# cas.acceptable-usage-policy.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.acceptable-usage-policy.jdbc.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.acceptable-usage-policy.jdbc.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.acceptable-usage-policy.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.acceptable-usage-policy.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.acceptable-usage-policy.jdbc.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.acceptable-usage-policy.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.acceptable-usage-policy.jdbc.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.acceptable-usage-policy.jdbc.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.acceptable-usage-policy.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The profile attribute to extract the value for the {@link
# #principalIdColumn} used in the WHERE clause of {@link #sqlUpdate}. If
# empty, the principal ID will be used.
#
# cas.acceptable-usage-policy.jdbc.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The column to identify the principal. SQL query can be further
# customized by setting {@link #sqlUpdate}.
#
# cas.acceptable-usage-policy.jdbc.principal-id-column: username

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.acceptable-usage-policy.jdbc.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.acceptable-usage-policy.jdbc.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.acceptable-usage-policy.jdbc.read-only: false

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The query template to search for the AUP attribute. %s placeholders
# represent {@link #aupColumn}, {@link #tableName}, {@link
# #principalIdColumn} settings.
#
# cas.acceptable-usage-policy.jdbc.sql-select: SELECT %s FROM %s WHERE %s=?

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The query template to update the AUP attribute. %s placeholders
# represent {@link #tableName}, {@link #aupColumn}, {@link
# #principalIdColumn} settings.
#
# cas.acceptable-usage-policy.jdbc.sql-update: UPDATE %s SET %s=true WHERE %s=?

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The table name in the database that holds the AUP attribute to update
# for the user.
#
# cas.acceptable-usage-policy.jdbc.table-name: 

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The database connection URL.
#
# cas.acceptable-usage-policy.jdbc.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-aup-jdbc
# Owner: org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.acceptable-usage-policy.jdbc.user: sa

# Type: java.util.List<org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties>
# Module: cas-server-support-aup-webflow
# Owner: org.apereo.cas.configuration.model.support.aup.AcceptableUsagePolicyProperties
#
# Control AUP via LDAP.
#
# cas.acceptable-usage-policy.ldap: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.acceptable-usage-policy.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Set if multiple Entries are allowed.
#
# cas.acceptable-usage-policy.ldap[].allow-multiple-entries: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Attribute value that indicates whether AUP has been accepted
# for the
# LDAP record.
#
# cas.acceptable-usage-policy.ldap[].aup-accepted-attribute-value: TRUE

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Base DN to use.
# There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating
# the LDAP configuration block for each individual
# base-dn, each entry can be specified
# and joined together using a
# special delimiter character. The user DN is retrieved using the
# combination of all base-dn and DN
# resolvers in the order defined. DN
# resolution should fail if multiple DNs are found. Otherwise the first
# DN found is returned.
# Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.acceptable-usage-policy.ldap[].base-dn: 

# Type: java.util.List<String>
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.acceptable-usage-policy.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.acceptable-usage-policy.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.acceptable-usage-policy.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.acceptable-usage-policy.ldap[].block-wait-time: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.acceptable-usage-policy.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.acceptable-usage-policy.ldap[].connection-strategy: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.acceptable-usage-policy.ldap[].disable-pooling: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.acceptable-usage-policy.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Set if search referrals should be followed.
#
# cas.acceptable-usage-policy.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.acceptable-usage-policy.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.acceptable-usage-policy.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.acceptable-usage-policy.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Keystore password.
#
# cas.acceptable-usage-policy.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.acceptable-usage-policy.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.acceptable-usage-policy.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.acceptable-usage-policy.ldap[].max-pool-size: 

# Type: int
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.acceptable-usage-policy.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Name of the LDAP handler.
#
# cas.acceptable-usage-policy.ldap[].name: 

# Type: int
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Request that the server return results in batches of a
# specific
# size. See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>.
# This control is often
# used to work around server result size
# limits.
# A negative/zero value disables paged requests.
#
# cas.acceptable-usage-policy.ldap[].page-size: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.acceptable-usage-policy.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.acceptable-usage-policy.ldap[].prune-period: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Duration of time to wait for responses.
#
# cas.acceptable-usage-policy.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# SASL authorization id.
#
# cas.acceptable-usage-policy.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The SASL mechanism.
#
# cas.acceptable-usage-policy.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# SASL mutual auth is enabled?
#
# cas.acceptable-usage-policy.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# SASL quality of protected.
#
# cas.acceptable-usage-policy.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The SASL realm.
#
# cas.acceptable-usage-policy.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# SASL security strength.
#
# cas.acceptable-usage-policy.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.acceptable-usage-policy.ldap[].search-entry-handlers.type: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# User filter to use for searching.
# Syntax is {@code cn={user}} or
# {@code cn={0}}.
# <p>
# You may also provide an external groovy
# script
# in the syntax of {@code file:/path/to/GroovyScript.groovy}
#
# to fully build the final filter template dynamically.
#
# cas.acceptable-usage-policy.ldap[].search-filter: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Whether subtree searching is allowed.
#
# cas.acceptable-usage-policy.ldap[].subtree-search: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.acceptable-usage-policy.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.acceptable-usage-policy.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.acceptable-usage-policy.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Password needed to open the truststore.
#
# cas.acceptable-usage-policy.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.acceptable-usage-policy.ldap[].trust-store-type: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.acceptable-usage-policy.ldap[].use-start-tls: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.acceptable-usage-policy.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Period at which pool should be validated.
#
# cas.acceptable-usage-policy.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.acceptable-usage-policy.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-aup-ldap
# Owner: org.apereo.cas.configuration.model.support.aup.LdapAcceptableUsagePolicyProperties
#
# Period at which validation operations may time out.
#
# cas.acceptable-usage-policy.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.acceptable-usage-policy.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.acceptable-usage-policy.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.acceptable-usage-policy.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.acceptable-usage-policy.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.acceptable-usage-policy.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.acceptable-usage-policy.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.acceptable-usage-policy.ldap[].validator.type: search

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Name of the database to use for authentication.
#
# cas.acceptable-usage-policy.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.acceptable-usage-policy.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.acceptable-usage-policy.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# MongoDb database instance name.
#
# cas.acceptable-usage-policy.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.acceptable-usage-policy.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.acceptable-usage-policy.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# MongoDb database password for authentication.
#
# cas.acceptable-usage-policy.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.acceptable-usage-policy.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.acceptable-usage-policy.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.acceptable-usage-policy.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.acceptable-usage-policy.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.acceptable-usage-policy.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.acceptable-usage-policy.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# MongoDb database port.
#
# cas.acceptable-usage-policy.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.acceptable-usage-policy.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.acceptable-usage-policy.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.acceptable-usage-policy.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.acceptable-usage-policy.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.acceptable-usage-policy.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Whether connections require SSL.
#
# cas.acceptable-usage-policy.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# MongoDb database connection timeout.
#
# cas.acceptable-usage-policy.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# MongoDb database user for authentication.
#
# cas.acceptable-usage-policy.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-aup-mongo
# Owner: org.apereo.cas.configuration.model.support.aup.MongoDbAcceptableUsagePolicyProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.acceptable-usage-policy.mongo.write-concern: ACKNOWLEDGED

# Type: java.io.File
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.acceptable-usage-policy.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.acceptable-usage-policy.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.acceptable-usage-policy.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.acceptable-usage-policy.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.acceptable-usage-policy.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.acceptable-usage-policy.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.acceptable-usage-policy.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.acceptable-usage-policy.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.acceptable-usage-policy.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.acceptable-usage-policy.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.acceptable-usage-policy.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.acceptable-usage-policy.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.acceptable-usage-policy.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.acceptable-usage-policy.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Connection timeout.
#
# cas.acceptable-usage-policy.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Database index used by the connection factory.
#
# cas.acceptable-usage-policy.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.acceptable-usage-policy.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Redis server host.
#
# cas.acceptable-usage-policy.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.acceptable-usage-policy.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.acceptable-usage-policy.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.acceptable-usage-policy.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Login password of the redis server.
#
# cas.acceptable-usage-policy.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.acceptable-usage-policy.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.acceptable-usage-policy.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.acceptable-usage-policy.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.acceptable-usage-policy.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.acceptable-usage-policy.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.acceptable-usage-policy.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.acceptable-usage-policy.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.acceptable-usage-policy.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.acceptable-usage-policy.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.acceptable-usage-policy.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.acceptable-usage-policy.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.acceptable-usage-policy.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.acceptable-usage-policy.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.acceptable-usage-policy.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Redis server port.
#
# cas.acceptable-usage-policy.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Redis protocol version.
#
# cas.acceptable-usage-policy.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.acceptable-usage-policy.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.acceptable-usage-policy.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.acceptable-usage-policy.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.acceptable-usage-policy.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.acceptable-usage-policy.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.acceptable-usage-policy.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.acceptable-usage-policy.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Command timeout.
#
# cas.acceptable-usage-policy.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Database URI.
#
# cas.acceptable-usage-policy.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.acceptable-usage-policy.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Login username of the redis server.
#
# cas.acceptable-usage-policy.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-aup-redis
# Owner: org.apereo.cas.configuration.model.support.aup.RedisAcceptableUsagePolicyProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.acceptable-usage-policy.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-aup-rest
# Owner: org.apereo.cas.configuration.model.support.aup.RestAcceptableUsagePolicyProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.acceptable-usage-policy.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-aup-rest
# Owner: org.apereo.cas.configuration.model.support.aup.RestAcceptableUsagePolicyProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.acceptable-usage-policy.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-aup-rest
# Owner: org.apereo.cas.configuration.model.support.aup.RestAcceptableUsagePolicyProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.acceptable-usage-policy.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-aup-rest
# Owner: org.apereo.cas.configuration.model.support.aup.RestAcceptableUsagePolicyProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.acceptable-usage-policy.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-aup-rest
# Owner: org.apereo.cas.configuration.model.support.aup.RestAcceptableUsagePolicyProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.acceptable-usage-policy.rest.url: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.access-strategy.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.account-registration.core.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.account-registration.core.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.account-registration.core.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.account-registration.core.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.account-registration.core.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.account-registration.core.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.account-registration.core.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.AccountManagementRegistrationCoreProperties
#
# How long in minutes should the registration link remain valid.
#
# cas.account-registration.core.expiration: PT1M

# Type: java.lang.Boolean
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.AccountManagementRegistrationCoreProperties
#
# Whether the registration token will contain the client IP Address.
#
# cas.account-registration.core.include-client-ip-address: true

# Type: java.lang.Boolean
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.AccountManagementRegistrationCoreProperties
#
# Whether the registration token will contain the server IP Address.
#
# cas.account-registration.core.include-server-ip-address: true

# Type: java.lang.String
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.AccountManagementRegistrationCoreProperties
#
# A String value representing password policy regex pattern. Minimum 8
# and Maximum 10 characters at least 1 Uppercase Alphabet, 1 Lowercase
# Alphabet, 1 Number and 1 Special Character.
#
# cas.account-registration.core.password-policy-pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,10}

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.account-registration.core.registration-properties.location: 

# Type: java.lang.Integer
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.AccountManagementRegistrationCoreProperties
#
# Whether account registration should present security questions and how
# many, to complete the registration process.
#
# cas.account-registration.core.security-questions-count: 2

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# A regular expression pattern to indicate that captcha should be
# activated when the remote IP address matches this pattern, and
# otherwise skipped and disabled.
#
# cas.account-registration.google-recaptcha.activate-for-ip-address-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether reCAPTCHA should be enabled.
#
# cas.account-registration.google-recaptcha.enabled: true

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Headers, defined as a {@link Map}, to include in the request when
# making the verification call to the recaptcha API.
#
# cas.account-registration.google-recaptcha.headers: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether google reCAPTCHA invisible should be enabled.
#
# cas.account-registration.google-recaptcha.invisible: false

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The google reCAPTCHA badge position (only if invisible is enabled).
# Accepted values are: <ul> <li>{@code bottomright}: bottom right
# corner, default value.</li> <li>{@code bottomleft}: bottom left
# corner</li> <li>{@code inline}: allows to control the CSS.</li> </ul>
#
# cas.account-registration.google-recaptcha.position: bottomright

# Type: java.lang.Double
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Google reCAPTCHA v3 returns a score (1.0 is very likely a good
# interaction, 0.0 is very likely a bot). reCAPTCHA learns by seeing
# real traffic on your site. For this reason, scores in a staging
# environment or soon after implementing may differ from production. As
# reCAPTCHA v3 doesn't ever interrupt the user flow, you can first run
# reCAPTCHA without taking action and then decide on thresholds by
# looking at your traffic in the admin console. By default, you can use
# a threshold of 0.5.
#
# cas.account-registration.google-recaptcha.score: 0.5

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site secret.
#
# cas.account-registration.google-recaptcha.secret: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site key.
#
# cas.account-registration.google-recaptcha.site-key: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA endpoint for verification of the reCAPTCHA response. The
# endpoint is specific to the reCAPTCHA provider: <ul> <li>For Google
# reCAPTCHA, the endpoint is {@code
# https://www.google.com/recaptcha/api/siteverify}.</li> <li>For
# hCaptcha, the endpoint is {@code
# https://hcaptcha.com/siteverify}.</li> <li>For Turnstile, the endpoint
# is {@code
# https://challenges.cloudflare.com/turnstile/v0/siteverify}.</li> </ul>
#
# cas.account-registration.google-recaptcha.verify-url: https://www.google.com/recaptcha/api/siteverify

# Type: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties$RecaptchaVersions
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Indicate the version of the recaptcha api.
# Available values are as
# follows:
# <ul><li>{@code GOOGLE_RECAPTCHA_V2}: V2 version of the
# recaptcha API.</li><li>{@code GOOGLE_RECAPTCHA_V3}: V3 version of the
# recaptcha API.</li><li>{@code HCAPTCHA}: hCaptcha is an alternative to
# reCAPTCHA that requires website visitors
# to label images as part of
# its business model.
# The provider is more focused on manual image
# recognition challenges. It is a image classification
# task based
# CAPTCHA provider employing visual challenges like identifying
# objects.</li><li>{@code TURNSTILE}: Offers a CAPTCHA alternative by
# Cloudflare that prioritizes user experience and privacy.
# Turnstile
# delivers frustration-free, CAPTCHA-free web experiences to website
# visitors -
# with just a simple snippet of free code. Moreover,
# Turnstile stops abuse and confirms
# visitors are real without the
# data privacy concerns or awful user experience of CAPTCHAs.</li></ul>
#
# cas.account-registration.google-recaptcha.version: GOOGLE_RECAPTCHA_V2

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.account-registration.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.account-registration.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.account-registration.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.account-registration.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.account-registration.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.account-registration.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.account-registration.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.account-registration.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.account-registration.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.account-registration.mail.validate-addresses: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.provision.GroovyAccountManagementRegistrationProvisioningProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.account-registration.provisioning.groovy.location: 

# Type: java.lang.String
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.provision.RestfulAccountManagementRegistrationProvisioningProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.account-registration.provisioning.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.provision.RestfulAccountManagementRegistrationProvisioningProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.account-registration.provisioning.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.provision.RestfulAccountManagementRegistrationProvisioningProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.account-registration.provisioning.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.provision.RestfulAccountManagementRegistrationProvisioningProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.account-registration.provisioning.rest.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-account-mgmt
# Owner: org.apereo.cas.configuration.model.support.account.provision.ScimAccountManagementRegistrationProvisioningProperties
#
# Whether provisioning to SCIM targets should be enabled for delegated
# authentication attempts.
#
# cas.account-registration.provisioning.scim.enabled: false

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAccountManagementRegistrationProvisioningProperties
#
# Specify the password for REST authentication.
#
# cas.account-registration.provisioning.syncope.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAccountManagementRegistrationProvisioningProperties
#
# Specify the username for REST authentication.
#
# cas.account-registration.provisioning.syncope.basic-auth-username: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAccountManagementRegistrationProvisioningProperties
#
# Syncope domain used for authentication, etc. Multiple domains can be
# separated via comma. Each domain entry results in a separate
# authentication attempt and transaction by CAS.
#
# cas.account-registration.provisioning.syncope.domain: Master

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAccountManagementRegistrationProvisioningProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.account-registration.provisioning.syncope.headers: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAccountManagementRegistrationProvisioningProperties
#
# Syncope realm used for user provisioning. Realms define a hierarchical
# security domain tree, primarily meant for containing users. The root
# realm contains everything, and other realms can be seen as containers
# that split up the total number of entities into smaller pools.
#
# cas.account-registration.provisioning.syncope.realm: /

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAccountManagementRegistrationProvisioningProperties
#
# Syncope instance URL primary used for REST.
#
# cas.account-registration.provisioning.syncope.url: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# Principal attribute names that indicates the destination phone number
# for this SMS message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.account-registration.sms.attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The from address for the message.
#
# cas.account-registration.sms.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The body of the SMS message.
#
# cas.account-registration.sms.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.account-registration.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.account-registration.webflow.order: 0

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.acme.domain-chain.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.acme.domain-csr.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.acme.domain-key.location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-acme
# Owner: org.apereo.cas.configuration.model.support.acme.AcmeProperties
#
# List of domains or sub domains that are requesting a certificate
# renewal.
#
# cas.acme.domains: 

# Type: java.lang.Integer
# Module: cas-server-support-acme
# Owner: org.apereo.cas.configuration.model.support.acme.AcmeProperties
#
# Indicate the key length/size used when requesting/generating keys.
#
# cas.acme.key-size: 2048

# Type: java.lang.Integer
# Module: cas-server-support-acme
# Owner: org.apereo.cas.configuration.model.support.acme.AcmeProperties
#
# Number of attempts to retry when executing certificate orders or
# checking for status of an existing order or challenge acknowledgement.
#
# cas.acme.retry-attempts: 3

# Type: java.lang.String
# Module: cas-server-support-acme
# Owner: org.apereo.cas.configuration.model.support.acme.AcmeProperties
#
# Delay interval between to retry attempts when executing certificate
# orders or checking for status of an existing order or challenge
# acknowledgement.
#
# cas.acme.retry-internal: PT2S

# Type: java.lang.String
# Module: cas-server-support-acme
# Owner: org.apereo.cas.configuration.model.support.acme.AcmeProperties
#
# Server url to contact, when requesting certificates. Use {@code
# acme://letsencrypt.org} for production.
#
# cas.acme.server-url: acme://letsencrypt.org/staging

# Type: java.lang.Boolean
# Module: cas-server-support-acme
# Owner: org.apereo.cas.configuration.model.support.acme.AcmeProperties
#
# Flag that indicates ACME terms of use has been accepted by the user.
#
# cas.acme.terms-of-use-accepted: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.acme.user-key.location: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because cas.adminPagesSecurity.* moved to management.endpoints.*., e.g. management.endpoints.enabled-by-default.
# Replace with: cas.adminPagesSecurity.* moved to management.endpoints.*., e.g. management.endpoints.enabled-by-default.
#
# 
#
# cas.admin-pages-security.actuator-endpoints-enabled: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because management endpoints security under cas.monitor.endpoints.endpoint
# Replace with: management endpoints security under cas.monitor.endpoints.endpoint
#
# 
#
# cas.admin-pages-security.ip: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Client execution timeout.
#
# cas.amazon-sts.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Connection timeout.
#
# cas.amazon-sts.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.amazon-sts.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.amazon-sts.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# AWS custom endpoint.
#
# cas.amazon-sts.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Local address.
#
# cas.amazon-sts.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Maximum connections setting.
#
# cas.amazon-sts.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Attribute name that must be found and resolved for the principal to
# authorize the user to proceed with obtaining credentials.
#
# cas.amazon-sts.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Attribute value, defined as a regex pattern that must be found and
# resolved for the principal to authorize the user to proceed with
# obtaining credentials.
#
# cas.amazon-sts.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Profile name to use.
#
# cas.amazon-sts.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Profile path.
#
# cas.amazon-sts.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.amazon-sts.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.amazon-sts.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.amazon-sts.proxy-username: 

# Type: java.lang.Boolean
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# When set to {@code true}, credentials will be obtained based on roles
# as attributes resolved for the user. Typically, you could use roles
# wthin your account or for cross-account access. <p> When set to {@code
# true}, the {@link #getPrincipalAttributeName()} must contain {@code
# roleArn}s as values.
#
# cas.amazon-sts.rbac-enabled: false

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# AWS region used.
#
# cas.amazon-sts.region: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.amazon-sts.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Socket timeout.
#
# cas.amazon-sts.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonSecurityTokenServiceProperties
#
# Flag that indicates whether to use reaper.
#
# cas.amazon-sts.use-reaper: false

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because alternate-client-addr-header-name setting is moved into the engine namespace.
# Replace with: alternate-client-addr-header-name setting is moved into the engine namespace.
#
# 
#
# cas.audit.alternate-client-addr-header-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Make storage requests asynchronously.
#
# cas.audit.dynamo-db.asynchronous: true

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.audit.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Client execution timeout.
#
# cas.audit.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Connection timeout.
#
# cas.audit.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.audit.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.audit.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.audit.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.audit.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.audit.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.audit.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.audit.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.audit.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.audit.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.audit.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.audit.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# AWS custom endpoint.
#
# cas.audit.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Local address.
#
# cas.audit.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.audit.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Maximum connections setting.
#
# cas.audit.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.audit.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Profile name to use.
#
# cas.audit.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Profile path.
#
# cas.audit.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.audit.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.audit.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.audit.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Read capacity.
#
# cas.audit.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# AWS region used.
#
# cas.audit.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.audit.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Socket timeout.
#
# cas.audit.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# The table name used and created by CAS to hold audit logs in DynamoDb.
#
# cas.audit.dynamo-db.table-name: DynamoDbCasAuditRecords

# Type: java.lang.Integer
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Time offset.
#
# cas.audit.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Flag that indicates whether to use reaper.
#
# cas.audit.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-audit-dynamodb
# Owner: org.apereo.cas.configuration.model.support.dynamodb.AuditDynamoDbProperties
#
# Write capacity.
#
# cas.audit.dynamo-db.write-capacity: 10

# Type: java.lang.Integer
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Abbreviate fields and entries in the audit logs where possible by the
# given length. This typically is applied to long service URLs that are
# captured in audit logs. Negative/Zero values disable the abbreviation
# altogether.
#
# cas.audit.engine.abbreviation-length: 100

# Type: java.lang.String
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Request header to use to identify the client address. <p> If the
# application is sitting behind a load balancer, the client address
# typically ends up being the load balancer address itself. A common
# example for a header here would be {@code X-Forwarded-For} to glean
# the client address from the request, assuming the load balancer is
# configured correctly to pass that header along.
#
# cas.audit.engine.alternate-client-addr-header-name: X-Forwarded-For

# Type: java.lang.String
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Request header to use identify the server address.
#
# cas.audit.engine.alternate-server-addr-header-name: 

# Type: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties$AuditFormatTypes
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# The audit format to use in the logs.
# Available values are as
# follows:
# <ul><li>{@code DEFAULT}: Default audit
# format.</li><li>{@code JSON}: Output audit logs as JSON strings
#
# where necessary/possible.</li></ul>
#
# cas.audit.engine.audit-format: DEFAULT

# Type: java.lang.Boolean
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Whether auditing functionality should be enabled.
#
# cas.audit.engine.enabled: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Indicate a list of supported audit actions that should be excluded,
# filtered and ignored by CAS audit managers. Each supported action can
# be treated as a regular expression to match against built-in CAS
# actions.
#
# cas.audit.engine.excluded-actions: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Collection of HTTP headers that could be extracted from the request
# and tracked by the underlying audit engine and storage. By default,
# all request headers are tracked and stored.
#
# cas.audit.engine.http-request-headers: 

# Type: java.lang.Boolean
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Indicates whether catastrophic audit failures should be logged or
# whether errors should bubble up and thrown back.
#
# cas.audit.engine.ignore-audit-failures: false

# Type: java.lang.Boolean
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Whether ticket validation events in the audit log should include
# information about the assertion that is validated; things such as the
# principal id and attributes released.
#
# cas.audit.engine.include-validation-assertion: false

# Type: java.lang.Integer
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Retrieve audit records from storage, starting from now and going back
# the indicated number of days in history.
#
# cas.audit.engine.number-of-days-in-history: 30

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Indicate a list of supported audit actions that should be recognized,
# processed and recorded by CAS audit managers. Each supported action
# can be treated as a regular expression to match against built-in CAS
# actions.
#
# cas.audit.engine.supported-actions: 

# Type: java.lang.Boolean
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditEngineProperties
#
# Determines whether a local DNS lookup should be made to query for the
# CAS server address. <p> By default, the server is address is
# determined from the request. Aside from special headers, this option
# allows one to query DNS to look up the server address of the CAS
# server processing requests.
#
# cas.audit.engine.use-server-host-address: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.audit.groovy.template.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Execute the recording of audit records in async manner. This setting
# must almost always be set to true.
#
# cas.audit.jdbc.asynchronous: true

# Type: java.lang.Boolean
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.audit.jdbc.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.audit.jdbc.batch-size: 100

# Type: java.lang.Integer
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Allows one to trim the audit data by the specified length. A negative
# value disables the trimming process where the audit functionality no
# longer substrings the audit record.
#
# cas.audit.jdbc.column-length: 512

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.audit.jdbc.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.audit.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# A formatter function that receives the formatted date value and the
# date pattern as the first and second argument. Example: {@code
# TO_DATE('%s', '%s')}.
#
# cas.audit.jdbc.date-formatter-function: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Indicate the date formatter pattern used to fetch audit records from
# the database based on the record date. Default value is {@code
# yyyy-MM-dd 00:00:00.000000}.
#
# cas.audit.jdbc.date-formatter-pattern: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.audit.jdbc.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.audit.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.audit.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.audit.jdbc.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# The JDBC driver used to connect to the database.
#
# cas.audit.jdbc.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.audit.jdbc.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.audit.jdbc.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Allow hibernate to generate query statistics.
#
# cas.audit.jdbc.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.audit.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.audit.jdbc.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.audit.jdbc.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.audit.jdbc.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.audit.jdbc.leak-threshold: PT6S

# Type: java.lang.Integer
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Indicates how long audit records should be kept in the database. This
# is used by the clean-up criteria to clean up after stale audit
# records.
#
# cas.audit.jdbc.max-age-days: 180

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# The database connection password.
#
# cas.audit.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.audit.jdbc.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.audit.jdbc.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.audit.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.audit.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.audit.jdbc.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.audit.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.audit.jdbc.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.audit.jdbc.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.audit.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.audit.jdbc.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.audit.jdbc.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.audit.jdbc.read-only: false

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.audit.jdbc.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.audit.jdbc.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.audit.jdbc.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.audit.jdbc.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.audit.jdbc.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.audit.jdbc.schedule.start-delay: PT15S

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# SQL query that provides a template to fetch audit records. Accepts two
# parameters using {@code %s} for table name and audit date.
#
# cas.audit.jdbc.select-sql-query-template: 

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# The database connection URL.
#
# cas.audit.jdbc.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-audit-jdbc
# Owner: org.apereo.cas.configuration.model.core.audit.AuditJdbcProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.audit.jdbc.user: sa

# Type: java.lang.Boolean
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Execute the recording of audit records in async manner. This setting
# must almost always be set to true.
#
# cas.audit.mongo.asynchronous: true

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Name of the database to use for authentication.
#
# cas.audit.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.audit.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.audit.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# MongoDb database instance name.
#
# cas.audit.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.audit.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.audit.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# MongoDb database password for authentication.
#
# cas.audit.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.audit.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.audit.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.audit.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.audit.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.audit.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.audit.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# MongoDb database port.
#
# cas.audit.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.audit.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.audit.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.audit.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.audit.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.audit.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Whether connections require SSL.
#
# cas.audit.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# MongoDb database connection timeout.
#
# cas.audit.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# MongoDb database user for authentication.
#
# cas.audit.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-audit-mongo
# Owner: org.apereo.cas.configuration.model.core.audit.AuditMongoDbProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.audit.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.Boolean
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Execute the recording of audit records in async manner. This setting
# must almost always be set to true.
#
# cas.audit.redis.asynchronous: true

# Type: java.io.File
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.audit.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.audit.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.audit.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.audit.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.audit.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.audit.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.audit.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.audit.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.audit.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.audit.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.audit.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.audit.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.audit.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.audit.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Connection timeout.
#
# cas.audit.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Database index used by the connection factory.
#
# cas.audit.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.audit.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Redis server host.
#
# cas.audit.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.audit.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.audit.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.audit.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Login password of the redis server.
#
# cas.audit.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.audit.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.audit.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.audit.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.audit.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.audit.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.audit.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.audit.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.audit.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.audit.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.audit.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.audit.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.audit.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.audit.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.audit.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Redis server port.
#
# cas.audit.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Redis protocol version.
#
# cas.audit.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.audit.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.audit.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.audit.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.audit.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.audit.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.audit.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.audit.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Command timeout.
#
# cas.audit.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Database URI.
#
# cas.audit.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.audit.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Login username of the redis server.
#
# cas.audit.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-audit-redis
# Owner: org.apereo.cas.configuration.model.support.redis.AuditRedisProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.audit.redis.verify-peer: true

# Type: java.lang.Boolean
# Module: cas-server-support-audit-rest
# Owner: org.apereo.cas.configuration.model.core.audit.AuditRestProperties
#
# Make storage requests asynchronously.
#
# cas.audit.rest.asynchronous: true

# Type: java.lang.String
# Module: cas-server-support-audit-rest
# Owner: org.apereo.cas.configuration.model.core.audit.AuditRestProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.audit.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-audit-rest
# Owner: org.apereo.cas.configuration.model.core.audit.AuditRestProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.audit.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-audit-rest
# Owner: org.apereo.cas.configuration.model.core.audit.AuditRestProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.audit.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-audit-rest
# Owner: org.apereo.cas.configuration.model.core.audit.AuditRestProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.audit.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-audit-rest
# Owner: org.apereo.cas.configuration.model.core.audit.AuditRestProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.audit.rest.url: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because audit-format is moved into the engine namespace.
# Replace with: audit-format is moved into the engine namespace.
#
# 
#
# cas.audit.slf4j.audit-format: 

# Type: java.lang.String
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditSlf4jLogProperties
#
# Control and define fields that can be accepted by the audit log.
# Accepted values are: <ul> <li>{@code who}</li> <li>{@code what}</li>
# <li>{@code action}</li> <li>{@code application}</li> <li>{@code
# when}</li> <li>{@code user_agent}</li> <li>{@code client_ip}</li>
# <li>{@code server_ip}</li> <li>{@code geo_location}</li> <li>{@code
# headers}</li> </ul>
#
# cas.audit.slf4j.auditable-fields: who,what,when,action,client_ip,server_ip,geo_location

# Type: java.lang.Boolean
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditSlf4jLogProperties
#
# Decide whether Slf4j audits should be enabled.
#
# cas.audit.slf4j.enabled: true

# Type: java.lang.String
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditSlf4jLogProperties
#
# Character to separate audit fields if single-line audits are used.
#
# cas.audit.slf4j.singleline-separator: |

# Type: java.lang.Boolean
# Module: cas-server-core-audit
# Owner: org.apereo.cas.configuration.model.core.audit.AuditSlf4jLogProperties
#
# Indicates whether audit logs should be recorded as a single-line. <p>
# By default, audit logs are split into multiple lines where each action
# and activity takes up a full line. This is a more compact version.
#
# cas.audit.slf4j.use-single-line: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase. The credential criteria may be one of the following
# options:<ul> <li>1) A regular expression pattern that is tested
# against the credential identifier.</li> <li>2) A fully qualified class
# name of your own design that implements {@code Predicate}.</li> <li>3)
# Path to an external Groovy script that implements the same
# interface.</li> </ul>
#
# cas.authn.accept.credential-criteria: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties
#
# Indicates whether the authentication strategy is enabled. The strategy
# may also be disabled explicitly if the {@link #users} is left blank.
#
# cas.authn.accept.enabled: true

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.accept.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.accept.order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.accept.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.accept.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.accept.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.accept.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.accept.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.accept.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.accept.password-encoder.type: NONE

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Indicates whether account state handling should be enabled to process
# warnings or errors reported back from the authentication response,
# produced by the source.
#
# cas.authn.accept.password-policy.account-state-handling-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Indicates if warning should be displayed, when the ldap attribute
# value matches the {@link #warningAttributeValue}.
#
# cas.authn.accept.password-policy.display-warning-on-match: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Whether password policy should be enabled.
#
# cas.authn.accept.password-policy.enabled: true

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPasswordPolicyProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.accept.password-policy.groovy.location: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# When dealing with FreeIPA, indicates the number of allows login
# failures.
#
# cas.authn.accept.password-policy.login-failures: 5

# Type: java.util.Map<java.lang.String,java.lang.Class<? extends javax.security.auth.login.LoginException>>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Key-value structure (Map) that indicates a list of boolean attributes
# as keys. If either attribute value is true, indicating an account
# state is flagged, the corresponding error can be thrown. Example
# {@code accountLocked=javax.security.auth.login.AccountLockedException}
#
# cas.authn.accept.password-policy.policy-attributes: 

# Type: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties$PasswordPolicyHandlingOptions
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Decide how authentication should handle password policy changes.
#
# Available values are as follows:
# <ul><li>{@code DEFAULT}: Default
# option to handle policy changes.</li><li>{@code GROOVY}: Handle
# account password policies via Groovy.</li><li>{@code
# REJECT_RESULT_CODE}: Strategy to only activate password policy
# if
# the authentication response code is not blocked.</li></ul>
#
# cas.authn.accept.password-policy.strategy: DEFAULT

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Always display the password expiration warning regardless.
#
# cas.authn.accept.password-policy.warn-all: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings in case the entry carries this attribute.
#
# cas.authn.accept.password-policy.warning-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings in case the entry carries an attribute {@link
# #warningAttributeName} whose value matches this field.
#
# cas.authn.accept.password-policy.warning-attribute-value: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# This is used to calculate a warning period to see if account expiry is
# within the calculated window.
#
# cas.authn.accept.password-policy.warning-days: 30

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.accept.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.accept.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.accept.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.accept.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.accept.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.accept.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.accept.state: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.generic.AcceptAuthenticationProperties
#
# Accepted users for authentication, in the syntax of {@code
# uid::password}.
#
# cas.authn.accept.users: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationIPIntelligenceProperties.BlackDot
#
# Include your contact information so you can be notified if a problem
# arise or if there are core changes.
#
# cas.authn.adaptive.ip-intel.black-dot.email-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationIPIntelligenceProperties.BlackDot
#
# <ul> <li>{@code DYNA_LIST}: If you get a value between 0 - 1,
# exclusive (like 0.99, 0.99999, 0.97), these values are generated by
# dynamic checks which looks for characteristics of the given IP. IPs
# that are either manually banned or seen on a public proxy site will
# return a value of 1. If you only want manually banned or public
# proxies, then in your code just look for the value "1". However, there
# are many IPs that haven't gone through manual review and IPs can
# change behavior very frequently (which is why dynamic checks exist in
# the first place). If you only look for the value of "1", then expect
# to have more proxy / VPN / bad IPs go through your system, however,
# false positives are less likely if you use the dynamic ban list
# option. If you wish to use only manually banned and public proxy IPs,
# append the parameter flags=m, the system will only return a result of
# 0 or 1. This option is the best to start off with that will have a
# noticeable impact in bot / proxy / VPN traffic, especially if you
# don't have any data sets to test with the system.</li> <li>{@code
# DYNA_CHECK}: In this scenario, you want to use dynamic checks as well
# but you want to skip additional checks to see if the IP is a bad ip
# (see What do you mean by "Bad IP"?). In this mode, some bad IPs are
# still detected but the system does not attempt to go through the full
# bad IPs check because the time for the extra checks vary wildly
# (between an extra 200ms to 2 seconds). In this mode, false positives
# are more likely than dynamic ban lists only. Scores are lower compared
# to the full IP check (without any flag options) because less
# attributes are considered. If you wish to use dynamic ban list and
# dynamic checks only, append the parameter flags=b. This option is the
# best if dynamic ban lists isn't catching enough IPs but you don't want
# to run the full check because it takes too long and/or you want to
# have a predictable execution time.</li> <li>{@code FULL}: Let the
# system to do a full lookup with one query.</li> </ul>
#
# cas.authn.adaptive.ip-intel.black-dot.mode: DYNA_LIST

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationIPIntelligenceProperties.BlackDot
#
# URL endpoint of the service to make API calls.
#
# cas.authn.adaptive.ip-intel.black-dot.url: http://check.getipintel.net/check.php?ip=%s

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAdaptiveAuthenticationIPIntelligenceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.adaptive.ip-intel.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.RestfulAdaptiveAuthenticationIPIntelligenceProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.adaptive.ip-intel.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.RestfulAdaptiveAuthenticationIPIntelligenceProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.adaptive.ip-intel.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.RestfulAdaptiveAuthenticationIPIntelligenceProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.adaptive.ip-intel.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.RestfulAdaptiveAuthenticationIPIntelligenceProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.adaptive.ip-intel.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.RestfulAdaptiveAuthenticationIPIntelligenceProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.adaptive.ip-intel.rest.url: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationPolicyProperties
#
# Comma-separated list of strings representing browser user agents to be
# rejected from participating in authentication transactions.
#
# cas.authn.adaptive.policy.reject-browsers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationPolicyProperties
#
# Comma-separated list of strings representing countries to be rejected
# from participating in authentication transactions.
#
# cas.authn.adaptive.policy.reject-countries: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationPolicyProperties
#
# Comma-separated list of strings representing IP addresses to be
# rejected from participating in authentication transactions.
#
# cas.authn.adaptive.policy.reject-ip-addresses: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationPolicyProperties
#
# A map of ({@code mfaProviderId -> adaptiveRegexPattern}) that tells
# CAS when to trigger an MFA authentication transaction. <p> This
# property binds a valid mfa provider to an adaptive regex pattern
# representing either IP address, user-agent or geolocation. When either
# of those collected pieces of adaptive data matches configured regex
# pattern during authentication event, an MFA authentication transaction
# is triggered for an MFA provider represented by the map's key. </p>
#
# cas.authn.adaptive.policy.require-multifactor: 

# Type: java.util.List<org.apereo.cas.configuration.model.core.authentication.TimeBasedAuthenticationProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AdaptiveAuthenticationPolicyProperties
#
# This property binds a valid mfa provider to a collection of rules that
# deal with triggering mfa based on that provider based on properties of
# date/time. One may want to force mfa during weekends, after hours, etc
# and the ruleset provides a modest configuration set where time can
# also be treated as trigger.
#
# cas.authn.adaptive.policy.require-timed-multifactor: 

# Type: java.util.List<String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.TimeBasedAuthenticationProperties
#
# Trigger mfa on the following days of the week.
#
# cas.authn.adaptive.policy.require-timed-multifactor[].on-days: 

# Type: long
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.TimeBasedAuthenticationProperties
#
# Trigger mfa after this hour, specified in 24-hour format.
#
# cas.authn.adaptive.policy.require-timed-multifactor[].on-or-after-hour: 20

# Type: long
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.TimeBasedAuthenticationProperties
#
# Trigger mfa before this hour, specified in 24-hour format.
#
# cas.authn.adaptive.policy.require-timed-multifactor[].on-or-before-hour: 7

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.TimeBasedAuthenticationProperties
#
# The mfa provider id that should be triggered.
#
# cas.authn.adaptive.policy.require-timed-multifactor[].provider-id: 

# Type: java.lang.Boolean
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationUserAgentProperties
#
# Enable user-agent checking and criteria to calculate risky
# authentication attempts.
#
# cas.authn.adaptive.risk.agent.enabled: false

# Type: java.lang.Long
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationCoreProperties
#
# Indicates how far back the search in authentication history must go in
# order to locate authentication events.
#
# cas.authn.adaptive.risk.core.days-in-recent-history: 30

# Type: java.lang.Double
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationCoreProperties
#
# The risk threshold factor beyond which the authentication event may be
# considered risky.
#
# cas.authn.adaptive.risk.core.threshold: 0.6

# Type: java.lang.Boolean
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationDateTimeProperties
#
# Enable date/time checking and criteria to calculate risky
# authentication attempts.
#
# cas.authn.adaptive.risk.date-time.enabled: false

# Type: java.lang.Integer
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationDateTimeProperties
#
# The hourly window used before and after each authentication event in
# calculation to establish a pattern that can then be compared against
# the threshold.
#
# cas.authn.adaptive.risk.date-time.window-in-hours: 2

# Type: java.lang.Boolean
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationDeviceFingerprintProperties
#
# Enable date/time checking and criteria to calculate risky
# authentication attempts.
#
# cas.authn.adaptive.risk.device-fingerprint.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationGeoLocationProperties
#
# Enable geolocation checking and criteria to calculate risky
# authentication attempts.
#
# cas.authn.adaptive.risk.geo-location.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationIpAddressProperties
#
# Enable IP address checking and criteria to calculate risky
# authentication attempts.
#
# cas.authn.adaptive.risk.ip.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationResponseProperties
#
# If an authentication attempt is deemed risky, block the response and
# do not allow further attempts.
#
# cas.authn.adaptive.risk.response.block-attempt: false

# Type: java.lang.String
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationResponseProperties
#
# Risk confirmation attempts are only evaluated up to a point in
# history, controlled by this setting. That is to say, authentication
# attempts that are detected as risky are evaluated against previous
# confirmations in history using this time window. Once we move beyond
# this point in the history of authentication attempts, the
# confirmations no longer hold and the user will be asked to verify
# their attempt again.
#
# cas.authn.adaptive.risk.response.get-risk-verification-history: P7D

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.authn.adaptive.risk.response.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.authn.adaptive.risk.response.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.authn.adaptive.risk.response.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.authn.adaptive.risk.response.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.adaptive.risk.response.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.adaptive.risk.response.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.authn.adaptive.risk.response.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.authn.adaptive.risk.response.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.authn.adaptive.risk.response.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.adaptive.risk.response.mail.validate-addresses: false

# Type: java.lang.String
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationResponseProperties
#
# If an authentication attempt is deemed risky, force a multi-factor
# authentication event noted by the provider id here.
#
# cas.authn.adaptive.risk.response.mfa-provider: 

# Type: java.lang.String
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationResponseProperties
#
# Control the expiration window of the verification token that can be
# used to verify and confirm risky authentication attempts.
#
# cas.authn.adaptive.risk.response.risk-verification-token-expiration: PT5M

# Type: java.lang.String
# Module: cas-server-support-electrofence
# Owner: org.apereo.cas.configuration.model.core.authentication.risk.RiskBasedAuthenticationResponseProperties
#
# If an authentication attempt is deemed risky, communicate the nature
# of this attempt back to the application via a special attribute in the
# final CAS response indicated here.
#
# cas.authn.adaptive.risk.response.risky-authentication-attribute: triggeredRiskBasedAuthentication

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# Principal attribute names that indicates the destination phone number
# for this SMS message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.authn.adaptive.risk.response.sms.attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The from address for the message.
#
# cas.authn.adaptive.risk.response.sms.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The body of the SMS message.
#
# cas.authn.adaptive.risk.response.sms.text: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.attribute-repository.attribute-definition-store.json.location: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesProperties
#
# Retrieve attributes from multiple Microsoft Graph instances.
#
# cas.authn.attribute-repository.azure-active-directory: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Base API url used to contact microsoft graph for calls.
#
# cas.authn.attribute-repository.azure-active-directory[].api-base-url: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Comma-separated attributes and user properties to fetch from microsoft
# graph.
# If attributes are specified here, they would be the only ones
# requested and fetched.
# If this field is left blank, a default set of
# attributes are fetched and returned.
#
# cas.authn.attribute-repository.azure-active-directory[].attributes: 

# Type: boolean
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Whether attribute repository should consider the underlying
#
# attribute names in a case-insensitive manner.
#
# cas.authn.attribute-repository.azure-active-directory[].case-insensitive: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Client id of the registered app in microsoft azure portal.
#
# cas.authn.attribute-repository.azure-active-directory[].client-id: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Client secret of the registered app in microsoft azure portal.
#
# cas.authn.attribute-repository.azure-active-directory[].client-secret: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Domain that is appended to usernames when doing lookups.
# The {@code
# @} is automatically included.
#
# cas.authn.attribute-repository.azure-active-directory[].domain: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Grant type used to fetch access tokens; defaults to {@code
# client_credentials}.
#
# cas.authn.attribute-repository.azure-active-directory[].grant-type: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.azure-active-directory[].id: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Adjust the logging level of the API calls. Defaults to {@code
# basic}.
# Accepted values are {@code none,headers,basic,body}.
#
# cas.authn.attribute-repository.azure-active-directory[].logging-level: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Base login url used to fetch access tokens.
#
# cas.authn.attribute-repository.azure-active-directory[].login-base-url: 

# Type: int
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
#
# Can be used to explicitly position this source in chain and affects
#
# merging strategies.
#
# cas.authn.attribute-repository.azure-active-directory[].order: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Resource to fetch access tokens for; defaults to the graph api url.
#
# cas.authn.attribute-repository.azure-active-directory[].resource: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# Scope used when fetching access tokens.
#
# cas.authn.attribute-repository.azure-active-directory[].scope: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAttributesProperties
#
# The microsoft tenant id.
#
# cas.authn.attribute-repository.azure-active-directory[].tenant: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties$AggregationStrategyTypes
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# Indicates how the results of multiple attribute repositories should be
# aggregated together.
# Available values are as follows:
#
# <ul><li>{@code MERGE}: Default. Designed to query multiple
# repositories
# in order and merge the results into a single result
# set.</li><li>{@code CASCADE}: Query multiple repositories in order and
# merge the results into
# a single result set. As each repository is
# queried
# the attributes from the first query in the result set are
#
# used as the query for the next repository.</li></ul>
#
# cas.authn.attribute-repository.core.aggregation: MERGE

# Type: java.util.Set<java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# CAS provides the ability to release a bundle of principal attributes
# to all services by default. This bundle is not defined on a
# per-service basis and is always combined with attributes produced by
# the specific release policy of the service, such that for instance,
# you can devise rules to always release {@code givenName} and {@code
# cn} to every application, and additionally allow other specific
# principal attributes for only some applications per their attribute
# release policy.
#
# cas.authn.attribute-repository.core.default-attributes-to-release: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# Indicates the global cache expiration period, once attributes are
# fetched from the underlying attribute repository. A zero or negative
# value indicates that no attribute caching should take place where
# attributes must always be fetched from the source.
#
# cas.authn.attribute-repository.core.expiration-time: 30

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# Expiration caching time unit for attributes.
#
# cas.authn.attribute-repository.core.expiration-time-unit: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# Indicates the global cache size used to store attributes retrieved
# from the attribute repository.
#
# cas.authn.attribute-repository.core.maximum-cache-size: 10000

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties$MergingStrategyTypes
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# Merging strategies can be used to resolve conflicts when the same
# attributes are found from multiple sources. A merging strategy is used
# to handle conflicts for both principal attributes as well as those
# that are captured by the authentication attempt. Conflicts arise when
# the multiple attribute sources or repositories produce the same
# attribute with the same name, or when there are multiple legs in an
# authentication flow that produce the same attribute as authentication
# metadata for each leg of the attempt (i.e. when going through MFA
# flows).
# Available values are as follows:
# <ul><li>{@code REPLACE}:
# Replace attributes.  Overwrites existing attribute values, if
# any.</li><li>{@code ADD}: Add attributes.
# Retains existing attribute
# values if any, and ignores values from subsequent sources in the
# resolution chain.</li><li>{@code SOURCE}: No merging.
# Doesn't merge
# attributes, and returns the original collection of attributes as
# passed.</li><li>{@code DESTINATION}: No merging. Ignore the collection
# of original attributes that are passed
# and always favor what is
# supplied as a subsequent source and an override.</li><li>{@code
# MULTIVALUED}: Multivalued attributes.
# Combines all values into a
# single attribute, essentially creating a multi-valued
# attribute.</li></ul>
#
# cas.authn.attribute-repository.core.merger: REPLACE

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# Recover from LDAP exceptions and continue with partial results.
# Otherwise, die and do not allow to log in.
#
# cas.authn.attribute-repository.core.recover-exceptions: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# In the event that multiple attribute repositories are defined, setting
# this option to {@code true} forces all repositories to produce a
# person object. If any of the repositories fails to produce a person or
# person attributes, the resolution engine will halt to short-circuit
# the process, failing to resolve the person altogether.
#
# cas.authn.attribute-repository.core.require-all-repository-sources: false

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesCoreProperties
#
# When {@link #aggregation} is set to {@link
# AggregationStrategyTypes#CASCADE}, this setting controls whether
# subsequent attribute repositories need to be contacted for person
# attributes, if the first attribute repository's query does not produce
# any results.
#
# cas.authn.attribute-repository.core.stop-cascading-when-no-initial-results: true

# Type: java.util.List<org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalAttributesProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesProperties
#
# Retrieve attributes from multiple Groovy scripts.
#
# cas.authn.attribute-repository.groovy: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.groovy[].id: 

# Type: Resource
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalAttributesProperties
#
# The location of the resource. Resources can be URLs, or
# files found
# either on the classpath or outside somewhere
# in the file system.
#
# <p>
# In the event the configured resource is a Groovy script,
# specially if the script set to reload on changes,
# you may need to
# adjust the total number of {@code inotify} instances.
# On Linux, you
# may need to add the following line to {@code /etc/sysctl.conf}:
#
# {@code fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.attribute-repository.groovy[].location: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
#
# Can be used to explicitly position this source in chain and affects
#
# merging strategies.
#
# cas.authn.attribute-repository.groovy[].order: 

# Type: AttributeRepositoryStates
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.groovy[].state: ACTIVE

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GrouperPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.grouper.id: 

# Type: java.lang.Integer
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GrouperPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
# Can be used to explicitly position this source in chain and affects
# merging strategies.
#
# cas.authn.attribute-repository.grouper.order: 0

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GrouperPrincipalAttributesProperties
#
# Custom parameters defined as a {@link Map} to pass onto the attribute
# repository which ultimately will be passed onto the grouper client.
# Key is the parameter name and value is the parameter value.
#
# cas.authn.attribute-repository.grouper.parameters: 

# Type: org.apereo.cas.configuration.model.core.authentication.AttributeRepositoryStates
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GrouperPrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.grouper.state: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GrouperPrincipalAttributesProperties
#
# Indicate how the username passed to the attribute repository should be
# set and treated by the grouper client to look up records. <p> Accepted
# values are: {@code SUBJECT_IDENTIFIER}, {@code
# SUBJECT_ATTRIBUTE_NAME}, {@code SUBJECT_ID}.
#
# cas.authn.attribute-repository.grouper.subject-type: SUBJECT_ID

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.GrouperPrincipalAttributesProperties
#
# The attribute name that would be used to look up and determine the
# user id from the query map. The value linked to this attribute would
# be used as the username or subject by the attribute repository to pass
# on to the ultimate source to locate the user record.
#
# cas.authn.attribute-repository.grouper.username-attribute: username

# Type: java.util.List<org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesProperties
#
# Retrieve attributes from multiple JDBC repositories.
#
# cas.authn.attribute-repository.jdbc: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Map of attributes to fetch from the database.
# Attributes are defined
# using a key-value structure
# where CAS allows the attribute name/key
# to be renamed virtually
# to a different attribute. The key is the
# attribute fetched
# from the data source and the value is the
# attribute name CAS should
# use for virtual renames.
# Attributes may
# be allowed to be virtually renamed and remapped. The key in the
#
# attribute map is the original attribute,
# and the value should be the
# virtually-renamed attribute.
#
# cas.authn.attribute-repository.jdbc[].attributes: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The default auto-commit behavior of connections in the pool.
#
# Determined whether queries such as update/insert should be immediately
# executed
# without waiting for an underlying transaction.
#
# cas.authn.attribute-repository.jdbc[].autocommit: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.attribute-repository.jdbc[].batch-size: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# When constructing the final person object from the attribute
# repository,
# indicate how the username should be canonicalized.
#
# Accepted values are:
# <ul>
# <li>{@code UPPER}: Transform the final
# person id into uppercase characters.</li>
# <li>{@code LOWER}:
# Transform the final person id into lowercase characters.</li>
#
# <li>{@code NONE}: Do nothing.</li>
# </ul>
#
# cas.authn.attribute-repository.jdbc[].case-canonicalization: NONE

# Type: java.util.List<String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Collection of attributes, used to build the SQL query, that should go
# through
# a case canonicalization process defined as {@code
# key->value}.
# Note that the key is not the name of
# the attribute,
# but the query attribute that is used in generating the
# final query
# clause (i.e. {@code username}). The value can be {@code NONE, LOWER,
# UPPER}.
# <p>
# It's also possible to define a list of attributes
# without a
# case canonicalization override such as {@code username,
# attribute2}
# in which case {@link #caseCanonicalization} will dictate
# the final outcome.
#
# cas.authn.attribute-repository.jdbc[].case-insensitive-query-attributes: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Used only when there is a mapping of many rows to one user.
# This is
# done using a key-value structure where the key is the
# name of the
# "attribute name" column  the value is the name of the "attribute
# value" column.
# If the table structure is as such:
# &lt;pre&gt;
#
# -----------------------------
# uid | attr_name  | attr_value
#
# -----------------------------
# tom | first_name | Thomas
#
# &lt;/pre&gt;
# Then a column mapping must be specified to teach CAS to
# use {@code attr_name}
# and {@code attr_value} for attribute names and
# values.
#
# cas.authn.attribute-repository.jdbc[].column-mappings: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Indicates the maximum number of milliseconds that the service
# can
# wait to obtain a connection.
#
# cas.authn.attribute-repository.jdbc[].connection-timeout: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified.
# Will attempt to locate the data source object as is.
#
# cas.authn.attribute-repository.jdbc[].data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema.
# By default, creates and drops the schema automatically when
# a session is starts and ends.
# Setting the value to {@code validate}
# or {@code none} may be more desirable for production,
# but any of the
# following options can be used:
# <ul>
#     <li>{@code validate}:
# Validate the schema, but make no changes to the database.</li>
#    
# <li>{@code update}: Update the schema.</li>
#     <li>{@code create}:
# Create the schema, destroying previous data.</li>
#     <li>{@code
# create-drop}: Drop the schema at the end of the session.</li>
#    
# <li>{@code none}: Do nothing.</li>
# </ul>
# <p>
# Note that during a
# version migration where any schema has changed {@code create-drop}
# will result
# in the loss of all data as soon as CAS is started. For
# transient data like tickets this is probably
# not an issue, but in
# cases like the audit table important data could be lost. Using
# `update`, while safe
# for data, is confirmed to result in invalid
# database state. {@code validate} or {@code none} settings
# are likely
# the only safe options for production use.
# </p>
# For more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.attribute-repository.jdbc[].ddl-auto: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.attribute-repository.jdbc[].default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.attribute-repository.jdbc[].default-schema: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc)
# which allows such
# software to translate its generic SQL statements into vendor specific
# DDL, DML.
#
# cas.authn.attribute-repository.jdbc[].dialect: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.attribute-repository.jdbc[].driver-class: 

# Type: long
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Set the pool initialization failure timeout.
# <ul>
# <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization.
# The calling thread will be blocked from continuing
# until a successful connection
# to the database, or until the timeout
# is reached.  If the timeout is reached, then
# a {@code
# PoolInitializationException} will be thrown. </li>
# <li>A value of
# zero will <i>not</i>  prevent the pool from starting in the
# case
# that a connection cannot be obtained. However, upon start the pool
# will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery}
# and {@code connectionInitSql} are valid.  If
# those validations fail, an exception
# will be thrown.  If a
# connection cannot be obtained, the validation is skipped
# and the the
# pool will start and continue to try to obtain connections in the
#
# background. This can mean that callers to {@code
# DataSource#getConnection()} may
# encounter exceptions. </li>
# <li>A
# value less than zero will <i>not</i> bypass any connection attempt
# and
# validation during startup, and therefore the pool will start
# immediately.  The
# pool will continue to try to obtain connections in
# the background. This can mean
# that callers to {@code
# DataSource#getConnection()} may encounter exceptions. </li>
# </ul>
#
# Note that if this timeout value is greater than or equal to zero (0),
# and therefore an
# initial connection validation is performed, this
# timeout does not override the
# {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this
# timeout is
# applied.  The default value is one millisecond.
#
# cas.authn.attribute-repository.jdbc[].fail-fast-timeout: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.attribute-repository.jdbc[].fetch-size: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.attribute-repository.jdbc[].generate-statistics: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The SQL query to be executed to test the validity of connections.
#
# This is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.attribute-repository.jdbc[].health-query: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.jdbc[].id: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.attribute-repository.jdbc[].idle-timeout: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test,
# in their own
# transaction.
# <p>
# Since these are typically read-only queries, it
# is rarely necessary to encapsulate them in their own transaction.
#
# This property only applies if {@link #autocommit} is disabled.
#
# cas.authn.attribute-repository.jdbc[].isolate-internal-queries: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Defines the isolation level for transactions.
#
# cas.authn.attribute-repository.jdbc[].isolation-level-name: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message
# is logged indicating a possible connection leak.
#
# cas.authn.attribute-repository.jdbc[].leak-threshold: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
#
# Can be used to explicitly position this source in chain and affects
#
# merging strategies.
#
# cas.authn.attribute-repository.jdbc[].order: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The database connection password.
#
# cas.authn.attribute-repository.jdbc[].password: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.attribute-repository.jdbc[].physical-naming-strategy-class-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection
# will never be tested by the keepalive
# thread, only when it is idle will it be tested.
# Default is zero,
# which disables this feature.
#
# cas.authn.attribute-repository.jdbc[].pool.keep-alive-time: 0

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep
# in the pool,
# including both idle and in-use connections.
#
# cas.authn.attribute-repository.jdbc[].pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait
#
# while attempting to connect to a database.
# <p>
# A value of zero
# specifies that the timeout is the default system timeout
# if there is
# one; otherwise, it specifies that there is no timeout.
#
# cas.authn.attribute-repository.jdbc[].pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection
# reaches this timeout, even if recently
# used,
# it will be retired from the pool. An in-use connection will
# never be retired, only when it is idle will it be removed.
#
# cas.authn.attribute-repository.jdbc[].pool.maximum-lifetime: PT10M

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed
# to reach,
# including both idle and in-use connections.
#
# cas.authn.attribute-repository.jdbc[].pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for
# the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.attribute-repository.jdbc[].pool.name: 

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed.
# <p>
# There is a
# performance impact when pool suspension is enabled.
# Unless you need
# it (for a redundancy system for example) do not enable it.
#
# cas.authn.attribute-repository.jdbc[].pool.suspension: 

# Type: long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the
# pool will wait for a
# connection to be validated as alive.
#
# cas.authn.attribute-repository.jdbc[].pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Defines the propagation behavior for transactions.
#
# cas.authn.attribute-repository.jdbc[].propagation-behavior-name: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.attribute-repository.jdbc[].properties: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Define a {@code Map} of query attribute names to data-layer attribute
# names to use when building the query.
# The key is always the name of
# the query attribute that is defined by CAS and passed internally,
#
# and the value is the database column that should map.
#
# cas.authn.attribute-repository.jdbc[].query-attributes: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Indicates how multiple attributes in a query should be concatenated
# together.
# Accepted values are:
# * <ul>
# <li>{@code AND}:
# Concatenate attributes in the query using an AND-clause.</li>
#
# <li>{@code OR}: Concatenate attributes in the query using an
# OR-clause.</li>
# </ul>
#
# cas.authn.attribute-repository.jdbc[].query-type: AND

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.attribute-repository.jdbc[].read-only: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# If the SQL should only be run if all attributes listed in the mappings
# exist in the query.
#
# cas.authn.attribute-repository.jdbc[].require-all-attributes: true

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Designed to work against a table where there is a mapping of one row
# to one user.
# The fields in the table structure is assumed to match
# {@code username|name|lastname|address}
# where there is only a single
# row per user.
# Setting this setting to {@code false} will force CAS
# to work against a table where
# there is a mapping of one row to one
# user.
# The fields in the table structure is assumed to match {@code
# username|attr_name|attr_value}
# where there is more than one row per
# username.
#
# cas.authn.attribute-repository.jdbc[].single-row: true

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The SQL statement to execute and fetch attributes.
# The syntax of the
# query must be {@code SELECT * FROM table WHERE {0}}.
# The {@code
# WHERE} clause is dynamically generated by CAS.
#
# cas.authn.attribute-repository.jdbc[].sql: 

# Type: AttributeRepositoryStates
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.jdbc[].state: ACTIVE

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The database connection URL.
#
# cas.authn.attribute-repository.jdbc[].url: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# The database user.
# <p>
# The database user must have sufficient
# permissions to be able to handle
# schema changes and updates, when
# needed.
#
# cas.authn.attribute-repository.jdbc[].user: 

# Type: java.util.List<String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcPrincipalAttributesProperties
#
# Username attribute(s) to use when running the SQL query.
#
# cas.authn.attribute-repository.jdbc[].username: 

# Type: java.util.List<org.apereo.cas.configuration.model.core.authentication.JsonPrincipalAttributesProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesProperties
#
# Retrieve attributes from multiple JSON file repositories.
#
# cas.authn.attribute-repository.json: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.JsonPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.json[].id: 

# Type: Resource
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.JsonPrincipalAttributesProperties
#
# The location of the resource. Resources can be URLs, or
# files found
# either on the classpath or outside somewhere
# in the file system.
#
# <p>
# In the event the configured resource is a Groovy script,
# specially if the script set to reload on changes,
# you may need to
# adjust the total number of {@code inotify} instances.
# On Linux, you
# may need to add the following line to {@code /etc/sysctl.conf}:
#
# {@code fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.attribute-repository.json[].location: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.JsonPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
#
# Can be used to explicitly position this source in chain and affects
#
# merging strategies.
#
# cas.authn.attribute-repository.json[].order: 

# Type: AttributeRepositoryStates
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.JsonPrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.json[].state: ACTIVE

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesProperties
#
# Retrieve attributes from multiple LDAP servers.
#
# cas.authn.attribute-repository.ldap: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.authn.attribute-repository.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.attribute-repository.ldap[].allow-multiple-entries: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Map of attributes to fetch from the source.
# Attributes are defined
# using a key-value structure
# where CAS allows the attribute name/key
# to be renamed virtually
# to a different attribute. The key is the
# attribute fetched
# from the data source and the value is the
# attribute name CAS should
# use for virtual renames.
# <p>
#
# Attributes may be allowed to be virtually renamed and remapped. The
# key in the
# attribute map is the original attribute,
# and the value
# should be the virtually-renamed attribute.
# <p>
# To fetch and
# resolve attributes that carry tags/options, such as {@code
# homePostalAddress;lang-jp}
# consider tagging the mapped attribute as
# such: {@code affiliation=affiliation;}.
# <p>
# Values may be
# separated by a comma, which allows you to rename the source
# attribute
# into multiple CAS attributes. For example {@code
# mail=mail,email} would fetch the {@code mail}
# attribute from the
# data source and virtually rename it into two CAS attributes: {@code
# mail} and {@code email}.
#
# cas.authn.attribute-repository.ldap[].attributes: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Base DN to use.
# There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating
# the LDAP configuration block for each individual
# base-dn, each entry can be specified
# and joined together using a
# special delimiter character. The user DN is retrieved using the
# combination of all base-dn and DN
# resolvers in the order defined. DN
# resolution should fail if multiple DNs are found. Otherwise the first
# DN found is returned.
# Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.attribute-repository.ldap[].base-dn: 

# Type: java.util.List<String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.authn.attribute-repository.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.attribute-repository.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.authn.attribute-repository.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.authn.attribute-repository.ldap[].block-wait-time: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.attribute-repository.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.authn.attribute-repository.ldap[].connection-strategy: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.attribute-repository.ldap[].disable-pooling: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.authn.attribute-repository.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Set if search referrals should be followed.
#
# cas.authn.attribute-repository.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.attribute-repository.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.ldap[].id: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.attribute-repository.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.authn.attribute-repository.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Keystore password.
#
# cas.authn.attribute-repository.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.attribute-repository.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.attribute-repository.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.attribute-repository.ldap[].max-pool-size: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.authn.attribute-repository.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Name of the LDAP handler.
#
# cas.authn.attribute-repository.ldap[].name: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
#
# Can be used to explicitly position this source in chain and affects
#
# merging strategies.
#
# cas.authn.attribute-repository.ldap[].order: 

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Request that the server return results in batches of a
# specific
# size. See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>.
# This control is often
# used to work around server result size
# limits.
# A negative/zero value disables paged requests.
#
# cas.authn.attribute-repository.ldap[].page-size: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.authn.attribute-repository.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.authn.attribute-repository.ldap[].prune-period: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Define a {@code Map} of query attribute names to data-layer attribute
# names to use when building the query.
# The key is always the name of
# the query attribute that is defined by CAS and passed internally,
#
# and the value is the column/field that should map.
#
# cas.authn.attribute-repository.ldap[].query-attributes: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Duration of time to wait for responses.
#
# cas.authn.attribute-repository.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# SASL authorization id.
#
# cas.authn.attribute-repository.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The SASL mechanism.
#
# cas.authn.attribute-repository.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.attribute-repository.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# SASL quality of protected.
#
# cas.authn.attribute-repository.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The SASL realm.
#
# cas.authn.attribute-repository.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# SASL security strength.
#
# cas.authn.attribute-repository.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.attribute-repository.ldap[].search-entry-handlers.type: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# User filter to use for searching.
# Syntax is {@code cn={user}} or
# {@code cn={0}}.
# <p>
# You may also provide an external groovy
# script
# in the syntax of {@code file:/path/to/GroovyScript.groovy}
#
# to fully build the final filter template dynamically.
#
# cas.authn.attribute-repository.ldap[].search-filter: 

# Type: AttributeRepositoryStates
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.ldap[].state: ACTIVE

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.attribute-repository.ldap[].subtree-search: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.authn.attribute-repository.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.authn.attribute-repository.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.attribute-repository.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Password needed to open the truststore.
#
# cas.authn.attribute-repository.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.attribute-repository.ldap[].trust-store-type: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether all existing attributes should be passed
# down to the query
# builder map and be used in the construction
# of the filter.
#
# cas.authn.attribute-repository.ldap[].use-all-query-attributes: true

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.attribute-repository.ldap[].use-start-tls: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.attribute-repository.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Period at which pool should be validated.
#
# cas.authn.attribute-repository.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.attribute-repository.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPrincipalAttributesProperties
#
# Period at which validation operations may time out.
#
# cas.authn.attribute-repository.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.attribute-repository.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.attribute-repository.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.attribute-repository.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.attribute-repository.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.attribute-repository.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.attribute-repository.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.authn.attribute-repository.ldap[].validator.type: search

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Okta API token.
#
# cas.authn.attribute-repository.okta.api-token: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Okta client id used in combination with the private key.
#
# cas.authn.attribute-repository.okta.client-id: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Connection timeout in milliseconds.
#
# cas.authn.attribute-repository.okta.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.okta.id: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.attribute-repository.okta.order: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Okta domain.
#
# cas.authn.attribute-repository.okta.organization-url: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.attribute-repository.okta.private-key.location: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Send requests via a proxy; define the hostname.
#
# cas.authn.attribute-repository.okta.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Send requests via a proxy; define the proxy password.
#
# cas.authn.attribute-repository.okta.proxy-password: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Send requests via a proxy; define the proxy port. Negative/zero values
# should deactivate the proxy configuration for the http client.
#
# cas.authn.attribute-repository.okta.proxy-port: 0

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Send requests via a proxy; define the proxy username.
#
# cas.authn.attribute-repository.okta.proxy-username: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Okta allows you to interact with Okta APIs using scoped OAuth 2.0
# access tokens. Each access token enables the bearer to perform
# specific actions on specific Okta endpoints, with that ability
# controlled by which scopes the access token contains. Scopes are only
# used when using client id and private-key.
#
# cas.authn.attribute-repository.okta.scopes: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalAttributesProperties
#
# Username attribute to fetch attributes by.
#
# cas.authn.attribute-repository.okta.username-attribute: username

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesProperties
#
# Retrieve attributes from redis repositories.
#
# cas.authn.attribute-repository.redis: 

# Type: File
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# May be used when making SSL connections to build the trust manager.
#
# Sets the certificate file to use for client authentication.
# This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.attribute-repository.redis[].certificate-file: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.authn.attribute-repository.redis[].cluster.adaptive-topology-refresh: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
#
# cluster topology. When set to false, only the initial seed nodes are
#
# used as sources for topology discovery.
#
# cas.authn.attribute-repository.redis[].cluster.dynamic-refresh-sources: true

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.authn.attribute-repository.redis[].cluster.max-redirects: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.authn.attribute-repository.redis[].cluster.nodes.host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.authn.attribute-repository.redis[].cluster.nodes.id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.authn.attribute-repository.redis[].cluster.nodes.name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.authn.attribute-repository.redis[].cluster.nodes.port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.authn.attribute-repository.redis[].cluster.nodes.replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.authn.attribute-repository.redis[].cluster.nodes.type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.authn.attribute-repository.redis[].cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.authn.attribute-repository.redis[].cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.authn.attribute-repository.redis[].cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Connection timeout.
#
# cas.authn.attribute-repository.redis[].connect-timeout: PT10S

# Type: int
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Database index used by the connection factory.
#
# cas.authn.attribute-repository.redis[].database: 

# Type: boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.authn.attribute-repository.redis[].enabled: true

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Redis server host.
#
# cas.authn.attribute-repository.redis[].host: localhost

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.redis[].id: 

# Type: File
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# May be used when making SSL connections to build the key manager.
#
# Sets the key certificate file to use for client authentication.
# This
# is typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.attribute-repository.redis[].key-certificate-chain-file: 

# Type: File
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# May be used when making SSL connections.
# Sets the key file for
# client authentication.
# The key is reloaded on each connection
# attempt that allows to replace certificates during runtime.
# This is
# typically a {@code PKCS#8} private key file in PEM format.
#
# cas.authn.attribute-repository.redis[].key-file: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.authn.attribute-repository.redis[].key-password: 

# Type: int
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
#
# Can be used to explicitly position this source in chain and affects
#
# merging strategies.
#
# cas.authn.attribute-repository.redis[].order: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Login password of the redis server.
#
# cas.authn.attribute-repository.redis[].password: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.authn.attribute-repository.redis[].pool.enabled: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects
# fairly. True means that waiting threads are served as if
# waiting in a FIFO
# queue.
#
# cas.authn.attribute-repository.redis[].pool.fairness: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect
# to idle objects - always returning the most recently used
# object from the
# pool, or as a FIFO (first in, first out) queue,
# where the pool always returns
# the oldest object in the idle object
# pool.
#
# cas.authn.attribute-repository.redis[].pool.lifo: true

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time.
# Use a negative value for no limit.
#
# cas.authn.attribute-repository.redis[].pool.max-active: 8

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value
# to
# indicate an unlimited number of idle connections.
#
# cas.authn.attribute-repository.redis[].pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block
# before throwing an exception when the pool is
# exhausted. Use a negative value
# to block indefinitely.
#
# cas.authn.attribute-repository.redis[].pool.max-wait: PT5S

# Type: long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it
# is eligible for eviction by the idle object evictor (if
# any - see
# setTimeBetweenEvictionRunsMillis(long)). When
# non-positive, no objects will
# be evicted from the pool due to idle
# time alone.
#
# cas.authn.attribute-repository.redis[].pool.min-evictable-idle-time-millis: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool.
# This setting only has an effect if it is positive.
#
# cas.authn.attribute-repository.redis[].pool.min-idle: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the
# idle object evictor thread. When positive, the number of
# tests performed for
# a run will be the minimum of the configured
# value and the number of idle
# instances in the pool. When negative,
# the number of tests performed will be
# ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when
# the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.authn.attribute-repository.redis[].pool.num-tests-per-eviction-run: 

# Type: long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it
# is eligible for eviction by the idle object evictor (if
# any - see
# setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at
# least minIdle object instances remain in the pool.
# This setting is overridden
# by getMinEvictableIdleTimeMillis() (that
# is, if
# getMinEvictableIdleTimeMillis() is positive, then
#
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.authn.attribute-repository.redis[].pool.soft-min-evictable-idle-time-millis: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being
# returned from the borrowObject() method. Validation is
# performed by the
# validateObject() method of the factory associated
# with the pool. If the
# object fails to validate, it will be removed
# from the pool and destroyed, and
# a new attempt will be made to
# borrow an object from the pool.
#
# cas.authn.attribute-repository.redis[].pool.test-on-borrow: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being
# returned from the borrowObject() method. Validation is
# performed by the
# validateObject() method of the factory associated
# with the pool. If the
# object fails to validate, then borrowObject()
# will fail.
#
# cas.authn.attribute-repository.redis[].pool.test-on-create: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they
# are returned to the pool via the returnObject() method.
# Validation is
# performed by the validateObject() method of the
# factory associated with the
# pool. Returning objects that fail
# validation are destroyed rather then being
# returned the pool.
#
# cas.authn.attribute-repository.redis[].pool.test-on-return: 

# Type: boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the
# idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)).
# Validation is performed by
# the validateObject() method of the factory
# associated with the pool.
# If the object fails to validate, it will be removed
# from the pool
# and destroyed.
#
# cas.authn.attribute-repository.redis[].pool.test-while-idle: 

# Type: int
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Redis server port.
#
# cas.authn.attribute-repository.redis[].port: 6379

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Redis protocol version.
#
# cas.authn.attribute-repository.redis[].protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties.RedisReadFromTypes
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes.
# Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency
# so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.authn.attribute-repository.redis[].read-from: 

# Type: long
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting.
# While SCAN does not provide
# guarantees about the number of elements returned
# at every iteration,
# it is possible to empirically adjust the behavior
# of SCAN using the
# COUNT option. Basically with COUNT the user specified
# the amount of
# work that should be done at every call in order to retrieve
# elements
# from the collection. This is just a hint for the implementation,
#
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.authn.attribute-repository.redis[].scan-count: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.authn.attribute-repository.redis[].sentinel.master: 

# Type: java.util.List<String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.authn.attribute-repository.redis[].sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.authn.attribute-repository.redis[].sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved.
# If this setting is {@code true}, a shared connection will
# be used for regular operations and
# a connection provider will be
# used to select a connection for blocking and tx operations only,
# which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all
# operations.
# By default, multiple connections share a single
# thread-safe native connection. If you enable connection pooling,
#
# then native connection sharing will be disabled and the connection
# pool will be used for all operations.
# You may however explicitly
# control connection sharing via this setting as an override.
#
# cas.authn.attribute-repository.redis[].share-native-connections: 

# Type: boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Start mutual TLS.
# In order to support TLS, Redis should be
# configured with a X.509 certificate and a private key.
# In addition,
# it is necessary to specify a CA certificate bundle file or path to be
# used
# as a trusted root when validating certificates.
#
# cas.authn.attribute-repository.redis[].start-tls: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Command timeout.
#
# cas.authn.attribute-repository.redis[].timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Database URI.
#
# cas.authn.attribute-repository.redis[].uri: 

# Type: boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.authn.attribute-repository.redis[].use-ssl: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Login username of the redis server.
#
# cas.authn.attribute-repository.redis[].username: 

# Type: boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPrincipalAttributesProperties
#
# Control how peer verification is handled with redis connections.
#
# Peer verification is a security feature that checks if the host
# you're
# connecting to is who it says it is. This is often done by
# checking a digital certificate.
#
# cas.authn.attribute-repository.redis[].verify-peer: true

# Type: java.util.List<org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalAttributesProperties
#
# Retrieve attributes from multiple REST endpoints.
#
# cas.authn.attribute-repository.rest: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# If REST endpoint is protected via basic authentication,
# specify the
# password for authentication.
#
# cas.authn.attribute-repository.rest[].basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# If REST endpoint is protected via basic authentication,
# specify the
# username for authentication.
#
# cas.authn.attribute-repository.rest[].basic-auth-username: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call.
# Will overwrite any header that CAS is pre-defined to
#
# send and include in the request. Key in the map should be the header
# name
# and the value in the map should be the header value.
#
# cas.authn.attribute-repository.rest[].headers: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.rest[].id: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# HTTP method to use when contacting the rest endpoint.
# Examples
# include {@code GET, POST}, etc.
#
# cas.authn.attribute-repository.rest[].method: GET

# Type: int
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
#
# Can be used to explicitly position this source in chain and affects
#
# merging strategies.
#
# cas.authn.attribute-repository.rest[].order: 

# Type: AttributeRepositoryStates
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.rest[].state: ACTIVE

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.attribute-repository.rest[].url: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.RestPrincipalAttributesProperties
#
# The attribute name that would be used to look up and
# determine the
# user id from the query map. The value
# linked to this attribute would
# be used as the username
# or subject by the attribute repository to
# pass on
# to the ultimate source to locate the user record.
#
# cas.authn.attribute-repository.rest[].username-attribute: username

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.StubPrincipalAttributesProperties
#
# Static attributes that need to be mapped to a hardcoded value belong
# here. The structure follows a key-value pair where key is the
# attribute name and value is the attribute value. The key is the
# attribute fetched from the source and the value is the attribute name
# CAS should use for virtual renames. <p> Attributes may be allowed to
# be virtually renamed and remapped. The key in the attribute map is the
# original attribute, and the value should be the virtually-renamed
# attribute.
#
# cas.authn.attribute-repository.stub.attributes: 

# Type: java.lang.String
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.StubPrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.stub.id: 

# Type: java.lang.Integer
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.StubPrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
# Can be used to explicitly position this source in chain and affects
# merging strategies.
#
# cas.authn.attribute-repository.stub.order: 

# Type: org.apereo.cas.configuration.model.core.authentication.AttributeRepositoryStates
# Module: cas-server-support-person-directory
# Owner: org.apereo.cas.configuration.model.core.authentication.StubPrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.stub.state: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# Map of attributes that optionally may be used to control the names of
# the collected attributes from Syncope. If an attribute is provided by
# Syncope, it can be listed here as the key of the map with a value that
# should be the name of that attribute as collected and recorded by CAS.
# For example, the convention {@code lastLoginDate->lastDate} will
# process the Syncope attribute {@code lastLoginDate} and will
# internally rename that to {@code lastDate}. If no mapping is
# specified, CAS defaults will be used instead.
#
# cas.authn.attribute-repository.syncope.attribute-mappings: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# Specify the password for REST authentication.
#
# cas.authn.attribute-repository.syncope.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# Specify the username for REST authentication.
#
# cas.authn.attribute-repository.syncope.basic-auth-username: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# Syncope domain used for authentication, etc. Multiple domains can be
# separated via comma. Each domain entry results in a separate
# authentication attempt and transaction by CAS.
#
# cas.authn.attribute-repository.syncope.domain: Master

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.attribute-repository.syncope.headers: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# A value can be assigned to this field to uniquely identify this
# resolver.
#
# cas.authn.attribute-repository.syncope.id: 

# Type: java.lang.Integer
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# The order of this attribute repository in the chain of repositories.
# Can be used to explicitly position this source in chain and affects
# merging strategies.
#
# cas.authn.attribute-repository.syncope.order: 0

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# User FIQL filter to use for searching. Syntax is {@code
# username=={user}} or {@code username=={0}}.
#
# cas.authn.attribute-repository.syncope.search-filter: username=={user}

# Type: org.apereo.cas.configuration.model.core.authentication.AttributeRepositoryStates
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# Whether attribute resolution based on this source is enabled.
#
# Available values are as follows:
# <ul><li>{@code ACTIVE}: Active and
# enabled repository,
# and is invoked by default
# automatically.</li><li>{@code DISABLED}: Attribute repository is
# disabled and will not be used
# to resolve people and
# attributes.</li><li>{@code STANDBY}: Repository is in a semi-enabled
# state,
# waiting to be called only on-demand when explicitly
# asked
# for and will not be registered into the resolution plan.</li></ul>
#
# cas.authn.attribute-repository.syncope.state: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalAttributesProperties
#
# Syncope instance URL primary used for REST.
#
# cas.authn.attribute-repository.syncope.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-validation
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationAttributeReleaseProperties
#
# Whether authentication or protocol attributes should be released to
# clients. This flag specifically address non-principal attributes, or
# otherwise attributes that carry metadata about the authentication
# event itself that are not strictly tied to a principal or person data.
# The change here should consider such attributes regardless of the
# specific protocol or authentication flow (CAS, OIDC, etc).
#
# cas.authn.authentication-attribute-release.enabled: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-validation
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationAttributeReleaseProperties
#
# List of authentication attributes that should never be released.
#
# cas.authn.authentication-attribute-release.never-release: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-validation
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationAttributeReleaseProperties
#
# List of authentication attributes that should be the only ones
# released. An empty list indicates all attributes should be released.
#
# cas.authn.authentication-attribute-release.only-release: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# Client id of the application.
#
# cas.authn.azure-active-directory.client-id: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# Client secret of the registered app in microsoft azure portal.
#
# cas.authn.azure-active-directory.client-secret: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase. The credential criteria may be one of the following
# options:<ul> <li>1) A regular expression pattern that is tested
# against the credential identifier.</li> <li>2) A fully qualified class
# name of your own design that implements {@code Predicate}.</li> <li>3)
# Path to an external Groovy script that implements the same
# interface.</li> </ul>
#
# cas.authn.azure-active-directory.credential-criteria: 

# Type: java.lang.Boolean
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# Enable authentication against Azure active directory.
#
# cas.authn.azure-active-directory.enabled: true

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# This URL of the security token service that CAS goes to for acquiring
# tokens for resources and users This URL allows CAS to establish what
# is called an 'authority'. You can think of the authority as the
# directory issuing the identities/tokens. The login URL here is then
# composed of {@code https://<instance>/<tenant>}, where 'instance' is
# the Azure AD host (such as {@code https://login.microsoftonline.com})
# and 'tenant' is the domain name (such as {@code
# contoso.onmicrosoft.com}) or tenant ID of the directory. Examples of
# authority URL are: <ul> <li>{@code
# https://login.microsoftonline.com/f31e6716-26e8-4651-b323-2563936b4163
# }: for a single tenant application defined in the tenant</li>
# <li>{@code https://login.microsoftonline.com/contoso.onmicrosoft.com}:
# This representation is like the previous one, but uses the tenant
# domain name instead of the tenant Id.</li> <li>{@code
# https://login.microsoftonline.de/contoso.de}: also uses a domain name,
# but in this case the Azure AD tenant admins have set a custom domain
# for their tenant, and the instance URL here is for the German national
# cloud.</li> <li>{@code https://login.microsoftonline.com/common}: in
# the case of a multi-tenant application, that is an application
# available in several Azure AD tenants.</li> <li>It can finally be an
# Active Directory Federation Services (ADFS) URL, which is recognized
# with the convention that the URL should contain adfs like {@code
# https://contoso.com/adfs}.</li> </ul>
#
# cas.authn.azure-active-directory.login-url: https://login.microsoftonline.com/common/

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# The name of the authentication handler.
#
# cas.authn.azure-active-directory.name: 

# Type: java.lang.Integer
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.azure-active-directory.order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.azure-active-directory.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.azure-active-directory.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.azure-active-directory.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.azure-active-directory.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.azure-active-directory.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.azure-active-directory.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.azure-active-directory.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.azure-active-directory.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.azure-active-directory.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.azure-active-directory.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.azure-active-directory.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.azure-active-directory.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.azure-active-directory.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# Resource url for the graph API to fetch attributes.
#
# cas.authn.azure-active-directory.resource: https://graph.microsoft.com/

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# Scope used when fetching access tokens. Multiple scopes may be
# separated using a comma.
#
# cas.authn.azure-active-directory.scope: openid,email,profile,address

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.azure-active-directory.state: 

# Type: java.lang.String
# Module: cas-server-support-azuread-authentication
# Owner: org.apereo.cas.configuration.model.support.azuread.AzureActiveDirectoryAuthenticationProperties
#
# The microsoft tenant id.
#
# cas.authn.azure-active-directory.tenant: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Query option consistency level. The consistency level set through this
# method will be use for queries that don't explicitly have a
# consistency level. Accepted values are:{@code ALL, ANY, EACH_QUORUM,
# LOCAL_ONE, LOCAL_QUORUM, LOCAL_SERIAL, ONE, QUORUM, SERIAL, THREE,
# TWO}.
#
# cas.authn.cassandra.consistency-level: LOCAL_QUORUM

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# The list of contact points to use for the new cluster. Each contact
# point should be defined using the syntax {@code address:port}.
#
# cas.authn.cassandra.contact-points: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Keyspace address to use where the cluster would connect.
#
# cas.authn.cassandra.keyspace: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Used by a DC-ware round-robin load balancing policy. This policy
# provides round-robin queries over the node of the local data center.
# It also includes in the query plans returned a configurable number of
# hosts in the remote data centers, but those are always tried after the
# local nodes. In other words, this policy guarantees that no host in a
# remote data center will be queried unless no host in the local data
# center can be reached.
#
# cas.authn.cassandra.local-dc: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.cassandra.name: 

# Type: java.lang.Integer
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# The authentication handler order in the chain.
#
# cas.authn.cassandra.order: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Password to bind and establish a connection to cassandra.
#
# cas.authn.cassandra.password: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Password attribute to fetch and compare.
#
# cas.authn.cassandra.password-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.cassandra.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.cassandra.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.cassandra.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.cassandra.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.cassandra.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.cassandra.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.cassandra.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.cassandra.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.cassandra.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.cassandra.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.cassandra.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.cassandra.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.cassandra.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# The authentication query to use when searching for users.
#
# cas.authn.cassandra.query: SELECT * FROM %s WHERE %s = ? ALLOW FILTERING

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Query option serial consistency level. The serial consistency level
# set through this method will be use for queries that don't explicitly
# have a serial consistency level. Accepted values are:{@code ALL, ANY,
# EACH_QUORUM, LOCAL_ONE, LOCAL_QUORUM, LOCAL_SERIAL, ONE, QUORUM,
# SERIAL, THREE, TWO}.
#
# cas.authn.cassandra.serial-consistency-level: LOCAL_SERIAL

# Type: java.lang.String[]
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# The cipher suites to use, or empty/null to use the default ones. Note
# that host name validation will always be done using HTTPS algorithm.
#
# cas.authn.cassandra.ssl-cipher-suites: 

# Type: java.lang.String[]
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Set the protocol versions enabled for use on this engine. Once the
# setting is set, only protocols listed in the protocols parameter are
# enabled for use.
#
# cas.authn.cassandra.ssl-protocols: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Table name to fetch credentials.
#
# cas.authn.cassandra.table-name: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# The request timeout. This defines how long the driver will wait for a
# given Cassandra node to answer a query.
#
# cas.authn.cassandra.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Username to bind and establish a connection to cassandra.
#
# cas.authn.cassandra.username: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-authentication
# Owner: org.apereo.cas.configuration.model.support.cassandra.authentication.CassandraAuthenticationProperties
#
# Username attribute to fetch and compare.
#
# cas.authn.cassandra.username-attribute: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Client execution timeout.
#
# cas.authn.cloud-directory.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Connection timeout.
#
# cas.authn.cloud-directory.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.cloud-directory.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.cloud-directory.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Directory ARN.
#
# cas.authn.cloud-directory.directory-arn: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# AWS custom endpoint.
#
# cas.authn.cloud-directory.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Facet name.
#
# cas.authn.cloud-directory.facet-name: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Local address.
#
# cas.authn.cloud-directory.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Maximum connections setting.
#
# cas.authn.cloud-directory.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# The name of the authentication handler.
#
# cas.authn.cloud-directory.name: 

# Type: java.lang.Integer
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.cloud-directory.order: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Password attribute to choose on the entry to compare.
#
# cas.authn.cloud-directory.password-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.cloud-directory.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.cloud-directory.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.cloud-directory.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.cloud-directory.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.cloud-directory.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.cloud-directory.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.cloud-directory.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.cloud-directory.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.cloud-directory.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.cloud-directory.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.cloud-directory.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.cloud-directory.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.cloud-directory.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Profile name to use.
#
# cas.authn.cloud-directory.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Profile path.
#
# cas.authn.cloud-directory.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.cloud-directory.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.cloud-directory.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.cloud-directory.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# AWS region used.
#
# cas.authn.cloud-directory.region: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.authn.cloud-directory.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Schema ARN.
#
# cas.authn.cloud-directory.schema-arn: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Socket timeout.
#
# cas.authn.cloud-directory.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.cloud-directory.use-reaper: false

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Username attribute to choose when locating accounts.
#
# cas.authn.cloud-directory.username-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-cloud-directory-authentication
# Owner: org.apereo.cas.configuration.model.support.clouddirectory.AmazonCloudDirectoryProperties
#
# Username index path.
#
# cas.authn.cloud-directory.username-index-path: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Client execution timeout.
#
# cas.authn.cognito.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# The application client id, created in Cognito without a secret key.
#
# cas.authn.cognito.client-id: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Connection timeout.
#
# cas.authn.cognito.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.cognito.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.cognito.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# AWS custom endpoint.
#
# cas.authn.cognito.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Local address.
#
# cas.authn.cognito.local-address: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Map of attributes to rename after fetching from the user pool. Mapped
# attributes are defined using a key-value structure where CAS allows
# the attribute name/key to be renamed virtually to a different
# attribute. The key is the attribute fetched from the user pool and the
# value is the attribute name CAS should use for virtual renames.
#
# cas.authn.cognito.mapped-attributes: 

# Type: java.lang.Integer
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Maximum connections setting.
#
# cas.authn.cognito.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# The name of the authentication handler.
#
# cas.authn.cognito.name: 

# Type: java.lang.Integer
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.cognito.order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.cognito.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.cognito.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.cognito.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.cognito.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.cognito.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.cognito.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.cognito.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.cognito.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.cognito.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.cognito.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.cognito.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.cognito.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.cognito.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Profile name to use.
#
# cas.authn.cognito.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Profile path.
#
# cas.authn.cognito.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.cognito.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.cognito.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.cognito.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# AWS region used.
#
# cas.authn.cognito.region: 

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.authn.cognito.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Socket timeout.
#
# cas.authn.cognito.socket-timeout: 5000

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.cognito.state: 

# Type: java.lang.Boolean
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.cognito.use-reaper: false

# Type: java.lang.String
# Module: cas-server-support-aws-cognito-authentication
# Owner: org.apereo.cas.configuration.model.support.cognito.AmazonCognitoAuthenticationProperties
#
# The user pool identifiers where accounts may be located.
#
# cas.authn.cognito.user-pool-id: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationEngineProcessorProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.core.engine.groovy-post-processor.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationEngineProcessorProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.core.engine.groovy-pre-processor.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationHandlerResolutionProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.core.groovy-authentication-resolution.location: 

# Type: java.lang.Integer
# Module: cas-server-support-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationHandlerResolutionProperties
#
# The execution order of this resolver in the chain of authentication
# handler resolvers.
#
# cas.authn.core.groovy-authentication-resolution.order: 0

# Type: java.lang.Integer
# Module: cas-server-support-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.RegisteredServiceAuthenticationHandlerResolutionProperties
#
# The execution order of this resolver in the chain of authentication
# handler resolvers.
#
# cas.authn.core.service-authentication-resolution.order: 0

# Type: java.util.List<java.lang.Class<? extends java.lang.Throwable>>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationExceptionsProperties
#
# Define custom exceptions that can then be mapped to message bundles
# for custom error handling. <p> By default CAS is configured to
# recognize and handle a number of exceptions for during authentication.
# Each exception has the specific message bundle mapping so that a
# specific message could be presented to end users on the login form.
# Any un-recognized or un-mapped exceptions results in a generic
# message. To map custom exceptions, one would need map the exception,
# they can be defined here and then linked to custom messages.
#
# cas.authn.errors.exceptions: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationExceptionsProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.errors.groovy.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.FileAuthenticationProperties
#
# File resource where user accounts are kept.
#
# cas.authn.file.filename: 

# Type: java.lang.String
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.FileAuthenticationProperties
#
# Authentication handler name used to verify credentials in the file.
#
# cas.authn.file.name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.file.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.file.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.file.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.file.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.file.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.file.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.file.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.file.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.file.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.file.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.file.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.file.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.file.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.FileAuthenticationProperties
#
# Separator character that distinguishes between usernames and passwords
# in the file.
#
# cas.authn.file.separator: ::

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.GroovyAuthenticationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.groovy.location: 

# Type: java.lang.String
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.GroovyAuthenticationProperties
#
# Authentication handler name used to verify credentials in the file.
#
# cas.authn.groovy.name: 

# Type: java.lang.Integer
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.GroovyAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.groovy.order: 

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.GroovyAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.groovy.state: 

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.gua.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.gua.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.gua.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.gua.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.gua.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.gua.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.gua.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.gua.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.gua.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.gua.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.gua.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Set if search referrals should be followed.
#
# cas.authn.gua.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.gua.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.gua.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Entry attribute that holds the user image.
#
# cas.authn.gua.ldap.image-attribute: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.gua.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Keystore password.
#
# cas.authn.gua.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.gua.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.gua.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.gua.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.gua.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Name of the LDAP handler.
#
# cas.authn.gua.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.gua.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.gua.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.gua.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Duration of time to wait for responses.
#
# cas.authn.gua.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# SASL authorization id.
#
# cas.authn.gua.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The SASL mechanism.
#
# cas.authn.gua.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.gua.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# SASL quality of protected.
#
# cas.authn.gua.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The SASL realm.
#
# cas.authn.gua.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# SASL security strength.
#
# cas.authn.gua.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Search handlers.
#
# cas.authn.gua.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.gua.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.gua.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.gua.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.gua.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.gua.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.gua.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.gua.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.gua.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.gua.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.gua.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.gua.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.gua.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.gua.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.gua.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.gua.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.gua.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.gua.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.gua.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.gua.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.gua.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Password needed to open the truststore.
#
# cas.authn.gua.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.gua.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.gua.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.gua.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Period at which pool should be validated.
#
# cas.authn.gua.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.gua.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.LdapGraphicalUserAuthenticationProperties
#
# Period at which validation operations may time out.
#
# cas.authn.gua.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.gua.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.gua.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.gua.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.gua.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.gua.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.gua.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.gua.ldap.validator.type: search

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-gua
# Owner: org.apereo.cas.configuration.model.support.gua.GraphicalUserAuthenticationProperties
#
# Locate GUA settings and images from a static image per user. This is
# treated as a {@link Map} where the key is the user id and the value
# should be the graphical resource.
#
# cas.authn.gua.simple: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationProperties
#
# Collection of settings related to JAAS authentication. These settings
# are required to be indexed (i.e. jaas[0].xyz).
#
# cas.authn.jaas: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential
# and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase.
# The credential criteria may be one of the following
# options:
# <ul>
# <li>1) A regular expression pattern that is tested
# against the credential identifier.</li>
# <li>2) A fully qualified
# class name of your own design that implements {@code
# Predicate}.</li>
# <li>3) Path to an external Groovy script that
# implements the same interface.</li>
# </ul>
#
# cas.authn.jaas[].credential-criteria: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# Typically, the default realm and the KDC for that realm are indicated
# in the Kerberos {@code krb5.conf} configuration file.
# However, if
# you like, you can instead specify the realm value by setting this
# following system property value.
# <p>If you set the realm property,
# you SHOULD also configure the kerberos KDC system property.
# <p>Also
# note that if you set these properties, then no cross-realm
# authentication is possible unless
# a {@code krb5.conf} file is also
# provided from which the additional information required for
# cross-realm authentication
# may be obtained.
# <p>If you set values
# for these properties, then they override the default realm and KDC
# values specified
# in {@code krb5.conf} (if such a file is found). The
# {@code krb5.conf} file is still consulted if values for items
# other
# than the default realm and KDC are needed. If no {@code krb5.conf}
# file is found,
# then the default values used for these items are
# implementation-specific.
#
# cas.authn.jaas[].kerberos-kdc-system-property: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# Typically, the default realm and the KDC for that realm are indicated
# in the Kerberos {@code krb5.conf} configuration file.
# However, if
# you like, you can instead specify the realm value by setting this
# following system property value.
# <p>If you set the realm property,
# you SHOULD also configure the kerberos KDC system property.
# <p>Also
# note that if you set these properties, then no cross-realm
# authentication is possible unless
# a {@code krb5.conf} file is also
# provided from which the additional information required for
# cross-realm authentication
# may be obtained.
# <p>If you set values
# for these properties, then they override the default realm and KDC
# values specified
# in {@code krb5.conf} (if such a file is found). The
# {@code krb5.conf} file is still consulted if values for items
# other
# than the default realm and KDC are needed. If no {@code krb5.conf}
# file is found,
# then the default values used for these items are
# implementation-specific.
#
# cas.authn.jaas[].kerberos-realm-system-property: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# Typically set to {@code JavaLoginConfig} which is the default
# Configuration implementation
# from the SUN provider. This type
# accepts a URI/path to a configuration file as a valid parameter type
# specified via {@link #loginConfigurationFile}.
# If this parameter is
# not specified, then the configuration information is loaded from the
# sources described
# in the ConfigFile class specification. If this
# parameter is specified, the configuration information is loaded solely
# from the specified URI.
#
# cas.authn.jaas[].login-config-type: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# Path to the location of configuration file (i.e. jaas.conf) that
# contains the realms and login modules.
#
# cas.authn.jaas[].login-configuration-file: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.jaas[].name: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.jaas[].order: 2147483647

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'.
# Relevant when the
# type used is {@code DEFAULT}.
#
# cas.authn.jaas[].password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}.
# Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}.
# When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1},
# {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.jaas[].password-encoder.encoding-algorithm: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.jaas[].password-encoder.hash-length: 16

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.jaas[].password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2},
# {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders.
# Secret
# usually is an optional setting.
#
# cas.authn.jaas[].password-encoder.secret: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing.
#
# Usually relevant when dealing with {@link
# PasswordEncoderTypes#BCRYPT}, {@link PasswordEncoderTypes#PBKDF2} or
# {@link PasswordEncoderTypes#GLIBC_CRYPT}.
# When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.jaas[].password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use.
# Type may be specified as
# blank or {@code NONE} to disable password encoding.
# It may also
# refer to a fully-qualified class name that implements
# the Spring
# Security's {@code PasswordEncoder} interface
# if you wish you define
# your own encoder.
# <p>
# The following types may be used:
# <ul>
#   
# <li>{@code NONE}: No password encoding (i.e. plain-text) takes
# place.</li>
#     <li>{@code DEFAULT}: Use the {@code
# DefaultPasswordEncoder} of CAS. For message-digest
#     algorithms
# via {@code character-encoding} and {@code encoding-algorithm}.</li>
# 
# <li>{@code BCRYPT}: Use the {@code BCryptPasswordEncoder} based on the
# strength provided and an optional secret.</li>
#     <li>{@code
# SCRYPT}: Use the {@code SCryptPasswordEncoder}.</li>
#     <li>{@code
# PBKDF2}: Use the {@code Pbkdf2PasswordEncoder} based on the strength
# provided and an optional secret.</li>
#     <li>{@code STANDARD}: Use
# the {@code StandardPasswordEncoder} based on the secret
# provided.</li>
#     <li>{@code SSHA}: Use the {@code
# LdapShaPasswordEncoder} supports Ldap SHA and SSHA (salted-SHA). The
# values
#     are base-64 encoded and have the label {SHA} or {SSHA}
# prepended to the encoded hash.</li>
#     <li>{@code GLIBC_CRYPT}: Use
# the {@code GlibcCryptPasswordEncoder} based on the
#     {@code
# encoding-algorithm}, strength provided and an optional secret.</li>
# 
# <li>{@code org.example.MyEncoder}: An implementation of {@code
# PasswordEncoder} of your own choosing.</li>
#     <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li>
# </ul>
#
# cas.authn.jaas[].password-encoder.type: NONE

# Type: boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Indicates whether account state handling should be enabled to
# process
# warnings or errors reported back from the authentication
# response, produced by the source.
#
# cas.authn.jaas[].password-policy.account-state-handling-enabled: true

# Type: boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Indicates if warning should be displayed, when the ldap attribute
# value
# matches the {@link #warningAttributeValue}.
#
# cas.authn.jaas[].password-policy.display-warning-on-match: true

# Type: boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Whether password policy should be enabled.
#
# cas.authn.jaas[].password-policy.enabled: true

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Handle password policy via Groovy script.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.jaas[].password-policy.groovy.location: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# When dealing with FreeIPA, indicates the number of allows login
# failures.
#
# cas.authn.jaas[].password-policy.login-failures: 5

# Type: java.util.Map<String,Class<? extends LoginException>>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Key-value structure (Map) that indicates a list of boolean attributes
# as keys.
# If either attribute value is true, indicating an account
# state is flagged,
# the corresponding error can be thrown.
# Example
# {@code accountLocked=javax.security.auth.login.AccountLockedException}
#
# cas.authn.jaas[].password-policy.policy-attributes: 

# Type: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties.PasswordPolicyHandlingOptions
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Decide how authentication should handle password policy changes.
#
# Available values are as follows:
# <ul><li>{@code DEFAULT}: Default
# option to handle policy changes.</li><li>{@code GROOVY}: Handle
# account password policies via Groovy.</li><li>{@code
# REJECT_RESULT_CODE}: Strategy to only activate password policy
# if
# the authentication response code is not blocked.</li></ul>
#
# cas.authn.jaas[].password-policy.strategy: DEFAULT

# Type: boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Always display the password expiration warning regardless.
#
# cas.authn.jaas[].password-policy.warn-all: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings
# in case the entry carries this attribute.
#
# cas.authn.jaas[].password-policy.warning-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings
# in case the entry carries an attribute {@link
# #warningAttributeName}
# whose value matches this field.
#
# cas.authn.jaas[].password-policy.warning-attribute-value: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# This is used to calculate
# a warning period to see if account expiry
# is within the calculated window.
#
# cas.authn.jaas[].password-policy.warning-days: 30

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.jaas[].principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.jaas[].principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.jaas[].principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.jaas[].principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.jaas[].principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.jaas[].principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Activated attribute repository identifiers
# that should be used for
# fetching attributes
# if attribute resolution is enabled.
# The list
# here may include identifiers separated by comma.
#
# cas.authn.jaas[].principal.active-attribute-repository-ids: *

# Type: java.util.Map<String,String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Control the behavior of the attribute repository selection by
# authentication method or handler.
# The map here is keyed by the
# authentication handler name, and the value is the attribute
# repository
# identifiers separated by comma. When the authentication
# handler is executed, the attribute repositories
# assigned to this
# handler will be selected to fetch attributes.
# Note that the
# resolution engine will always favor attribute repositories assigned to
# the
# service definition, if any and as part of its authentication
# policy, over this global setting.
#
# cas.authn.jaas[].principal.attribute-repository-selection: 

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Whether attribute repositories should be contacted
# to fetch person
# attributes. Defaults to true if not set.
# Available values are as
# follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.jaas[].principal.attribute-resolution-enabled: UNDEFINED

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Attribute name to use to indicate the identifier of the principal
# constructed.
# If the attribute is blank or has no values, the default
# principal id will be used
# determined by the underlying
# authentication engine. The principal id attribute
# usually is removed
# from the collection of attributes collected, though this behavior
#
# depends on the schematics of the underlying authentication strategy.
#
# cas.authn.jaas[].principal.principal-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# In the event that the principal resolution engine resolves
# more than
# one principal, (specially if such principals in the chain
# have
# different identifiers), this setting determines strategy by which
#
# the principal id would be chosen from the chain.
# Accepted values
# are: {@code last}, {@code first}.
#
# cas.authn.jaas[].principal.principal-resolution-conflict-strategy: last

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# When true, throws an error back indicating that principal resolution
#
# has failed and no principal can be found based on the authentication
# requirements.
# Otherwise, logs the condition as an error without
# raising a catastrophic error.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.jaas[].principal.principal-resolution-failure-fatal: UNDEFINED

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.jaas[].principal.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.jaas[].principal.principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.jaas[].principal.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.jaas[].principal.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.jaas[].principal.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.jaas[].principal.principal-transformation.suffix: 

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Return a null principal object if no attributes can be found for the
# principal.
# Available values are as follows:
# <ul><li>{@code TRUE}:
# Constant to represent the true state.</li><li>{@code FALSE}: Constant
# to represent the false state.</li><li>{@code UNDEFINED}: Constant to
# represent the undefined state.</li></ul>
#
# cas.authn.jaas[].principal.return-null: UNDEFINED

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Uses an existing principal id that may have already
# been established
# in order to run person directory queries.
# This is generally useful
# in situations where
# authentication is delegated to an external
# identity provider
# and a principal is first established to then query
# an attribute source.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.jaas[].principal.use-existing-principal-id: UNDEFINED

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# JAAS realm to use.
#
# cas.authn.jaas[].realm: 

# Type: AuthenticationHandlerStates
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.jaas.JaasAuthenticationProperties
#
# Define the scope and state of this authentication handler
# and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.jaas[].state: ACTIVE

# Type: java.util.List<org.apereo.cas.configuration.model.support.jdbc.authn.BindJdbcAuthenticationProperties>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcAuthenticationProperties
#
# Settings related to bind-mode jdbc authentication. Authenticates a
# user by attempting to create a database connection using the username
# and (hashed) password.
#
# cas.authn.jdbc.bind: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# The default auto-commit behavior of connections in the pool.
#
# Determined whether queries such as update/insert should be immediately
# executed
# without waiting for an underlying transaction.
#
# cas.authn.jdbc.bind[].autocommit: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.jdbc.bind[].batch-size: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Indicates the maximum number of milliseconds that the service
# can
# wait to obtain a connection.
#
# cas.authn.jdbc.bind[].connection-timeout: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential
# and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase.
# The credential criteria may be one of the following
# options:<ul>
# <li>1) A regular expression pattern that is tested
# against the credential identifier.</li>
# <li>2) A fully qualified
# class name of your own design that implements {@code
# Predicate}.</li>
# <li>3) Path to an external Groovy script that
# implements the same interface.</li>
# </ul>
#
# cas.authn.jdbc.bind[].credential-criteria: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified.
# Will attempt to locate the data source object as is.
#
# cas.authn.jdbc.bind[].data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema.
# By default, creates and drops the schema automatically when
# a session is starts and ends.
# Setting the value to {@code validate}
# or {@code none} may be more desirable for production,
# but any of the
# following options can be used:
# <ul>
#     <li>{@code validate}:
# Validate the schema, but make no changes to the database.</li>
#    
# <li>{@code update}: Update the schema.</li>
#     <li>{@code create}:
# Create the schema, destroying previous data.</li>
#     <li>{@code
# create-drop}: Drop the schema at the end of the session.</li>
#    
# <li>{@code none}: Do nothing.</li>
# </ul>
# <p>
# Note that during a
# version migration where any schema has changed {@code create-drop}
# will result
# in the loss of all data as soon as CAS is started. For
# transient data like tickets this is probably
# not an issue, but in
# cases like the audit table important data could be lost. Using
# `update`, while safe
# for data, is confirmed to result in invalid
# database state. {@code validate} or {@code none} settings
# are likely
# the only safe options for production use.
# </p>
# For more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.jdbc.bind[].ddl-auto: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.jdbc.bind[].default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.jdbc.bind[].default-schema: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc)
# which allows such
# software to translate its generic SQL statements into vendor specific
# DDL, DML.
#
# cas.authn.jdbc.bind[].dialect: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.jdbc.bind[].driver-class: 

# Type: long
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Set the pool initialization failure timeout.
# <ul>
# <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization.
# The calling thread will be blocked from continuing
# until a successful connection
# to the database, or until the timeout
# is reached.  If the timeout is reached, then
# a {@code
# PoolInitializationException} will be thrown. </li>
# <li>A value of
# zero will <i>not</i>  prevent the pool from starting in the
# case
# that a connection cannot be obtained. However, upon start the pool
# will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery}
# and {@code connectionInitSql} are valid.  If
# those validations fail, an exception
# will be thrown.  If a
# connection cannot be obtained, the validation is skipped
# and the the
# pool will start and continue to try to obtain connections in the
#
# background. This can mean that callers to {@code
# DataSource#getConnection()} may
# encounter exceptions. </li>
# <li>A
# value less than zero will <i>not</i> bypass any connection attempt
# and
# validation during startup, and therefore the pool will start
# immediately.  The
# pool will continue to try to obtain connections in
# the background. This can mean
# that callers to {@code
# DataSource#getConnection()} may encounter exceptions. </li>
# </ul>
#
# Note that if this timeout value is greater than or equal to zero (0),
# and therefore an
# initial connection validation is performed, this
# timeout does not override the
# {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this
# timeout is
# applied.  The default value is one millisecond.
#
# cas.authn.jdbc.bind[].fail-fast-timeout: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.jdbc.bind[].fetch-size: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.jdbc.bind[].generate-statistics: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# The SQL query to be executed to test the validity of connections.
#
# This is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.jdbc.bind[].health-query: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.jdbc.bind[].idle-timeout: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test,
# in their own
# transaction.
# <p>
# Since these are typically read-only queries, it
# is rarely necessary to encapsulate them in their own transaction.
#
# This property only applies if {@link #autocommit} is disabled.
#
# cas.authn.jdbc.bind[].isolate-internal-queries: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Defines the isolation level for transactions.
#
# cas.authn.jdbc.bind[].isolation-level-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message
# is logged indicating a possible connection leak.
#
# cas.authn.jdbc.bind[].leak-threshold: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.jdbc.bind[].name: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.jdbc.bind[].order: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# The database connection password.
#
# cas.authn.jdbc.bind[].password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'.
# Relevant when the
# type used is {@code DEFAULT}.
#
# cas.authn.jdbc.bind[].password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}.
# Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}.
# When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1},
# {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.jdbc.bind[].password-encoder.encoding-algorithm: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.jdbc.bind[].password-encoder.hash-length: 16

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.jdbc.bind[].password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2},
# {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders.
# Secret
# usually is an optional setting.
#
# cas.authn.jdbc.bind[].password-encoder.secret: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing.
#
# Usually relevant when dealing with {@link
# PasswordEncoderTypes#BCRYPT}, {@link PasswordEncoderTypes#PBKDF2} or
# {@link PasswordEncoderTypes#GLIBC_CRYPT}.
# When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.jdbc.bind[].password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use.
# Type may be specified as
# blank or {@code NONE} to disable password encoding.
# It may also
# refer to a fully-qualified class name that implements
# the Spring
# Security's {@code PasswordEncoder} interface
# if you wish you define
# your own encoder.
# <p>
# The following types may be used:
# <ul>
#   
# <li>{@code NONE}: No password encoding (i.e. plain-text) takes
# place.</li>
#     <li>{@code DEFAULT}: Use the {@code
# DefaultPasswordEncoder} of CAS. For message-digest
#     algorithms
# via {@code character-encoding} and {@code encoding-algorithm}.</li>
# 
# <li>{@code BCRYPT}: Use the {@code BCryptPasswordEncoder} based on the
# strength provided and an optional secret.</li>
#     <li>{@code
# SCRYPT}: Use the {@code SCryptPasswordEncoder}.</li>
#     <li>{@code
# PBKDF2}: Use the {@code Pbkdf2PasswordEncoder} based on the strength
# provided and an optional secret.</li>
#     <li>{@code STANDARD}: Use
# the {@code StandardPasswordEncoder} based on the secret
# provided.</li>
#     <li>{@code SSHA}: Use the {@code
# LdapShaPasswordEncoder} supports Ldap SHA and SSHA (salted-SHA). The
# values
#     are base-64 encoded and have the label {SHA} or {SSHA}
# prepended to the encoded hash.</li>
#     <li>{@code GLIBC_CRYPT}: Use
# the {@code GlibcCryptPasswordEncoder} based on the
#     {@code
# encoding-algorithm}, strength provided and an optional secret.</li>
# 
# <li>{@code org.example.MyEncoder}: An implementation of {@code
# PasswordEncoder} of your own choosing.</li>
#     <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li>
# </ul>
#
# cas.authn.jdbc.bind[].password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.jdbc.bind[].physical-naming-strategy-class-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection
# will never be tested by the keepalive
# thread, only when it is idle will it be tested.
# Default is zero,
# which disables this feature.
#
# cas.authn.jdbc.bind[].pool.keep-alive-time: 0

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep
# in the pool,
# including both idle and in-use connections.
#
# cas.authn.jdbc.bind[].pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait
#
# while attempting to connect to a database.
# <p>
# A value of zero
# specifies that the timeout is the default system timeout
# if there is
# one; otherwise, it specifies that there is no timeout.
#
# cas.authn.jdbc.bind[].pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection
# reaches this timeout, even if recently
# used,
# it will be retired from the pool. An in-use connection will
# never be retired, only when it is idle will it be removed.
#
# cas.authn.jdbc.bind[].pool.maximum-lifetime: PT10M

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed
# to reach,
# including both idle and in-use connections.
#
# cas.authn.jdbc.bind[].pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for
# the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.jdbc.bind[].pool.name: 

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed.
# <p>
# There is a
# performance impact when pool suspension is enabled.
# Unless you need
# it (for a redundancy system for example) do not enable it.
#
# cas.authn.jdbc.bind[].pool.suspension: 

# Type: long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the
# pool will wait for a
# connection to be validated as alive.
#
# cas.authn.jdbc.bind[].pool.timeout-millis: 1000

# Type: java.util.List<String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# List of column names to fetch as user attributes.
# This is only
# effective in scenarios where the JDBC authentication method
# is able
# to execute a SQL query against a database table and return results.
#
# Authentication methods that merely check for the user account's
# existence
# or verify the user with just a simple bind are not able to
# fetch attributes.
# <p>Attributes name are separated by a comma and
# may use a "directed list" syntax where the allowed
# syntax would be
# {@code column-name->cas-attribute}.
#
# cas.authn.jdbc.bind[].principal-attribute-list: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.jdbc.bind[].principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.jdbc.bind[].principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.jdbc.bind[].principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.jdbc.bind[].principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.bind[].principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.bind[].principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Defines the propagation behavior for transactions.
#
# cas.authn.jdbc.bind[].propagation-behavior-name: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.jdbc.bind[].properties: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.jdbc.bind[].read-only: 

# Type: AuthenticationHandlerStates
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# Define the scope and state of this authentication handler
# and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.jdbc.bind[].state: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# The database connection URL.
#
# cas.authn.jdbc.bind[].url: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.BaseJdbcAuthenticationProperties
#
# The database user.
# <p>
# The database user must have sufficient
# permissions to be able to handle
# schema changes and updates, when
# needed.
#
# cas.authn.jdbc.bind[].user: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcAuthenticationProperties
#
# Settings related to query-encode-mode jdbc authentication. A JDBC
# querying handler that will pull back the password and the private salt
# value for a user and validate the encoded password using the public
# salt value. Assumes everything is inside the same database table.
# Supports settings for number of iterations as well as private salt.
# This password encoding method combines the private Salt and the public
# salt which it prepends to the password before hashing. If multiple
# iterations are used, the byte code hash of the first iteration is
# rehashed without the salt values. The final hash is converted to hex
# before comparing it to the database value.
#
# cas.authn.jdbc.encode: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Algorithm used for hashing.
#
# cas.authn.jdbc.encode[].algorithm-name: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# The default auto-commit behavior of connections in the pool.
#
# Determined whether queries such as update/insert should be immediately
# executed
# without waiting for an underlying transaction.
#
# cas.authn.jdbc.encode[].autocommit: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.jdbc.encode[].batch-size: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Indicates the maximum number of milliseconds that the service
# can
# wait to obtain a connection.
#
# cas.authn.jdbc.encode[].connection-timeout: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential
# and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase.
# The credential criteria may be one of the following
# options:<ul>
# <li>1) A regular expression pattern that is tested
# against the credential identifier.</li>
# <li>2) A fully qualified
# class name of your own design that implements {@code
# Predicate}.</li>
# <li>3) Path to an external Groovy script that
# implements the same interface.</li>
# </ul>
#
# cas.authn.jdbc.encode[].credential-criteria: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified.
# Will attempt to locate the data source object as is.
#
# cas.authn.jdbc.encode[].data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema.
# By default, creates and drops the schema automatically when
# a session is starts and ends.
# Setting the value to {@code validate}
# or {@code none} may be more desirable for production,
# but any of the
# following options can be used:
# <ul>
#     <li>{@code validate}:
# Validate the schema, but make no changes to the database.</li>
#    
# <li>{@code update}: Update the schema.</li>
#     <li>{@code create}:
# Create the schema, destroying previous data.</li>
#     <li>{@code
# create-drop}: Drop the schema at the end of the session.</li>
#    
# <li>{@code none}: Do nothing.</li>
# </ul>
# <p>
# Note that during a
# version migration where any schema has changed {@code create-drop}
# will result
# in the loss of all data as soon as CAS is started. For
# transient data like tickets this is probably
# not an issue, but in
# cases like the audit table important data could be lost. Using
# `update`, while safe
# for data, is confirmed to result in invalid
# database state. {@code validate} or {@code none} settings
# are likely
# the only safe options for production use.
# </p>
# For more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.jdbc.encode[].ddl-auto: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.jdbc.encode[].default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.jdbc.encode[].default-schema: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc)
# which allows such
# software to translate its generic SQL statements into vendor specific
# DDL, DML.
#
# cas.authn.jdbc.encode[].dialect: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Column name that indicates whether account is disabled.
#
# cas.authn.jdbc.encode[].disabled-field-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.jdbc.encode[].driver-class: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Column name that indicates whether account is expired.
#
# cas.authn.jdbc.encode[].expired-field-name: 

# Type: long
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Set the pool initialization failure timeout.
# <ul>
# <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization.
# The calling thread will be blocked from continuing
# until a successful connection
# to the database, or until the timeout
# is reached.  If the timeout is reached, then
# a {@code
# PoolInitializationException} will be thrown. </li>
# <li>A value of
# zero will <i>not</i>  prevent the pool from starting in the
# case
# that a connection cannot be obtained. However, upon start the pool
# will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery}
# and {@code connectionInitSql} are valid.  If
# those validations fail, an exception
# will be thrown.  If a
# connection cannot be obtained, the validation is skipped
# and the the
# pool will start and continue to try to obtain connections in the
#
# background. This can mean that callers to {@code
# DataSource#getConnection()} may
# encounter exceptions. </li>
# <li>A
# value less than zero will <i>not</i> bypass any connection attempt
# and
# validation during startup, and therefore the pool will start
# immediately.  The
# pool will continue to try to obtain connections in
# the background. This can mean
# that callers to {@code
# DataSource#getConnection()} may encounter exceptions. </li>
# </ul>
#
# Note that if this timeout value is greater than or equal to zero (0),
# and therefore an
# initial connection validation is performed, this
# timeout does not override the
# {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this
# timeout is
# applied.  The default value is one millisecond.
#
# cas.authn.jdbc.encode[].fail-fast-timeout: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.jdbc.encode[].fetch-size: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.jdbc.encode[].generate-statistics: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# The SQL query to be executed to test the validity of connections.
#
# This is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.jdbc.encode[].health-query: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.jdbc.encode[].idle-timeout: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test,
# in their own
# transaction.
# <p>
# Since these are typically read-only queries, it
# is rarely necessary to encapsulate them in their own transaction.
#
# This property only applies if {@link #autocommit} is disabled.
#
# cas.authn.jdbc.encode[].isolate-internal-queries: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Defines the isolation level for transactions.
#
# cas.authn.jdbc.encode[].isolation-level-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message
# is logged indicating a possible connection leak.
#
# cas.authn.jdbc.encode[].leak-threshold: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.jdbc.encode[].name: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Default number of iterations for hashing.
#
# cas.authn.jdbc.encode[].number-of-iterations: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Field/column name that indicates the number of iterations used for
# password hashing.
#
# cas.authn.jdbc.encode[].number-of-iterations-field-name: numIterations

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.jdbc.encode[].order: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# The database connection password.
#
# cas.authn.jdbc.encode[].password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'.
# Relevant when the
# type used is {@code DEFAULT}.
#
# cas.authn.jdbc.encode[].password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}.
# Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}.
# When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1},
# {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.jdbc.encode[].password-encoder.encoding-algorithm: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.jdbc.encode[].password-encoder.hash-length: 16

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.jdbc.encode[].password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2},
# {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders.
# Secret
# usually is an optional setting.
#
# cas.authn.jdbc.encode[].password-encoder.secret: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing.
#
# Usually relevant when dealing with {@link
# PasswordEncoderTypes#BCRYPT}, {@link PasswordEncoderTypes#PBKDF2} or
# {@link PasswordEncoderTypes#GLIBC_CRYPT}.
# When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.jdbc.encode[].password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use.
# Type may be specified as
# blank or {@code NONE} to disable password encoding.
# It may also
# refer to a fully-qualified class name that implements
# the Spring
# Security's {@code PasswordEncoder} interface
# if you wish you define
# your own encoder.
# <p>
# The following types may be used:
# <ul>
#   
# <li>{@code NONE}: No password encoding (i.e. plain-text) takes
# place.</li>
#     <li>{@code DEFAULT}: Use the {@code
# DefaultPasswordEncoder} of CAS. For message-digest
#     algorithms
# via {@code character-encoding} and {@code encoding-algorithm}.</li>
# 
# <li>{@code BCRYPT}: Use the {@code BCryptPasswordEncoder} based on the
# strength provided and an optional secret.</li>
#     <li>{@code
# SCRYPT}: Use the {@code SCryptPasswordEncoder}.</li>
#     <li>{@code
# PBKDF2}: Use the {@code Pbkdf2PasswordEncoder} based on the strength
# provided and an optional secret.</li>
#     <li>{@code STANDARD}: Use
# the {@code StandardPasswordEncoder} based on the secret
# provided.</li>
#     <li>{@code SSHA}: Use the {@code
# LdapShaPasswordEncoder} supports Ldap SHA and SSHA (salted-SHA). The
# values
#     are base-64 encoded and have the label {SHA} or {SSHA}
# prepended to the encoded hash.</li>
#     <li>{@code GLIBC_CRYPT}: Use
# the {@code GlibcCryptPasswordEncoder} based on the
#     {@code
# encoding-algorithm}, strength provided and an optional secret.</li>
# 
# <li>{@code org.example.MyEncoder}: An implementation of {@code
# PasswordEncoder} of your own choosing.</li>
#     <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li>
# </ul>
#
# cas.authn.jdbc.encode[].password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Password column name.
#
# cas.authn.jdbc.encode[].password-field-name: password

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.jdbc.encode[].physical-naming-strategy-class-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection
# will never be tested by the keepalive
# thread, only when it is idle will it be tested.
# Default is zero,
# which disables this feature.
#
# cas.authn.jdbc.encode[].pool.keep-alive-time: 0

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep
# in the pool,
# including both idle and in-use connections.
#
# cas.authn.jdbc.encode[].pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait
#
# while attempting to connect to a database.
# <p>
# A value of zero
# specifies that the timeout is the default system timeout
# if there is
# one; otherwise, it specifies that there is no timeout.
#
# cas.authn.jdbc.encode[].pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection
# reaches this timeout, even if recently
# used,
# it will be retired from the pool. An in-use connection will
# never be retired, only when it is idle will it be removed.
#
# cas.authn.jdbc.encode[].pool.maximum-lifetime: PT10M

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed
# to reach,
# including both idle and in-use connections.
#
# cas.authn.jdbc.encode[].pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for
# the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.jdbc.encode[].pool.name: 

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed.
# <p>
# There is a
# performance impact when pool suspension is enabled.
# Unless you need
# it (for a redundancy system for example) do not enable it.
#
# cas.authn.jdbc.encode[].pool.suspension: 

# Type: long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the
# pool will wait for a
# connection to be validated as alive.
#
# cas.authn.jdbc.encode[].pool.timeout-millis: 1000

# Type: java.util.List<String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# List of column names to fetch as user attributes.
# This is only
# effective in scenarios where the JDBC authentication method
# is able
# to execute a SQL query against a database table and return results.
#
# Authentication methods that merely check for the user account's
# existence
# or verify the user with just a simple bind are not able to
# fetch attributes.
# <p>Attributes name are separated by a comma and
# may use a "directed list" syntax where the allowed
# syntax would be
# {@code column-name->cas-attribute}.
#
# cas.authn.jdbc.encode[].principal-attribute-list: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.jdbc.encode[].principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.jdbc.encode[].principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.jdbc.encode[].principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.jdbc.encode[].principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.encode[].principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.encode[].principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Defines the propagation behavior for transactions.
#
# cas.authn.jdbc.encode[].propagation-behavior-name: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.jdbc.encode[].properties: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.jdbc.encode[].read-only: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Field/column name that indicates the salt used for password hashing.
#
# cas.authn.jdbc.encode[].salt-field-name: salt

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# SQL query to execute and look up accounts.
# Example: {@code SELECT *
# FROM table WHERE username=?}.
#
# cas.authn.jdbc.encode[].sql: 

# Type: AuthenticationHandlerStates
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Define the scope and state of this authentication handler
# and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.jdbc.encode[].state: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# Static salt to be used for hashing.
#
# cas.authn.jdbc.encode[].static-salt: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# The database connection URL.
#
# cas.authn.jdbc.encode[].url: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryEncodeJdbcAuthenticationProperties
#
# The database user.
# <p>
# The database user must have sufficient
# permissions to be able to handle
# schema changes and updates, when
# needed.
#
# cas.authn.jdbc.encode[].user: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcAuthenticationProperties
#
# Settings related to query-mode jdbc authentication. Authenticates a
# user by comparing the user password (which can be encoded with a
# password encoder) against the password on record determined by a
# configurable database query.
#
# cas.authn.jdbc.query: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# The default auto-commit behavior of connections in the pool.
#
# Determined whether queries such as update/insert should be immediately
# executed
# without waiting for an underlying transaction.
#
# cas.authn.jdbc.query[].autocommit: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.jdbc.query[].batch-size: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Indicates the maximum number of milliseconds that the service
# can
# wait to obtain a connection.
#
# cas.authn.jdbc.query[].connection-timeout: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential
# and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase.
# The credential criteria may be one of the following
# options:<ul>
# <li>1) A regular expression pattern that is tested
# against the credential identifier.</li>
# <li>2) A fully qualified
# class name of your own design that implements {@code
# Predicate}.</li>
# <li>3) Path to an external Groovy script that
# implements the same interface.</li>
# </ul>
#
# cas.authn.jdbc.query[].credential-criteria: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified.
# Will attempt to locate the data source object as is.
#
# cas.authn.jdbc.query[].data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema.
# By default, creates and drops the schema automatically when
# a session is starts and ends.
# Setting the value to {@code validate}
# or {@code none} may be more desirable for production,
# but any of the
# following options can be used:
# <ul>
#     <li>{@code validate}:
# Validate the schema, but make no changes to the database.</li>
#    
# <li>{@code update}: Update the schema.</li>
#     <li>{@code create}:
# Create the schema, destroying previous data.</li>
#     <li>{@code
# create-drop}: Drop the schema at the end of the session.</li>
#    
# <li>{@code none}: Do nothing.</li>
# </ul>
# <p>
# Note that during a
# version migration where any schema has changed {@code create-drop}
# will result
# in the loss of all data as soon as CAS is started. For
# transient data like tickets this is probably
# not an issue, but in
# cases like the audit table important data could be lost. Using
# `update`, while safe
# for data, is confirmed to result in invalid
# database state. {@code validate} or {@code none} settings
# are likely
# the only safe options for production use.
# </p>
# For more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.jdbc.query[].ddl-auto: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.jdbc.query[].default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.jdbc.query[].default-schema: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc)
# which allows such
# software to translate its generic SQL statements into vendor specific
# DDL, DML.
#
# cas.authn.jdbc.query[].dialect: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.jdbc.query[].driver-class: 

# Type: long
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Set the pool initialization failure timeout.
# <ul>
# <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization.
# The calling thread will be blocked from continuing
# until a successful connection
# to the database, or until the timeout
# is reached.  If the timeout is reached, then
# a {@code
# PoolInitializationException} will be thrown. </li>
# <li>A value of
# zero will <i>not</i>  prevent the pool from starting in the
# case
# that a connection cannot be obtained. However, upon start the pool
# will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery}
# and {@code connectionInitSql} are valid.  If
# those validations fail, an exception
# will be thrown.  If a
# connection cannot be obtained, the validation is skipped
# and the the
# pool will start and continue to try to obtain connections in the
#
# background. This can mean that callers to {@code
# DataSource#getConnection()} may
# encounter exceptions. </li>
# <li>A
# value less than zero will <i>not</i> bypass any connection attempt
# and
# validation during startup, and therefore the pool will start
# immediately.  The
# pool will continue to try to obtain connections in
# the background. This can mean
# that callers to {@code
# DataSource#getConnection()} may encounter exceptions. </li>
# </ul>
#
# Note that if this timeout value is greater than or equal to zero (0),
# and therefore an
# initial connection validation is performed, this
# timeout does not override the
# {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this
# timeout is
# applied.  The default value is one millisecond.
#
# cas.authn.jdbc.query[].fail-fast-timeout: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.jdbc.query[].fetch-size: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Boolean field that should indicate whether the account is disabled.
#
# cas.authn.jdbc.query[].field-disabled: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Boolean field that should indicate whether the account is expired.
#
# cas.authn.jdbc.query[].field-expired: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Password field/column name to retrieve.
#
# cas.authn.jdbc.query[].field-password: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.jdbc.query[].generate-statistics: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# The SQL query to be executed to test the validity of connections.
#
# This is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.jdbc.query[].health-query: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.jdbc.query[].idle-timeout: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test,
# in their own
# transaction.
# <p>
# Since these are typically read-only queries, it
# is rarely necessary to encapsulate them in their own transaction.
#
# This property only applies if {@link #autocommit} is disabled.
#
# cas.authn.jdbc.query[].isolate-internal-queries: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Defines the isolation level for transactions.
#
# cas.authn.jdbc.query[].isolation-level-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message
# is logged indicating a possible connection leak.
#
# cas.authn.jdbc.query[].leak-threshold: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.jdbc.query[].name: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.jdbc.query[].order: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# The database connection password.
#
# cas.authn.jdbc.query[].password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'.
# Relevant when the
# type used is {@code DEFAULT}.
#
# cas.authn.jdbc.query[].password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}.
# Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}.
# When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1},
# {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.jdbc.query[].password-encoder.encoding-algorithm: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.jdbc.query[].password-encoder.hash-length: 16

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.jdbc.query[].password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2},
# {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders.
# Secret
# usually is an optional setting.
#
# cas.authn.jdbc.query[].password-encoder.secret: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing.
#
# Usually relevant when dealing with {@link
# PasswordEncoderTypes#BCRYPT}, {@link PasswordEncoderTypes#PBKDF2} or
# {@link PasswordEncoderTypes#GLIBC_CRYPT}.
# When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.jdbc.query[].password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use.
# Type may be specified as
# blank or {@code NONE} to disable password encoding.
# It may also
# refer to a fully-qualified class name that implements
# the Spring
# Security's {@code PasswordEncoder} interface
# if you wish you define
# your own encoder.
# <p>
# The following types may be used:
# <ul>
#   
# <li>{@code NONE}: No password encoding (i.e. plain-text) takes
# place.</li>
#     <li>{@code DEFAULT}: Use the {@code
# DefaultPasswordEncoder} of CAS. For message-digest
#     algorithms
# via {@code character-encoding} and {@code encoding-algorithm}.</li>
# 
# <li>{@code BCRYPT}: Use the {@code BCryptPasswordEncoder} based on the
# strength provided and an optional secret.</li>
#     <li>{@code
# SCRYPT}: Use the {@code SCryptPasswordEncoder}.</li>
#     <li>{@code
# PBKDF2}: Use the {@code Pbkdf2PasswordEncoder} based on the strength
# provided and an optional secret.</li>
#     <li>{@code STANDARD}: Use
# the {@code StandardPasswordEncoder} based on the secret
# provided.</li>
#     <li>{@code SSHA}: Use the {@code
# LdapShaPasswordEncoder} supports Ldap SHA and SSHA (salted-SHA). The
# values
#     are base-64 encoded and have the label {SHA} or {SSHA}
# prepended to the encoded hash.</li>
#     <li>{@code GLIBC_CRYPT}: Use
# the {@code GlibcCryptPasswordEncoder} based on the
#     {@code
# encoding-algorithm}, strength provided and an optional secret.</li>
# 
# <li>{@code org.example.MyEncoder}: An implementation of {@code
# PasswordEncoder} of your own choosing.</li>
#     <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li>
# </ul>
#
# cas.authn.jdbc.query[].password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.jdbc.query[].physical-naming-strategy-class-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection
# will never be tested by the keepalive
# thread, only when it is idle will it be tested.
# Default is zero,
# which disables this feature.
#
# cas.authn.jdbc.query[].pool.keep-alive-time: 0

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep
# in the pool,
# including both idle and in-use connections.
#
# cas.authn.jdbc.query[].pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait
#
# while attempting to connect to a database.
# <p>
# A value of zero
# specifies that the timeout is the default system timeout
# if there is
# one; otherwise, it specifies that there is no timeout.
#
# cas.authn.jdbc.query[].pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection
# reaches this timeout, even if recently
# used,
# it will be retired from the pool. An in-use connection will
# never be retired, only when it is idle will it be removed.
#
# cas.authn.jdbc.query[].pool.maximum-lifetime: PT10M

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed
# to reach,
# including both idle and in-use connections.
#
# cas.authn.jdbc.query[].pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for
# the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.jdbc.query[].pool.name: 

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed.
# <p>
# There is a
# performance impact when pool suspension is enabled.
# Unless you need
# it (for a redundancy system for example) do not enable it.
#
# cas.authn.jdbc.query[].pool.suspension: 

# Type: long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the
# pool will wait for a
# connection to be validated as alive.
#
# cas.authn.jdbc.query[].pool.timeout-millis: 1000

# Type: java.util.List<String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# List of column names to fetch as user attributes.
# This is only
# effective in scenarios where the JDBC authentication method
# is able
# to execute a SQL query against a database table and return results.
#
# Authentication methods that merely check for the user account's
# existence
# or verify the user with just a simple bind are not able to
# fetch attributes.
# <p>Attributes name are separated by a comma and
# may use a "directed list" syntax where the allowed
# syntax would be
# {@code column-name->cas-attribute}.
#
# cas.authn.jdbc.query[].principal-attribute-list: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.jdbc.query[].principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.jdbc.query[].principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.jdbc.query[].principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.jdbc.query[].principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.query[].principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.query[].principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Defines the propagation behavior for transactions.
#
# cas.authn.jdbc.query[].propagation-behavior-name: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.jdbc.query[].properties: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.jdbc.query[].read-only: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# SQL query to execute. Example: {@code SELECT * FROM table WHERE
# name=?}.
#
# cas.authn.jdbc.query[].sql: 

# Type: AuthenticationHandlerStates
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# Define the scope and state of this authentication handler
# and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.jdbc.query[].state: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# The database connection URL.
#
# cas.authn.jdbc.query[].url: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.QueryJdbcAuthenticationProperties
#
# The database user.
# <p>
# The database user must have sufficient
# permissions to be able to handle
# schema changes and updates, when
# needed.
#
# cas.authn.jdbc.query[].user: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.JdbcAuthenticationProperties
#
# Settings related to search-mode jdbc authentication. Searches for a
# user record by querying against a username and password; the user is
# authenticated if at least one result is found.
#
# cas.authn.jdbc.search: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# The default auto-commit behavior of connections in the pool.
#
# Determined whether queries such as update/insert should be immediately
# executed
# without waiting for an underlying transaction.
#
# cas.authn.jdbc.search[].autocommit: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.jdbc.search[].batch-size: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Indicates the maximum number of milliseconds that the service
# can
# wait to obtain a connection.
#
# cas.authn.jdbc.search[].connection-timeout: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential
# and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase.
# The credential criteria may be one of the following
# options:<ul>
# <li>1) A regular expression pattern that is tested
# against the credential identifier.</li>
# <li>2) A fully qualified
# class name of your own design that implements {@code
# Predicate}.</li>
# <li>3) Path to an external Groovy script that
# implements the same interface.</li>
# </ul>
#
# cas.authn.jdbc.search[].credential-criteria: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified.
# Will attempt to locate the data source object as is.
#
# cas.authn.jdbc.search[].data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema.
# By default, creates and drops the schema automatically when
# a session is starts and ends.
# Setting the value to {@code validate}
# or {@code none} may be more desirable for production,
# but any of the
# following options can be used:
# <ul>
#     <li>{@code validate}:
# Validate the schema, but make no changes to the database.</li>
#    
# <li>{@code update}: Update the schema.</li>
#     <li>{@code create}:
# Create the schema, destroying previous data.</li>
#     <li>{@code
# create-drop}: Drop the schema at the end of the session.</li>
#    
# <li>{@code none}: Do nothing.</li>
# </ul>
# <p>
# Note that during a
# version migration where any schema has changed {@code create-drop}
# will result
# in the loss of all data as soon as CAS is started. For
# transient data like tickets this is probably
# not an issue, but in
# cases like the audit table important data could be lost. Using
# `update`, while safe
# for data, is confirmed to result in invalid
# database state. {@code validate} or {@code none} settings
# are likely
# the only safe options for production use.
# </p>
# For more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.jdbc.search[].ddl-auto: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.jdbc.search[].default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.jdbc.search[].default-schema: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc)
# which allows such
# software to translate its generic SQL statements into vendor specific
# DDL, DML.
#
# cas.authn.jdbc.search[].dialect: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.jdbc.search[].driver-class: 

# Type: long
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Set the pool initialization failure timeout.
# <ul>
# <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization.
# The calling thread will be blocked from continuing
# until a successful connection
# to the database, or until the timeout
# is reached.  If the timeout is reached, then
# a {@code
# PoolInitializationException} will be thrown. </li>
# <li>A value of
# zero will <i>not</i>  prevent the pool from starting in the
# case
# that a connection cannot be obtained. However, upon start the pool
# will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery}
# and {@code connectionInitSql} are valid.  If
# those validations fail, an exception
# will be thrown.  If a
# connection cannot be obtained, the validation is skipped
# and the the
# pool will start and continue to try to obtain connections in the
#
# background. This can mean that callers to {@code
# DataSource#getConnection()} may
# encounter exceptions. </li>
# <li>A
# value less than zero will <i>not</i> bypass any connection attempt
# and
# validation during startup, and therefore the pool will start
# immediately.  The
# pool will continue to try to obtain connections in
# the background. This can mean
# that callers to {@code
# DataSource#getConnection()} may encounter exceptions. </li>
# </ul>
#
# Note that if this timeout value is greater than or equal to zero (0),
# and therefore an
# initial connection validation is performed, this
# timeout does not override the
# {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this
# timeout is
# applied.  The default value is one millisecond.
#
# cas.authn.jdbc.search[].fail-fast-timeout: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.jdbc.search[].fetch-size: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Password column name.
#
# cas.authn.jdbc.search[].field-password: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Username column name.
#
# cas.authn.jdbc.search[].field-user: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.jdbc.search[].generate-statistics: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# The SQL query to be executed to test the validity of connections.
#
# This is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.jdbc.search[].health-query: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.jdbc.search[].idle-timeout: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test,
# in their own
# transaction.
# <p>
# Since these are typically read-only queries, it
# is rarely necessary to encapsulate them in their own transaction.
#
# This property only applies if {@link #autocommit} is disabled.
#
# cas.authn.jdbc.search[].isolate-internal-queries: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Defines the isolation level for transactions.
#
# cas.authn.jdbc.search[].isolation-level-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message
# is logged indicating a possible connection leak.
#
# cas.authn.jdbc.search[].leak-threshold: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.jdbc.search[].name: 

# Type: int
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.jdbc.search[].order: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# The database connection password.
#
# cas.authn.jdbc.search[].password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'.
# Relevant when the
# type used is {@code DEFAULT}.
#
# cas.authn.jdbc.search[].password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}.
# Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}.
# When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1},
# {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.jdbc.search[].password-encoder.encoding-algorithm: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.jdbc.search[].password-encoder.hash-length: 16

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.jdbc.search[].password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2},
# {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders.
# Secret
# usually is an optional setting.
#
# cas.authn.jdbc.search[].password-encoder.secret: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing.
#
# Usually relevant when dealing with {@link
# PasswordEncoderTypes#BCRYPT}, {@link PasswordEncoderTypes#PBKDF2} or
# {@link PasswordEncoderTypes#GLIBC_CRYPT}.
# When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.jdbc.search[].password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use.
# Type may be specified as
# blank or {@code NONE} to disable password encoding.
# It may also
# refer to a fully-qualified class name that implements
# the Spring
# Security's {@code PasswordEncoder} interface
# if you wish you define
# your own encoder.
# <p>
# The following types may be used:
# <ul>
#   
# <li>{@code NONE}: No password encoding (i.e. plain-text) takes
# place.</li>
#     <li>{@code DEFAULT}: Use the {@code
# DefaultPasswordEncoder} of CAS. For message-digest
#     algorithms
# via {@code character-encoding} and {@code encoding-algorithm}.</li>
# 
# <li>{@code BCRYPT}: Use the {@code BCryptPasswordEncoder} based on the
# strength provided and an optional secret.</li>
#     <li>{@code
# SCRYPT}: Use the {@code SCryptPasswordEncoder}.</li>
#     <li>{@code
# PBKDF2}: Use the {@code Pbkdf2PasswordEncoder} based on the strength
# provided and an optional secret.</li>
#     <li>{@code STANDARD}: Use
# the {@code StandardPasswordEncoder} based on the secret
# provided.</li>
#     <li>{@code SSHA}: Use the {@code
# LdapShaPasswordEncoder} supports Ldap SHA and SSHA (salted-SHA). The
# values
#     are base-64 encoded and have the label {SHA} or {SSHA}
# prepended to the encoded hash.</li>
#     <li>{@code GLIBC_CRYPT}: Use
# the {@code GlibcCryptPasswordEncoder} based on the
#     {@code
# encoding-algorithm}, strength provided and an optional secret.</li>
# 
# <li>{@code org.example.MyEncoder}: An implementation of {@code
# PasswordEncoder} of your own choosing.</li>
#     <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li>
# </ul>
#
# cas.authn.jdbc.search[].password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.jdbc.search[].physical-naming-strategy-class-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection
# will never be tested by the keepalive
# thread, only when it is idle will it be tested.
# Default is zero,
# which disables this feature.
#
# cas.authn.jdbc.search[].pool.keep-alive-time: 0

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep
# in the pool,
# including both idle and in-use connections.
#
# cas.authn.jdbc.search[].pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait
#
# while attempting to connect to a database.
# <p>
# A value of zero
# specifies that the timeout is the default system timeout
# if there is
# one; otherwise, it specifies that there is no timeout.
#
# cas.authn.jdbc.search[].pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection
# reaches this timeout, even if recently
# used,
# it will be retired from the pool. An in-use connection will
# never be retired, only when it is idle will it be removed.
#
# cas.authn.jdbc.search[].pool.maximum-lifetime: PT10M

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed
# to reach,
# including both idle and in-use connections.
#
# cas.authn.jdbc.search[].pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for
# the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.jdbc.search[].pool.name: 

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed.
# <p>
# There is a
# performance impact when pool suspension is enabled.
# Unless you need
# it (for a redundancy system for example) do not enable it.
#
# cas.authn.jdbc.search[].pool.suspension: 

# Type: long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the
# pool will wait for a
# connection to be validated as alive.
#
# cas.authn.jdbc.search[].pool.timeout-millis: 1000

# Type: java.util.List<String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# List of column names to fetch as user attributes.
# This is only
# effective in scenarios where the JDBC authentication method
# is able
# to execute a SQL query against a database table and return results.
#
# Authentication methods that merely check for the user account's
# existence
# or verify the user with just a simple bind are not able to
# fetch attributes.
# <p>Attributes name are separated by a comma and
# may use a "directed list" syntax where the allowed
# syntax would be
# {@code column-name->cas-attribute}.
#
# cas.authn.jdbc.search[].principal-attribute-list: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.jdbc.search[].principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.jdbc.search[].principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.jdbc.search[].principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.jdbc.search[].principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.search[].principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.jdbc.search[].principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Defines the propagation behavior for transactions.
#
# cas.authn.jdbc.search[].propagation-behavior-name: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.jdbc.search[].properties: 

# Type: boolean
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.jdbc.search[].read-only: 

# Type: AuthenticationHandlerStates
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Define the scope and state of this authentication handler
# and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.jdbc.search[].state: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# Table name where accounts are held.
#
# cas.authn.jdbc.search[].table-users: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# The database connection URL.
#
# cas.authn.jdbc.search[].url: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-authentication
# Owner: org.apereo.cas.configuration.model.support.jdbc.authn.SearchJdbcAuthenticationProperties
#
# The database user.
# <p>
# The database user must have sufficient
# permissions to be able to handle
# schema changes and updates, when
# needed.
#
# cas.authn.jdbc.search[].user: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.JsonResourceAuthenticationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.json.location: 

# Type: java.lang.String
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.JsonResourceAuthenticationProperties
#
# Authentication handler name used to verify credentials in the file.
#
# cas.authn.json.name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.json.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.json.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.json.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.json.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.json.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.json.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.json.password-encoder.type: NONE

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Indicates whether account state handling should be enabled to process
# warnings or errors reported back from the authentication response,
# produced by the source.
#
# cas.authn.json.password-policy.account-state-handling-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Indicates if warning should be displayed, when the ldap attribute
# value matches the {@link #warningAttributeValue}.
#
# cas.authn.json.password-policy.display-warning-on-match: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Whether password policy should be enabled.
#
# cas.authn.json.password-policy.enabled: true

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPasswordPolicyProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.json.password-policy.groovy.location: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# When dealing with FreeIPA, indicates the number of allows login
# failures.
#
# cas.authn.json.password-policy.login-failures: 5

# Type: java.util.Map<java.lang.String,java.lang.Class<? extends javax.security.auth.login.LoginException>>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Key-value structure (Map) that indicates a list of boolean attributes
# as keys. If either attribute value is true, indicating an account
# state is flagged, the corresponding error can be thrown. Example
# {@code accountLocked=javax.security.auth.login.AccountLockedException}
#
# cas.authn.json.password-policy.policy-attributes: 

# Type: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties$PasswordPolicyHandlingOptions
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Decide how authentication should handle password policy changes.
#
# Available values are as follows:
# <ul><li>{@code DEFAULT}: Default
# option to handle policy changes.</li><li>{@code GROOVY}: Handle
# account password policies via Groovy.</li><li>{@code
# REJECT_RESULT_CODE}: Strategy to only activate password policy
# if
# the authentication response code is not blocked.</li></ul>
#
# cas.authn.json.password-policy.strategy: DEFAULT

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Always display the password expiration warning regardless.
#
# cas.authn.json.password-policy.warn-all: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings in case the entry carries this attribute.
#
# cas.authn.json.password-policy.warning-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings in case the entry carries an attribute {@link
# #warningAttributeName} whose value matches this field.
#
# cas.authn.json.password-policy.warning-attribute-value: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties
#
# This is used to calculate a warning period to see if account expiry is
# within the calculated window.
#
# cas.authn.json.password-policy.warning-days: 30

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.json.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.json.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.json.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.json.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.json.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.json.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.JsonResourceAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.json.state: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationProperties
#
# Collection of settings related to LDAP authentication. These settings
# are required to be indexed (i.e. ldap[0].xyz).
#
# cas.authn.ldap: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# List of additional attributes to retrieve, if any.
#
# cas.authn.ldap[].additional-attributes: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Flag to indicate whether CAS should block authentication
# if a
# specific/configured principal id attribute is not found.
#
# cas.authn.ldap[].allow-missing-principal-attribute-value: true

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.authn.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.ldap[].allow-multiple-entries: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Sets a flag that determines whether multiple values are allowed for
# the {@link #principalAttributeId}.
# This flag only has an effect if
# {@link #principalAttributeId} is configured. If multiple values are
# detected
# when the flag is false, the first value is used and a
# warning is logged. If multiple values are detected
# when the flag is
# true, an exception is raised.
#
# cas.authn.ldap[].allow-multiple-principal-attribute-values: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Base DN to use.
# There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating
# the LDAP configuration block for each individual
# base-dn, each entry can be specified
# and joined together using a
# special delimiter character. The user DN is retrieved using the
# combination of all base-dn and DN
# resolvers in the order defined. DN
# resolution should fail if multiple DNs are found. Otherwise the first
# DN found is returned.
# Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.ldap[].base-dn: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.authn.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.authn.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.authn.ldap[].block-wait-time: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# When entry DN should be called as an attribute and stored into the
# principal.
#
# cas.authn.ldap[].collect-dn-attribute: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.authn.ldap[].connection-strategy: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential
# and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase.
# The credential criteria may be one of the following
# options:<ul>
# <li>1) A regular expression pattern that is tested
# against the credential identifier.</li>
# <li>2) A fully qualified
# class name of your own design that implements {@code
# Predicate}.</li>
# <li>3) Path to an external Groovy script that
# implements the same interface.</li>
# </ul>
#
# cas.authn.ldap[].credential-criteria: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Define how aliases are de-referenced.
# Accepted values are:
# <ul>
#
# <li>{@code NEVER}</li>
# <li>{@code SEARCHING}: dereference when
# searching the entries beneath the starting point but not when
# searching for the starting entry.</li>
# <li>{@code FINDING}:
# dereference when searching for the starting entry but not when
# searching the entries beneath the starting point.</li>
# <li>{@code
# ALWAYS}: dereference when searching for the starting entry and when
# searching the entries beneath the starting point.</li>
# </ul>
#
# cas.authn.ldap[].deref-aliases: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.ldap[].disable-pooling: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Specify the dn format accepted by the AD authenticator, etc.
# Example
# format might be {@code uid=%s,ou=people,dc=example,dc=org}.
#
# cas.authn.ldap[].dn-format: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Whether specific search entry resolvers need to be set
# on the
# authenticator, or the default should be used.
#
# cas.authn.ldap[].enhance-with-entry-resolver: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.authn.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Set if search referrals should be followed.
#
# cas.authn.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.authn.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Keystore password.
#
# cas.authn.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.ldap[].max-pool-size: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.authn.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Name of the LDAP handler.
#
# cas.authn.ldap[].name: 

# Type: java.lang.Integer
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.ldap[].order: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Request that the server return results in batches of a
# specific
# size. See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>.
# This control is often
# used to work around server result size
# limits.
# A negative/zero value disables paged requests.
#
# cas.authn.ldap[].page-size: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'.
# Relevant when the
# type used is {@code DEFAULT}.
#
# cas.authn.ldap[].password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}.
# Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}.
# When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1},
# {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.ldap[].password-encoder.encoding-algorithm: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.ldap[].password-encoder.hash-length: 16

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.ldap[].password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2},
# {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders.
# Secret
# usually is an optional setting.
#
# cas.authn.ldap[].password-encoder.secret: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing.
#
# Usually relevant when dealing with {@link
# PasswordEncoderTypes#BCRYPT}, {@link PasswordEncoderTypes#PBKDF2} or
# {@link PasswordEncoderTypes#GLIBC_CRYPT}.
# When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.ldap[].password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use.
# Type may be specified as
# blank or {@code NONE} to disable password encoding.
# It may also
# refer to a fully-qualified class name that implements
# the Spring
# Security's {@code PasswordEncoder} interface
# if you wish you define
# your own encoder.
# <p>
# The following types may be used:
# <ul>
#   
# <li>{@code NONE}: No password encoding (i.e. plain-text) takes
# place.</li>
#     <li>{@code DEFAULT}: Use the {@code
# DefaultPasswordEncoder} of CAS. For message-digest
#     algorithms
# via {@code character-encoding} and {@code encoding-algorithm}.</li>
# 
# <li>{@code BCRYPT}: Use the {@code BCryptPasswordEncoder} based on the
# strength provided and an optional secret.</li>
#     <li>{@code
# SCRYPT}: Use the {@code SCryptPasswordEncoder}.</li>
#     <li>{@code
# PBKDF2}: Use the {@code Pbkdf2PasswordEncoder} based on the strength
# provided and an optional secret.</li>
#     <li>{@code STANDARD}: Use
# the {@code StandardPasswordEncoder} based on the secret
# provided.</li>
#     <li>{@code SSHA}: Use the {@code
# LdapShaPasswordEncoder} supports Ldap SHA and SSHA (salted-SHA). The
# values
#     are base-64 encoded and have the label {SHA} or {SSHA}
# prepended to the encoded hash.</li>
#     <li>{@code GLIBC_CRYPT}: Use
# the {@code GlibcCryptPasswordEncoder} based on the
#     {@code
# encoding-algorithm}, strength provided and an optional secret.</li>
# 
# <li>{@code org.example.MyEncoder}: An implementation of {@code
# PasswordEncoder} of your own choosing.</li>
#     <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li>
# </ul>
#
# cas.authn.ldap[].password-encoder.type: NONE

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Indicates whether account state handling should be enabled to
# process
# warnings or errors reported back from the authentication
# response, produced by the source.
#
# cas.authn.ldap[].password-policy.account-state-handling-enabled: true

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# An implementation of a policy class that knows how to handle LDAP
# responses.
# The class must be an implementation of {@code
# org.ldaptive.auth.AuthenticationResponseHandler}.
#
# cas.authn.ldap[].password-policy.custom-policy-class: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Indicates if warning should be displayed, when the ldap attribute
# value
# matches the {@link #warningAttributeValue}.
#
# cas.authn.ldap[].password-policy.display-warning-on-match: true

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Whether password policy should be enabled.
#
# cas.authn.ldap[].password-policy.enabled: true

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Handle password policy via Groovy script.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.ldap[].password-policy.groovy.location: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# When dealing with FreeIPA, indicates the number of allows login
# failures.
#
# cas.authn.ldap[].password-policy.login-failures: 5

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# This is used to calculate an expiration period for the account
# password.
# When defined, LDAP password policy handling will use the
# {@code pwdLastSet} attribute
# which must be returned from the LDAP
# authentication attempt.
# LDAP password policy handling will emit a
# warning for the {@code pwdLastSet}
# value plus the expiration
# amount.
# A negative value will disable the operations that calculate
# the expiration period.
#
# cas.authn.ldap[].password-policy.password-expiration-number-of-days: 180

# Type: java.util.Map<String,Class<? extends LoginException>>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Key-value structure (Map) that indicates a list of boolean attributes
# as keys.
# If either attribute value is true, indicating an account
# state is flagged,
# the corresponding error can be thrown.
# Example
# {@code accountLocked=javax.security.auth.login.AccountLockedException}
#
# cas.authn.ldap[].password-policy.policy-attributes: 

# Type: org.apereo.cas.configuration.model.core.authentication.PasswordPolicyProperties.PasswordPolicyHandlingOptions
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Decide how authentication should handle password policy changes.
#
# Available values are as follows:
# <ul><li>{@code DEFAULT}: Default
# option to handle policy changes.</li><li>{@code GROOVY}: Handle
# account password policies via Groovy.</li><li>{@code
# REJECT_RESULT_CODE}: Strategy to only activate password policy
# if
# the authentication response code is not blocked.</li></ul>
#
# cas.authn.ldap[].password-policy.strategy: DEFAULT

# Type: AbstractLdapProperties.LdapType
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# LDAP type.
#
# cas.authn.ldap[].password-policy.type: GENERIC

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Always display the password expiration warning regardless.
#
# cas.authn.ldap[].password-policy.warn-all: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings
# in case the entry carries this attribute.
#
# cas.authn.ldap[].password-policy.warning-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# Used by an account state handling policy that only calculates account
# warnings
# in case the entry carries an attribute {@link
# #warningAttributeName}
# whose value matches this field.
#
# cas.authn.ldap[].password-policy.warning-attribute-value: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapPasswordPolicyProperties
#
# This is used to calculate
# a warning period to see if account expiry
# is within the calculated window.
#
# cas.authn.ldap[].password-policy.warning-days: 30

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.authn.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The attribute to use as the principal identifier built during and upon
# a successful authentication attempt.
#
# cas.authn.ldap[].principal-attribute-id: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# List of attributes to retrieve from LDAP.
# Attributes can be
# virtually remapped to multiple names.
# Example {@code
# cn:commonName,givenName,eduPersonTargettedId:SOME_IDENTIFIER}.
# <p>
#
# To fetch and resolve attributes that carry tags/options,
# consider
# tagging the mapped attribute as such: {@code
# homePostalAddress:homePostalAddress;}.
#
# cas.authn.ldap[].principal-attribute-list: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# If principalAttributePassword is empty then a user simple bind is done
# to validate credentials
# otherwise the given attribute is compared
# with the given principalAttributePassword
# using the SHA encrypted
# value of it.
# <p>
# For the anonymous authentication type,
# if
# principalAttributePassword is empty then a user simple bind is done to
# validate credentials
# otherwise the given attribute is compared with
# the given principalAttributePassword
# using the SHA encrypted value
# of it.
# </p>
#
# cas.authn.ldap[].principal-attribute-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Name of attribute to be used for principal's DN.
#
# cas.authn.ldap[].principal-dn-attribute-name: principalLdapDn

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.ldap[].principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.ldap[].principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.ldap[].principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.ldap[].principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.ldap[].principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.ldap[].principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.authn.ldap[].prune-period: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# If this attribute is set, the value found in the first attribute
#
# value will be used in place of the DN.
#
# cas.authn.ldap[].resolve-from-attribute: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Duration of time to wait for responses.
#
# cas.authn.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# SASL authorization id.
#
# cas.authn.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The SASL mechanism.
#
# cas.authn.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# SASL quality of protected.
#
# cas.authn.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The SASL realm.
#
# cas.authn.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# SASL security strength.
#
# cas.authn.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.ldap[].search-entry-handlers.case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.ldap[].search-entry-handlers.case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.ldap[].search-entry-handlers.case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.ldap[].search-entry-handlers.case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.ldap[].search-entry-handlers.dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.ldap[].search-entry-handlers.dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.ldap[].search-entry-handlers.merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.ldap[].search-entry-handlers.merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.ldap[].search-entry-handlers.primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.ldap[].search-entry-handlers.primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.ldap[].search-entry-handlers.recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.ldap[].search-entry-handlers.recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.ldap[].search-entry-handlers.search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.ldap[].search-entry-handlers.search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.ldap[].search-entry-handlers.type: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# User filter to use for searching.
# Syntax is {@code cn={user}} or
# {@code cn={0}}.
# <p>
# You may also provide an external groovy
# script
# in the syntax of {@code file:/path/to/GroovyScript.groovy}
#
# to fully build the final filter template dynamically.
#
# cas.authn.ldap[].search-filter: 

# Type: AuthenticationHandlerStates
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Define the scope and state of this authentication handler
# and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.ldap[].state: ACTIVE

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.ldap[].subtree-search: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.authn.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.authn.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Password needed to open the truststore.
#
# cas.authn.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.ldap[].trust-store-type: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapAuthenticationProperties.AuthenticationTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# The authentication type.
# <ul>
# <li>{@code AD} - Users authenticate
# with {@code sAMAccountName}. </li>
# 
# <li>{@code AUTHENTICATED} -
# Manager bind/search type of authentication.
# If {@code}
# principalAttributePassword}
# is empty then a user simple bind is done
# to validate credentials. Otherwise the given
# attribute is compared
# with the given {@code principalAttributePassword} using
# the {@code
# SHA} encrypted value of it.</li>
# 
# <li>{@code ANONYMOUS}: Similar
# semantics as {@code AUTHENTICATED} except no {@code bindDn}
# and
# {@code bindCredential} may be specified to initialize the
# connection.
# If {@code principalAttributePassword} is empty then a
# user simple bind is done
# to validate credentials. Otherwise the
# given attribute is compared with
# the given {@code
# principalAttributePassword} using the {@code SHA} encrypted value of
# it.</li>
# 
# <li>DIRECT: Direct Bind - Compute user DN from format
# string and perform simple bind.
# This is relevant when no search is
# required to compute the DN needed for a bind operation.
# Use cases
# for this type are:
# 1) All users are under a single branch in the
# directory, {@code e.g. ou=Users,dc=example,dc=org.}
# 2) The username
# provided on the CAS login form is part of the DN, e.g.
# {@code
# uid=%s,ou=Users,dc=example,dc=org}.</li>
# 
# </ul>
# Available values
# are as follows:
# <ul><li>{@code AD}: Active Directory.</li><li>{@code
# AUTHENTICATED}: Authenticated Search.</li><li>{@code DIRECT}: Direct
# Bind.</li><li>{@code ANONYMOUS}: Anonymous Search.</li></ul>
#
# cas.authn.ldap[].type: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.ldap[].use-start-tls: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Period at which pool should be validated.
#
# cas.authn.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthenticationProperties
#
# Period at which validation operations may time out.
#
# cas.authn.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.authn.ldap[].validator.type: search

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationCoreProperties
#
# Attribute returned in the final CAS validation payload that indicates
# the authentication context class satisfied in the event of a
# multifactor authentication attempt.
#
# cas.authn.mfa.core.authentication-context-attribute: authnContextClass

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationCoreProperties
#
# Content-type that is expected to be specified by non-web clients such
# as curl, etc in the event that the provider supports variations of
# non-browser based MFA. The value is treated as a regular expression.
#
# cas.authn.mfa.core.content-type: application/cas

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationCoreProperties
#
# Defines the global failure mode for the entire deployment. This is
# meant to be used a shortcut to define the policy globally rather than
# per application. Applications registered with CAS can still define a
# failure mode and override the global.
# Available values are as
# follows:
# <ul><li>{@code OPEN}: Disallow MFA, proceed with
# authentication but don't communicate MFA to the RP.</li><li>{@code
# CLOSED}: Disallow MFA, block with authentication.</li><li>{@code
# PHANTOM}: Disallow MFA, proceed with authentication and communicate
# MFA to the RP.</li><li>{@code NONE}: Do not check for failure at
# all.</li><li>{@code UNDEFINED}: The default one indicating that no
# failure mode is set at all.</li></ul>
#
# cas.authn.mfa.core.global-failure-mode: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because provider-selection-enabled setting is moved into the cas.authn.mfa.core.provider-selection namespace.
# Replace with: provider-selection-enabled setting is moved into the cas.authn.mfa.core.provider-selection namespace.
#
# 
#
# cas.authn.mfa.core.provider-selection-enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# A regular expression pattern that indicates the set of allowed IP
# addresses, when {@link #isPinToSession()} is configured. In the event
# that there is a mismatch between the cookie IP address and the current
# request-provided IP address (i.e. network switches, VPN, etc), the
# cookie can still be considered valid if the new IP address matches the
# pattern specified here.
#
# cas.authn.mfa.core.provider-selection.cookie.allowed-ip-addresses-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.authn.mfa.core.provider-selection.cookie.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.mfa.core.provider-selection.cookie.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.mfa.core.provider-selection.cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.mfa.core.provider-selection.cookie.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.mfa.core.provider-selection.cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.mfa.core.provider-selection.cookie.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.mfa.core.provider-selection.cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.mfa.core.provider-selection.cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.authn.mfa.core.provider-selection.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# Whether MFA selection should be remembered with cookies.
#
# cas.authn.mfa.core.provider-selection.cookie.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# When set to {@code true} and assuming {@link #isPinToSession()} is
# also {@code true}, client sessions (using the client IP address) are
# geo-located using a geolocation service when/if configured. The
# resulting session is either pinned to the client geolocation, or the
# default client address.
#
# cas.authn.mfa.core.provider-selection.cookie.geo-locate-client-session: false

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.authn.mfa.core.provider-selection.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.authn.mfa.core.provider-selection.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.mfa.core.provider-selection.cookie.name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.authn.mfa.core.provider-selection.cookie.path: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# When generating cookie values, determine whether the value should be
# compounded and signed with the properties of the current session, such
# as IP address, user-agent, etc.
#
# cas.authn.mfa.core.provider-selection.cookie.pin-to-session: true

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.mfa.core.provider-selection.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.authn.mfa.core.provider-selection.cookie.secure: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderSelectionProperties
#
# In the event that multiple multifactor authentication providers are
# determined for a multifactor authentication transaction, this setting
# will allow one to interactively choose a provider out of the list of
# available providers. A trigger may be designed to support more than
# one provider, and rather than letting CAS auto-determine the selected
# provider via scripts or ranking strategies, this method puts the
# choice back onto the user to decide which provider makes the most
# sense at any given time.
#
# cas.authn.mfa.core.provider-selection.provider-selection-enabled: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.core.provider-selection.provider-selector-groovy-script.location: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProperties
#
# Activate and configure a multifactor authentication provider via Duo
# Security.
#
# cas.authn.mfa.duo: 

# Type: boolean
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# When set to {@code true}, CAS will contact Duo Security
# to check for
# user's account status and to evaluate whether
# user qualifies for
# multifactor authentication from Duo's perspective.
# When disabled,
# user account status is set to authenticate with Duo
# and the API call
# will never be made.
# Account status checking requires a particular
# Duo Security integration type
# that allows CAS to make API calls to
# Duo Security with enough permissions
# to get back user account
# details. Wrong integration types will result in
# API errors and
# warnings in the logs, forcing CAS to ignore the user account status
#
# and move on with the authentication attempt and flow.
#
# cas.authn.mfa.duo[].account-status-enabled: true

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.duo[].bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values.
# Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.duo[].bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution.
# Specifically, skip multifactor if the a
# particular authentication handler noted by its name
# successfully is
# able to authenticate credentials in the primary factor.
# Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.duo[].bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution.
# Specifically, skip multifactor if the
# authentication method attribute collected as part of
# authentication
# metadata matches a certain value.
# Multiple values may be separated
# by a comma.
#
# cas.authn.mfa.duo[].bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials.
# Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.duo[].bypass.credential-class-type: 

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Handle bypass using a Groovy resource.
# The location of the resource.
# Resources can be URLs, or
# files found either on the classpath or
# outside somewhere
# in the file system.
# <p>
# In the event the
# configured resource is a Groovy script, specially if the script set to
# reload on changes,
# you may need to adjust the total number of {@code
# inotify} instances.
# On Linux, you may need to add the following line
# to {@code /etc/sysctl.conf}:
# {@code fs.inotify.max_user_instances =
# 256}.
# <p>
# You can check the current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.duo[].bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names.
# Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.duo[].bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host
# matches the value defined here. The value may be specified
# as a regular expression.
#
# cas.authn.mfa.duo[].bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.duo[].bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.duo[].bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.RestEndpointProperties
#
# If REST endpoint is protected via basic authentication,
# specify the
# password for authentication.
#
# cas.authn.mfa.duo[].bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.RestEndpointProperties
#
# If REST endpoint is protected via basic authentication,
# specify the
# username for authentication.
#
# cas.authn.mfa.duo[].bypass.rest.basic-auth-username: 

# Type: java.util.Map<String,String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.RestEndpointProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call.
# Will overwrite any header that CAS is pre-defined to
#
# send and include in the request. Key in the map should be the header
# name
# and the value in the map should be the header value.
#
# cas.authn.mfa.duo[].bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.RestEndpointProperties
#
# HTTP method to use when contacting the rest endpoint.
# Examples
# include {@code GET, POST}, etc.
#
# cas.authn.mfa.duo[].bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.RestEndpointProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.duo[].bypass.rest.url: 

# Type: boolean
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# When set to true, authentication metadata and profile attributes (if
# any) are collected
# from Duo Security and collected as CAS
# attributes.
#
# cas.authn.mfa.duo[].collect-duo-attributes: true

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# Duo admin integration key.
#
# cas.authn.mfa.duo[].duo-admin-integration-key: 

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# Duo admin secret key.
#
# cas.authn.mfa.duo[].duo-admin-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# Duo API host and url.
#
# cas.authn.mfa.duo[].duo-api-host: 

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# Duo integration key.
#
# cas.authn.mfa.duo[].duo-integration-key: 

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# Duo secret key.
#
# cas.authn.mfa.duo[].duo-secret-key: 

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties.MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default
# supports fail-closed mode, which means that if you
# attempt to
# exercise a particular provider available to CAS and the
# provider cannot be reached, authentication
# will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication
# proceeds without exercising the provider
# functionality, if that provider cannot respond.
# Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location
# will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.duo[].failure-mode: 

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# The identifier for the multifactor provider.
# In most cases, this
# need not be configured explicitly, unless
# multiple instances of the
# same provider type are configured in CAS.
#
# cas.authn.mfa.duo[].id: 

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# The name of the authentication handler used to verify credentials in
# MFA.
# Remember that if you have more than one authentication handler
# of the same type,
# the names must be defined uniquely for each
# authentication scheme. Failing to do so
# may force CAS to not
# register authentication handlers with a duplicate name.
#
# cas.authn.mfa.duo[].name: 

# Type: int
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.duo[].order: 

# Type: boolean
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# When enabled, this option allows CAS to use Duo Security
# as a
# CAS-owned passwordless authentication provider and account store. Note
# that
# this has nothing to do with Duo Security's
# "Passwordless/PassKey" capabilities,
# or PassKey/WebAuthn
# capabilities of CAS that act as a separate multifactor authentication
# provider.
# This solely controls the passwordless authentication
# feature that is provided by CAS directly.
# <p>
# When enabled, CAS
# will contact Duo Security to look up eligible passwordless accounts.
#
# If the account is registered with Duo Security, CAS will switch to
# a
# passwordless flow and will use the user's registered device to send a
# push notification.
# User's registered with Duo Security must have a
# valid email address and a mobile/phone device.
# <p>
# This
# functionality requires that CAS is already equipped with Passwordless
# authentication.
#
# cas.authn.mfa.duo[].passwordless-authentication-enabled: 

# Type: int
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required.
# Consider for a moment that CAS already
# has established an SSO session with/without a provider and has
#
# reached a level of authentication. Another incoming request attempts
# to exercise that SSO
# session with a different and often competing
# authentication requirement that may differ from the
# authentication
# level CAS has already established. Concretely, examples may be:
#
# <ul>
# <li>CAS has achieved an SSO session, but a separate request now
# requires step-up authentication with DuoSecurity.</li>
# <li>CAS has
# achieved an SSO session with an authentication level satisfied by
# DuoSecurity,
# but a separate request now requires step-up
# authentication with YubiKey. </li>
# </ul>
# In certain scenarios, CAS
# will attempt to rank authentication levels and compare them with each
# other.
# If CAS already has achieved a level that is higher than what
# the incoming request requires,
# no step-up authentication will be
# performed. If the opposite is true, CAS will route the
# authentication
# flow to the required authentication level and upon
# success, will adjust the SSO session with the
# new higher
# authentication level now satisfied.
# Ranking of authentication
# methods is done per provider via specific properties for each.
# Note
# that the higher the rank value is, the higher on the security scale it
# remains.
# A provider that ranks higher with a larger weight value
# trumps and override others with a lower value.
#
# cas.authn.mfa.duo[].rank: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.mfa.duo[].registration.crypto.alg: A256CBC-HS512

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.mfa.duo[].registration.crypto.enabled: true

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto encryption operations are enabled.
#
# cas.authn.mfa.duo[].registration.crypto.encryption-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.mfa.duo[].registration.crypto.encryption.key: 

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.mfa.duo[].registration.crypto.encryption.key-size: 512

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto signing operations are enabled.
#
# cas.authn.mfa.duo[].registration.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.mfa.duo[].registration.crypto.signing.key: 

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.mfa.duo[].registration.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Control the cipher sequence of operations.
# The accepted values
# are:
# <ul>
#     <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value
# first, and then sign.</li>
#     <li>{@code SIGN_AND_ENCRYPT}: Sign
# the value first, and then encrypt.</li>
# </ul>
#
# cas.authn.mfa.duo[].registration.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationRegistrationProperties
#
# Link to a registration app, typically developed in-house
# in order to
# allow new users to sign-up for duo functionality.
# If the user
# account status requires enrollment and this link
# is specified, CAS
# will redirect the authentication flow
# to this registration app.
# Otherwise, the default duo mechanism
# for new-user registrations
# shall take over.
# Upon redirecting to the registration app, CAS would
# also build
# a {@code principal} parameter into the registration URL,
# typically
# in form of a JSON web token that conveys the user's
# identity. This JWT
# can be signed and/or encrypted using settings
# defined via the {@link #getCrypto()}
# configuration block here.
#
# cas.authn.mfa.duo[].registration.registration-url: 

# Type: boolean
# Module: cas-server-support-duo
# Owner: org.apereo.cas.configuration.model.support.mfa.duo.DuoSecurityMultifactorAuthenticationProperties
#
# Indicates whether this provider should support trusted devices.
#
# cas.authn.mfa.duo[].trusted-device-enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.gauth.bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values. Multiple values may be separated by a
# comma.
#
# cas.authn.mfa.gauth.bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution. Specifically, skip multifactor if the a
# particular authentication handler noted by its name successfully is
# able to authenticate credentials in the primary factor. Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.gauth.bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution. Specifically, skip multifactor if the
# authentication method attribute collected as part of authentication
# metadata matches a certain value. Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.gauth.bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials. Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.gauth.bypass.credential-class-type: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GroovyMultifactorAuthenticationProviderBypassProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.gauth.bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names. Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.gauth.bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host matches the value defined here. The value may be specified as
# a regular expression.
#
# cas.authn.mfa.gauth.bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.gauth.bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.gauth.bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.gauth.bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.gauth.bypass.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.gauth.bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.gauth.bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.gauth.bypass.rest.url: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.mfa.gauth.cleaner.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.mfa.gauth.cleaner.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.mfa.gauth.cleaner.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.mfa.gauth.cleaner.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.mfa.gauth.cleaner.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.mfa.gauth.cleaner.schedule.start-delay: PT15S

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the core namespace.
# Replace with: Setting is moved into the core namespace.
#
# 
#
# cas.authn.mfa.gauth.code-digits: 

# Type: java.lang.Integer
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.CoreGoogleAuthenticatorMultifactorProperties
#
# Length of the generated code.
#
# cas.authn.mfa.gauth.core.code-digits: 6

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.CoreGoogleAuthenticatorMultifactorProperties
#
# Issuer used in the barcode when dealing with device registration
# events. Used in the registration URL to identify CAS.
#
# cas.authn.mfa.gauth.core.issuer: CASIssuer

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.CoreGoogleAuthenticatorMultifactorProperties
#
# Label used in the barcode when dealing with device registration
# events. Used in the registration URL to identify CAS.
#
# cas.authn.mfa.gauth.core.label: CASLabel

# Type: java.lang.Boolean
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.CoreGoogleAuthenticatorMultifactorProperties
#
# When enabled, allows the user/system to accept multiple accounts and
# device registrations per user, allowing one to switch between or
# register new devices/accounts automatically.
#
# cas.authn.mfa.gauth.core.multiple-device-registration-enabled: false

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.authn.mfa.gauth.core.scratch-codes.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.authn.mfa.gauth.core.scratch-codes.encryption.key-size: 16

# Type: java.lang.Long
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.CoreGoogleAuthenticatorMultifactorProperties
#
# The expiration time of the generated code in seconds.
#
# cas.authn.mfa.gauth.core.time-step-size: 30

# Type: java.lang.Boolean
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.CoreGoogleAuthenticatorMultifactorProperties
#
# Indicates whether this provider should support trusted devices.
#
# cas.authn.mfa.gauth.core.trusted-device-enabled: false

# Type: java.lang.Integer
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.CoreGoogleAuthenticatorMultifactorProperties
#
# Since TOTP passwords are time-based, it is essential that the clock of
# both the server and the client are synchronised within the tolerance
# defined here as the window size.
#
# cas.authn.mfa.gauth.core.window-size: 3

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.mfa.gauth.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.mfa.gauth.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.mfa.gauth.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.mfa.gauth.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.mfa.gauth.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.mfa.gauth.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.mfa.gauth.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.authn.mfa.gauth.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Client execution timeout.
#
# cas.authn.mfa.gauth.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.gauth.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.mfa.gauth.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.mfa.gauth.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.authn.mfa.gauth.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.authn.mfa.gauth.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.authn.mfa.gauth.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.authn.mfa.gauth.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.authn.mfa.gauth.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.authn.mfa.gauth.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.authn.mfa.gauth.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.authn.mfa.gauth.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.authn.mfa.gauth.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# AWS custom endpoint.
#
# cas.authn.mfa.gauth.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Local address.
#
# cas.authn.mfa.gauth.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.authn.mfa.gauth.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Maximum connections setting.
#
# cas.authn.mfa.gauth.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.authn.mfa.gauth.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Profile name to use.
#
# cas.authn.mfa.gauth.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Profile path.
#
# cas.authn.mfa.gauth.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.mfa.gauth.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.mfa.gauth.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.mfa.gauth.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Read capacity.
#
# cas.authn.mfa.gauth.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# AWS region used.
#
# cas.authn.mfa.gauth.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.authn.mfa.gauth.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Socket timeout.
#
# cas.authn.mfa.gauth.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# The table name used and created by CAS to hold accounts in DynamoDb.
#
# cas.authn.mfa.gauth.dynamo-db.table-name: DynamoDbGoogleAuthenticatorRepository

# Type: java.lang.Integer
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Time offset.
#
# cas.authn.mfa.gauth.dynamo-db.time-offset: 0

# Type: java.lang.String
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# The table name used and created by CAS to hold tokens in DynamoDb.
#
# cas.authn.mfa.gauth.dynamo-db.token-table-name: DynamoDbGoogleAuthenticatorTokenRepository

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.mfa.gauth.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-gauth-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.DynamoDbGoogleAuthenticatorMultifactorProperties
#
# Write capacity.
#
# cas.authn.mfa.gauth.dynamo-db.write-capacity: 10

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.GoogleAuthenticatorMultifactorProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default supports fail-closed mode, which means that if you
# attempt to exercise a particular provider available to CAS and the
# provider cannot be reached, authentication will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication proceeds without exercising the provider
# functionality, if that provider cannot respond. Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.gauth.failure-mode: CLOSED

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.GoogleAuthenticatorMultifactorProperties
#
# The identifier for the multifactor provider. In most cases, this need
# not be configured explicitly, unless multiple instances of the same
# provider type are configured in CAS.
#
# cas.authn.mfa.gauth.id: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the core namespace.
# Replace with: Setting is moved into the core namespace.
#
# 
#
# cas.authn.mfa.gauth.issuer: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.mfa.gauth.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.mfa.gauth.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.mfa.gauth.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.mfa.gauth.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.mfa.gauth.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.mfa.gauth.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.mfa.gauth.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.mfa.gauth.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.mfa.gauth.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.mfa.gauth.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.mfa.gauth.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.mfa.gauth.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.mfa.gauth.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.mfa.gauth.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.mfa.gauth.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.gauth.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.mfa.gauth.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# The database connection password.
#
# cas.authn.mfa.gauth.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.mfa.gauth.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.mfa.gauth.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.mfa.gauth.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.mfa.gauth.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.mfa.gauth.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.mfa.gauth.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.mfa.gauth.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.mfa.gauth.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.mfa.gauth.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.gauth.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.mfa.gauth.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.mfa.gauth.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# The database connection URL.
#
# cas.authn.mfa.gauth.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-gauth-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JpaGoogleAuthenticatorMultifactorProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.mfa.gauth.jpa.user: sa

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.JsonGoogleAuthenticatorMultifactorProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.gauth.json.location: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the core namespace.
# Replace with: Setting is moved into the core namespace.
#
# 
#
# cas.authn.mfa.gauth.label: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Name of LDAP attribute that holds GAuth account/credential as JSON.
#
# cas.authn.mfa.gauth.ldap.account-attribute-name: casGAuthRecord

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.mfa.gauth.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.mfa.gauth.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.mfa.gauth.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.mfa.gauth.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.mfa.gauth.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.mfa.gauth.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.mfa.gauth.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.mfa.gauth.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.mfa.gauth.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.mfa.gauth.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.mfa.gauth.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Set if search referrals should be followed.
#
# cas.authn.mfa.gauth.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.mfa.gauth.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.mfa.gauth.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.mfa.gauth.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Keystore password.
#
# cas.authn.mfa.gauth.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.mfa.gauth.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.mfa.gauth.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.mfa.gauth.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.mfa.gauth.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Name of the LDAP handler.
#
# cas.authn.mfa.gauth.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.mfa.gauth.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.mfa.gauth.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.mfa.gauth.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Duration of time to wait for responses.
#
# cas.authn.mfa.gauth.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# SASL authorization id.
#
# cas.authn.mfa.gauth.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The SASL mechanism.
#
# cas.authn.mfa.gauth.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.mfa.gauth.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# SASL quality of protected.
#
# cas.authn.mfa.gauth.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The SASL realm.
#
# cas.authn.mfa.gauth.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# SASL security strength.
#
# cas.authn.mfa.gauth.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Search handlers.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.mfa.gauth.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.mfa.gauth.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.mfa.gauth.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.mfa.gauth.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.mfa.gauth.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.mfa.gauth.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Password needed to open the truststore.
#
# cas.authn.mfa.gauth.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.mfa.gauth.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.mfa.gauth.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.mfa.gauth.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Period at which pool should be validated.
#
# cas.authn.mfa.gauth.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.mfa.gauth.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-gauth-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.LdapGoogleAuthenticatorMultifactorProperties
#
# Period at which validation operations may time out.
#
# cas.authn.mfa.gauth.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.mfa.gauth.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.mfa.gauth.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.mfa.gauth.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.mfa.gauth.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.mfa.gauth.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.mfa.gauth.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.mfa.gauth.ldap.validator.type: search

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Name of the database to use for authentication.
#
# cas.authn.mfa.gauth.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.mfa.gauth.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.mfa.gauth.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# MongoDb database instance name.
#
# cas.authn.mfa.gauth.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.mfa.gauth.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.mfa.gauth.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# MongoDb database password for authentication.
#
# cas.authn.mfa.gauth.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.mfa.gauth.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.mfa.gauth.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.mfa.gauth.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.mfa.gauth.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.mfa.gauth.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.mfa.gauth.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# MongoDb database port.
#
# cas.authn.mfa.gauth.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.mfa.gauth.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.mfa.gauth.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.mfa.gauth.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.mfa.gauth.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.mfa.gauth.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Whether connections require SSL.
#
# cas.authn.mfa.gauth.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# MongoDb database connection timeout.
#
# cas.authn.mfa.gauth.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Collection name where tokens are kept to prevent replay attacks.
#
# cas.authn.mfa.gauth.mongo.token-collection: 

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# MongoDb database user for authentication.
#
# cas.authn.mfa.gauth.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-gauth-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.MongoDbGoogleAuthenticatorMultifactorProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.mfa.gauth.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.GoogleAuthenticatorMultifactorProperties
#
# The name of the authentication handler used to verify credentials in
# MFA. Remember that if you have more than one authentication handler of
# the same type, the names must be defined uniquely for each
# authentication scheme. Failing to do so may force CAS to not register
# authentication handlers with a duplicate name.
#
# cas.authn.mfa.gauth.name: 

# Type: java.lang.Integer
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.GoogleAuthenticatorMultifactorProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.gauth.order: 

# Type: java.lang.Integer
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.GoogleAuthenticatorMultifactorProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required. Consider for a moment that CAS already has
# established an SSO session with/without a provider and has reached a
# level of authentication. Another incoming request attempts to exercise
# that SSO session with a different and often competing authentication
# requirement that may differ from the authentication level CAS has
# already established. Concretely, examples may be: <ul> <li>CAS has
# achieved an SSO session, but a separate request now requires step-up
# authentication with DuoSecurity.</li> <li>CAS has achieved an SSO
# session with an authentication level satisfied by DuoSecurity, but a
# separate request now requires step-up authentication with YubiKey.
# </li> </ul> In certain scenarios, CAS will attempt to rank
# authentication levels and compare them with each other. If CAS already
# has achieved a level that is higher than what the incoming request
# requires, no step-up authentication will be performed. If the opposite
# is true, CAS will route the authentication flow to the required
# authentication level and upon success, will adjust the SSO session
# with the new higher authentication level now satisfied. Ranking of
# authentication methods is done per provider via specific properties
# for each. Note that the higher the rank value is, the higher on the
# security scale it remains. A provider that ranks higher with a larger
# weight value trumps and override others with a lower value.
#
# cas.authn.mfa.gauth.rank: 0

# Type: java.io.File
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.gauth.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.authn.mfa.gauth.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.authn.mfa.gauth.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.authn.mfa.gauth.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.authn.mfa.gauth.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.authn.mfa.gauth.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.authn.mfa.gauth.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.authn.mfa.gauth.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.authn.mfa.gauth.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.authn.mfa.gauth.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.authn.mfa.gauth.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.authn.mfa.gauth.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.authn.mfa.gauth.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.authn.mfa.gauth.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.gauth.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Database index used by the connection factory.
#
# cas.authn.mfa.gauth.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.authn.mfa.gauth.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Redis server host.
#
# cas.authn.mfa.gauth.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.gauth.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.authn.mfa.gauth.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.authn.mfa.gauth.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Login password of the redis server.
#
# cas.authn.mfa.gauth.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.authn.mfa.gauth.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.authn.mfa.gauth.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.authn.mfa.gauth.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.authn.mfa.gauth.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.authn.mfa.gauth.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.authn.mfa.gauth.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.authn.mfa.gauth.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.authn.mfa.gauth.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.authn.mfa.gauth.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.authn.mfa.gauth.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.authn.mfa.gauth.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.authn.mfa.gauth.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.authn.mfa.gauth.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.authn.mfa.gauth.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Redis server port.
#
# cas.authn.mfa.gauth.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Redis protocol version.
#
# cas.authn.mfa.gauth.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.authn.mfa.gauth.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.authn.mfa.gauth.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.authn.mfa.gauth.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.authn.mfa.gauth.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.authn.mfa.gauth.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.authn.mfa.gauth.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.authn.mfa.gauth.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Command timeout.
#
# cas.authn.mfa.gauth.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Database URI.
#
# cas.authn.mfa.gauth.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.authn.mfa.gauth.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Login username of the redis server.
#
# cas.authn.mfa.gauth.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-gauth-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RedisGoogleAuthenticatorMultifactorProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.authn.mfa.gauth.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RestfulGoogleAuthenticatorMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.gauth.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RestfulGoogleAuthenticatorMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.gauth.rest.basic-auth-username: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property renamed to be consistent with other RESt-based configuration.
# Replace with: Property renamed to be consistent with other RESt-based configuration.
#
# 
#
# cas.authn.mfa.gauth.rest.endpoint-url: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RestfulGoogleAuthenticatorMultifactorProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.gauth.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RestfulGoogleAuthenticatorMultifactorProperties
#
# Endpoint url of the REST resource used for tokens that are kept to
# prevent replay attacks.
#
# cas.authn.mfa.gauth.rest.token-url: 

# Type: java.lang.String
# Module: cas-server-support-gauth
# Owner: org.apereo.cas.configuration.model.support.mfa.gauth.RestfulGoogleAuthenticatorMultifactorProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.gauth.rest.url: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the core namespace.
# Replace with: Setting is moved into the core namespace.
#
# 
#
# cas.authn.mfa.gauth.time-step-size: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the core namespace.
# Replace with: Setting is moved into the core namespace.
#
# 
#
# cas.authn.mfa.gauth.trusted-device-enabled: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because global-authentication-attribute-name-triggers setting is moved into the cas.authn.mfa.triggers.authentication namespace.
# Replace with: global-authentication-attribute-name-triggers setting is moved into the cas.authn.mfa.triggers.authentication namespace.
#
# 
#
# cas.authn.mfa.global-authentication-attribute-name-triggers: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because global-authentication-attribute-value-regex setting is moved into the cas.authn.mfa.triggers.authentication namespace.
# Replace with: global-authentication-attribute-value-regex setting is moved into the cas.authn.mfa.triggers.authentication namespace.
#
# 
#
# cas.authn.mfa.global-authentication-attribute-value-regex: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because global-principal-attribute-name-triggers setting is moved into the cas.authn.mfa.triggers.principal namespace.
# Replace with: global-principal-attribute-name-triggers setting is moved into the cas.authn.mfa.triggers.principal namespace.
#
# 
#
# cas.authn.mfa.global-principal-attribute-name-triggers: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because global-principal-attribute-value-regex setting is moved into the cas.authn.mfa.triggers.principal namespace.
# Replace with: global-principal-attribute-value-regex setting is moved into the cas.authn.mfa.triggers.principal namespace.
#
# 
#
# cas.authn.mfa.global-principal-attribute-value-regex: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because global-provider-id setting is moved into the cas.authn.mfa.triggers.global namespace.
# Replace with: global-provider-id setting is moved into the cas.authn.mfa.triggers.global namespace.
#
# 
#
# cas.authn.mfa.global-provider-id: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.groovy-script.location: 

# Type: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties$BrowserAuthenticatorTypes
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The browser authenticator to use (or none).
# Available values are as
# follows:
# <ul><li>{@code NONE}: No browser
# authentication.</li><li>{@code VIRTUAL_AUTHENTICATOR}: Virtual
# Authenticator browser authentication.</li><li>{@code M_ACCESS_WEB}:
# mAccessWeb browser authentication.</li></ul>
#
# cas.authn.mfa.inwebo.browser-authenticator: VIRTUAL_AUTHENTICATOR

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.inwebo.bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values. Multiple values may be separated by a
# comma.
#
# cas.authn.mfa.inwebo.bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution. Specifically, skip multifactor if the a
# particular authentication handler noted by its name successfully is
# able to authenticate credentials in the primary factor. Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.inwebo.bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution. Specifically, skip multifactor if the
# authentication method attribute collected as part of authentication
# metadata matches a certain value. Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.inwebo.bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials. Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.inwebo.bypass.credential-class-type: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GroovyMultifactorAuthenticationProviderBypassProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.inwebo.bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names. Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.inwebo.bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host matches the value defined here. The value may be specified as
# a regular expression.
#
# cas.authn.mfa.inwebo.bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.inwebo.bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.inwebo.bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.inwebo.bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.inwebo.bypass.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.inwebo.bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.inwebo.bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.inwebo.bypass.rest.url: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.inwebo.client-certificate.certificate.location: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.ClientCertificateProperties
#
# The passphrase of the client certificate.
#
# cas.authn.mfa.inwebo.client-certificate.passphrase: 

# Type: java.lang.String
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# Console admin API url.
#
# cas.authn.mfa.inwebo.console-admin-url: https://api.myinwebo.com/v2/services/ConsoleAdmin

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default supports fail-closed mode, which means that if you
# attempt to exercise a particular provider available to CAS and the
# provider cannot be reached, authentication will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication proceeds without exercising the provider
# functionality, if that provider cannot respond. Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.inwebo.failure-mode: CLOSED

# Type: java.lang.String
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The identifier for the multifactor provider. In most cases, this need
# not be configured explicitly, unless multiple instances of the same
# provider type are configured in CAS.
#
# cas.authn.mfa.inwebo.id: 

# Type: java.lang.String
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The name of the authentication handler used to verify credentials in
# MFA. Remember that if you have more than one authentication handler of
# the same type, the names must be defined uniquely for each
# authentication scheme. Failing to do so may force CAS to not register
# authentication handlers with a duplicate name.
#
# cas.authn.mfa.inwebo.name: 

# Type: java.lang.Integer
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.inwebo.order: 

# Type: java.lang.Boolean
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# Whether the push authentication should happen directly (without
# proposing the browser authentication if defined).
#
# cas.authn.mfa.inwebo.push-auto: true

# Type: java.lang.Boolean
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# Whether the push notification (mobile/desktop) is enabled.
#
# cas.authn.mfa.inwebo.push-enabled: true

# Type: java.lang.Integer
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required. Consider for a moment that CAS already has
# established an SSO session with/without a provider and has reached a
# level of authentication. Another incoming request attempts to exercise
# that SSO session with a different and often competing authentication
# requirement that may differ from the authentication level CAS has
# already established. Concretely, examples may be: <ul> <li>CAS has
# achieved an SSO session, but a separate request now requires step-up
# authentication with DuoSecurity.</li> <li>CAS has achieved an SSO
# session with an authentication level satisfied by DuoSecurity, but a
# separate request now requires step-up authentication with YubiKey.
# </li> </ul> In certain scenarios, CAS will attempt to rank
# authentication levels and compare them with each other. If CAS already
# has achieved a level that is higher than what the incoming request
# requires, no step-up authentication will be performed. If the opposite
# is true, CAS will route the authentication flow to the required
# authentication level and upon success, will adjust the SSO session
# with the new higher authentication level now satisfied. Ranking of
# authentication methods is done per provider via specific properties
# for each. Note that the higher the rank value is, the higher on the
# security scale it remains. A provider that ranks higher with a larger
# weight value trumps and override others with a lower value.
#
# cas.authn.mfa.inwebo.rank: 0

# Type: java.lang.String
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The service API url.
#
# cas.authn.mfa.inwebo.service-api-url: https://api.myinwebo.com/FS?

# Type: java.lang.Long
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The Inwebo service id.
#
# cas.authn.mfa.inwebo.service-id: 

# Type: java.lang.String
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The alias of the secured site.
#
# cas.authn.mfa.inwebo.site-alias: 

# Type: java.lang.String
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# The description of the secured site.
#
# cas.authn.mfa.inwebo.site-description: my secured site

# Type: java.lang.Boolean
# Module: cas-server-support-inwebo-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.InweboMultifactorAuthenticationProperties
#
# Indicates whether this provider should support trusted devices.
#
# cas.authn.mfa.inwebo.trusted-device-enabled: false

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because provider-selection-enabled setting is moved into the cas.authn.mfa.core namespace.
# Replace with: provider-selection-enabled setting is moved into the cas.authn.mfa.core namespace.
#
# 
#
# cas.authn.mfa.provider-selection-enabled: 

# Type: java.lang.Long
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# Total number of allowed authentication attempts with the radius mfa
# server before the authentication event is considered cancelled. A
# negative/zero value indicates that no limit is enforced.
#
# cas.authn.mfa.radius.allowed-authentication-attempts: -1

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.radius.bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values. Multiple values may be separated by a
# comma.
#
# cas.authn.mfa.radius.bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution. Specifically, skip multifactor if the a
# particular authentication handler noted by its name successfully is
# able to authenticate credentials in the primary factor. Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.radius.bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution. Specifically, skip multifactor if the
# authentication method attribute collected as part of authentication
# metadata matches a certain value. Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.radius.bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials. Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.radius.bypass.credential-class-type: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GroovyMultifactorAuthenticationProviderBypassProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.radius.bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names. Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.radius.bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host matches the value defined here. The value may be specified as
# a regular expression.
#
# cas.authn.mfa.radius.bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.radius.bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.radius.bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.radius.bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.radius.bypass.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.radius.bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.radius.bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.radius.bypass.rest.url: 

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# The accounting port.
#
# cas.authn.mfa.radius.client.accounting-port: 1813

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# The authentication port.
#
# cas.authn.mfa.radius.client.authentication-port: 1812

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Server address to connect and establish a session.
#
# cas.authn.mfa.radius.client.inet-address: localhost

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Secret/password to use for the initial bind.
#
# cas.authn.mfa.radius.client.shared-secret: N0Sh@ar3d$ecReT

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Socket connection timeout in milliseconds.
#
# cas.authn.mfa.radius.client.socket-timeout: 0

# Type: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties$RadiusClientTransportTypes
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Transport type to use by this client to connect to the server.
#
# Available values are as follows:
# <ul><li>{@code UDP}: Default. UDP
# client transport type.</li><li>{@code RADSEC}: RadSec is a protocol
# which allows RADIUS servers to
# transfer data over TCP and TLS for
# increased security.</li></ul>
#
# cas.authn.mfa.radius.client.transport-type: UDP

# Type: java.lang.Boolean
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# In the event that radius authentication fails, fail over to the next
# server in the list.
#
# cas.authn.mfa.radius.failover-on-authentication-failure: false

# Type: java.lang.Boolean
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# In the event that radius authentication fails due to a catastrophic
# event, fail over to the next server in the list.
#
# cas.authn.mfa.radius.failover-on-exception: false

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default supports fail-closed mode, which means that if you
# attempt to exercise a particular provider available to CAS and the
# provider cannot be reached, authentication will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication proceeds without exercising the provider
# functionality, if that provider cannot respond. Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.radius.failure-mode: CLOSED

# Type: java.lang.String
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# The identifier for the multifactor provider. In most cases, this need
# not be configured explicitly, unless multiple instances of the same
# provider type are configured in CAS.
#
# cas.authn.mfa.radius.id: 

# Type: java.lang.String
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# The name of the authentication handler used to verify credentials in
# MFA. Remember that if you have more than one authentication handler of
# the same type, the names must be defined uniquely for each
# authentication scheme. Failing to do so may force CAS to not register
# authentication handlers with a duplicate name.
#
# cas.authn.mfa.radius.name: 

# Type: java.lang.Integer
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.radius.order: 

# Type: java.lang.Integer
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required. Consider for a moment that CAS already has
# established an SSO session with/without a provider and has reached a
# level of authentication. Another incoming request attempts to exercise
# that SSO session with a different and often competing authentication
# requirement that may differ from the authentication level CAS has
# already established. Concretely, examples may be: <ul> <li>CAS has
# achieved an SSO session, but a separate request now requires step-up
# authentication with DuoSecurity.</li> <li>CAS has achieved an SSO
# session with an authentication level satisfied by DuoSecurity, but a
# separate request now requires step-up authentication with YubiKey.
# </li> </ul> In certain scenarios, CAS will attempt to rank
# authentication levels and compare them with each other. If CAS already
# has achieved a level that is higher than what the incoming request
# requires, no step-up authentication will be performed. If the opposite
# is true, CAS will route the authentication flow to the required
# authentication level and upon success, will adjust the SSO session
# with the new higher authentication level now satisfied. Ranking of
# authentication methods is done per provider via specific properties
# for each. Note that the higher the rank value is, the higher on the
# security scale it remains. A provider that ranks higher with a larger
# weight value trumps and override others with a lower value.
#
# cas.authn.mfa.radius.rank: 0

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS identifier.
#
# cas.authn.mfa.radius.server.nas-identifier: 

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS IP address.
#
# cas.authn.mfa.radius.server.nas-ip-address: 

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS IPv6 address.
#
# cas.authn.mfa.radius.server.nas-ipv6-address: 

# Type: java.lang.Long
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS port.
#
# cas.authn.mfa.radius.server.nas-port: -1

# Type: java.lang.Long
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS port id.
#
# cas.authn.mfa.radius.server.nas-port-id: -1

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS port type.
#
# cas.authn.mfa.radius.server.nas-port-type: -1

# Type: java.lang.Long
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS real port.
#
# cas.authn.mfa.radius.server.nas-real-port: -1

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# Radius protocol to use when communicating with the server.
#
# cas.authn.mfa.radius.server.protocol: EAP_MSCHAPv2

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# Number of re-try attempts when dealing with connection and
# authentication failures.
#
# cas.authn.mfa.radius.server.retries: 3

# Type: java.lang.Boolean
# Module: cas-server-support-radius-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.RadiusMultifactorAuthenticationProperties
#
# Indicates whether this provider should support trusted devices.
#
# cas.authn.mfa.radius.trusted-device-enabled: false

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because url setting is moved into the cas.authn.mfa.triggers.rest namespace.
# Replace with: url setting is moved into the cas.authn.mfa.triggers.rest namespace.
#
# 
#
# cas.authn.mfa.rest.url: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties>
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationBucket4jProperties
#
# Describe the available bandwidth and the overall limitations. Multiple
# bandwidths allow for different policies per unit of measure. (i.e.
# allows 1000 tokens per 1 minute, but not often then 50 tokens per 1
# second).
#
# cas.authn.mfa.simple.bucket4j.bandwidth: 

# Type: long
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Number of tokens/requests that can be used within the time window.
#
# cas.authn.mfa.simple.bucket4j.bandwidth[].capacity: 120

# Type: java.lang.String
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Time window in which capacity can be allowed.
#
# cas.authn.mfa.simple.bucket4j.bandwidth[].duration: PT60S

# Type: long
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# By default initial size of bucket equals to capacity.
# But sometimes,
# you may want to have lesser initial size,
# for example for case of
# cold start in order to prevent denial of service.
#
# cas.authn.mfa.simple.bucket4j.bandwidth[].initial-tokens: 

# Type: long
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# The number of tokens that should be used to refill the bucket
# given
# the specified refill duration.
#
# cas.authn.mfa.simple.bucket4j.bandwidth[].refill-count: 10

# Type: java.lang.String
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Duration to use to refill the bucket.
#
# cas.authn.mfa.simple.bucket4j.bandwidth[].refill-duration: PT30S

# Type: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties.BandwidthRefillStrategies
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Describes how the bucket should be refilled.
# Specifies the speed of
# tokens regeneration.
# Available values are as follows:
#
# <ul><li>{@code GREEDY}: This type of refill regenerates tokens in a
# greedy manner; it tries to add the
# tokens to bucket as soon as
# possible. For example refill "10 tokens per 1 second"
# adds 1 token
# per each 100 millisecond; in other words refill will
# not wait 1
# second to regenerate 10 tokens.</li><li>{@code INTERVALLY}: This type
# of refill regenerates tokens in intervally manner. "Intervally"
# in
# opposite to "greedy" will wait until whole period would be
# elapsed
# before regenerating tokens.</li></ul>
#
# cas.authn.mfa.simple.bucket4j.bandwidth[].refill-strategy: GREEDY

# Type: java.lang.Boolean
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationBucket4jProperties
#
# Whether the request should block until capacity becomes available.
# Consume a token from the token bucket. If a token is not available
# this will block until the refill adds one to the bucket.
#
# cas.authn.mfa.simple.bucket4j.blocking: true

# Type: java.lang.Boolean
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationBucket4jProperties
#
# Decide whether bucket4j functionality should be enabled.
#
# cas.authn.mfa.simple.bucket4j.enabled: true

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.simple.bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values. Multiple values may be separated by a
# comma.
#
# cas.authn.mfa.simple.bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution. Specifically, skip multifactor if the a
# particular authentication handler noted by its name successfully is
# able to authenticate credentials in the primary factor. Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.simple.bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution. Specifically, skip multifactor if the
# authentication method attribute collected as part of authentication
# metadata matches a certain value. Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.simple.bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials. Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.simple.bypass.credential-class-type: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GroovyMultifactorAuthenticationProviderBypassProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.simple.bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names. Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.simple.bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host matches the value defined here. The value may be specified as
# a regular expression.
#
# cas.authn.mfa.simple.bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.simple.bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.simple.bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.simple.bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.simple.bypass.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.simple.bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.simple.bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.simple.bypass.rest.url: 

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default supports fail-closed mode, which means that if you
# attempt to exercise a particular provider available to CAS and the
# provider cannot be reached, authentication will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication proceeds without exercising the provider
# functionality, if that provider cannot respond. Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.simple.failure-mode: CLOSED

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationProperties
#
# The identifier for the multifactor provider. In most cases, this need
# not be configured explicitly, unless multiple instances of the same
# provider type are configured in CAS.
#
# cas.authn.mfa.simple.id: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.authn.mfa.simple.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.authn.mfa.simple.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.authn.mfa.simple.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.authn.mfa.simple.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.mfa.simple.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.mfa.simple.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.authn.mfa.simple.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.authn.mfa.simple.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.authn.mfa.simple.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.mfa.simple.mail.validate-addresses: false

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationProperties
#
# The name of the authentication handler used to verify credentials in
# MFA. Remember that if you have more than one authentication handler of
# the same type, the names must be defined uniquely for each
# authentication scheme. Failing to do so may force CAS to not register
# authentication handlers with a duplicate name.
#
# cas.authn.mfa.simple.name: 

# Type: java.lang.Integer
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.simple.order: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.phone.PhoneProperties
#
# Principal attribute name that indicates the destination phone number
# for this voice message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.authn.mfa.simple.phone.attribute-name: phone

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.phone.PhoneProperties
#
# The from address for the message.
#
# cas.authn.mfa.simple.phone.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.phone.PhoneProperties
#
# The body of the phone call message.
#
# cas.authn.mfa.simple.phone.text: 

# Type: java.lang.Integer
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required. Consider for a moment that CAS already has
# established an SSO session with/without a provider and has reached a
# level of authentication. Another incoming request attempts to exercise
# that SSO session with a different and often competing authentication
# requirement that may differ from the authentication level CAS has
# already established. Concretely, examples may be: <ul> <li>CAS has
# achieved an SSO session, but a separate request now requires step-up
# authentication with DuoSecurity.</li> <li>CAS has achieved an SSO
# session with an authentication level satisfied by DuoSecurity, but a
# separate request now requires step-up authentication with YubiKey.
# </li> </ul> In certain scenarios, CAS will attempt to rank
# authentication levels and compare them with each other. If CAS already
# has achieved a level that is higher than what the incoming request
# requires, no step-up authentication will be performed. If the opposite
# is true, CAS will route the authentication flow to the required
# authentication level and upon success, will adjust the SSO session
# with the new higher authentication level now satisfied. Ranking of
# authentication methods is done per provider via specific properties
# for each. Note that the higher the rank value is, the higher on the
# security scale it remains. A provider that ranks higher with a larger
# weight value trumps and override others with a lower value.
#
# cas.authn.mfa.simple.rank: 0

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# Principal attribute names that indicates the destination phone number
# for this SMS message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.authn.mfa.simple.sms.attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The from address for the message.
#
# cas.authn.mfa.simple.sms.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The body of the SMS message.
#
# cas.authn.mfa.simple.sms.text: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a token core namespace.
# Replace with: This setting is moved into a token core namespace.
#
# 
#
# cas.authn.mfa.simple.time-to-kill-in-seconds: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a token core namespace.
# Replace with: This setting is moved into a token core namespace.
#
# 
#
# cas.authn.mfa.simple.token-length: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.simple.token.bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values. Multiple values may be separated by a
# comma.
#
# cas.authn.mfa.simple.token.bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution. Specifically, skip multifactor if the a
# particular authentication handler noted by its name successfully is
# able to authenticate credentials in the primary factor. Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.simple.token.bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution. Specifically, skip multifactor if the
# authentication method attribute collected as part of authentication
# metadata matches a certain value. Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.simple.token.bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials. Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.simple.token.bypass.credential-class-type: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GroovyMultifactorAuthenticationProviderBypassProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.simple.token.bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names. Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.simple.token.bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host matches the value defined here. The value may be specified as
# a regular expression.
#
# cas.authn.mfa.simple.token.bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.simple.token.bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.simple.token.bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.simple.token.bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.simple.token.bypass.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.simple.token.bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.simple.token.bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.simple.token.bypass.rest.url: 

# Type: java.lang.Long
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CoreCasSimpleMultifactorAuthenticationTokenProperties
#
# Time in seconds that CAS tokens should be considered live in CAS
# server.
#
# cas.authn.mfa.simple.token.core.time-to-kill-in-seconds: 30

# Type: java.lang.Integer
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CoreCasSimpleMultifactorAuthenticationTokenProperties
#
# The length of the generated token.
#
# cas.authn.mfa.simple.token.core.token-length: 6

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationTokenProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default supports fail-closed mode, which means that if you
# attempt to exercise a particular provider available to CAS and the
# provider cannot be reached, authentication will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication proceeds without exercising the provider
# functionality, if that provider cannot respond. Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.simple.token.failure-mode: CLOSED

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationTokenProperties
#
# The identifier for the multifactor provider. In most cases, this need
# not be configured explicitly, unless multiple instances of the same
# provider type are configured in CAS.
#
# cas.authn.mfa.simple.token.id: 

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationTokenProperties
#
# The name of the authentication handler used to verify credentials in
# MFA. Remember that if you have more than one authentication handler of
# the same type, the names must be defined uniquely for each
# authentication scheme. Failing to do so may force CAS to not register
# authentication handlers with a duplicate name.
#
# cas.authn.mfa.simple.token.name: 

# Type: java.lang.Integer
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationTokenProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.simple.token.order: 

# Type: java.lang.Integer
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationTokenProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required. Consider for a moment that CAS already has
# established an SSO session with/without a provider and has reached a
# level of authentication. Another incoming request attempts to exercise
# that SSO session with a different and often competing authentication
# requirement that may differ from the authentication level CAS has
# already established. Concretely, examples may be: <ul> <li>CAS has
# achieved an SSO session, but a separate request now requires step-up
# authentication with DuoSecurity.</li> <li>CAS has achieved an SSO
# session with an authentication level satisfied by DuoSecurity, but a
# separate request now requires step-up authentication with YubiKey.
# </li> </ul> In certain scenarios, CAS will attempt to rank
# authentication levels and compare them with each other. If CAS already
# has achieved a level that is higher than what the incoming request
# requires, no step-up authentication will be performed. If the opposite
# is true, CAS will route the authentication flow to the required
# authentication level and upon success, will adjust the SSO session
# with the new higher authentication level now satisfied. Ranking of
# authentication methods is done per provider via specific properties
# for each. Note that the higher the rank value is, the higher on the
# security scale it remains. A provider that ranks higher with a larger
# weight value trumps and override others with a lower value.
#
# cas.authn.mfa.simple.token.rank: 0

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.RestfulCasSimpleMultifactorAuthenticationTokenProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.simple.token.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.RestfulCasSimpleMultifactorAuthenticationTokenProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.simple.token.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.RestfulCasSimpleMultifactorAuthenticationTokenProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.simple.token.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.RestfulCasSimpleMultifactorAuthenticationTokenProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.simple.token.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.RestfulCasSimpleMultifactorAuthenticationTokenProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.simple.token.rest.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-simple-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.simple.CasSimpleMultifactorAuthenticationProperties
#
# Indicates whether this provider should support trusted devices.
#
# cas.authn.mfa.simple.trusted-device-enabled: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.AuthenticationAttributeMultifactorAuthenticationProperties
#
# MFA can be triggered for all users/subjects whose authentication
# event/metadata has resolved a specific attribute that matches one of
# the below conditions: <ul> <li>Trigger MFA based on a authentication
# attribute(s) whose value(s) matches a regex pattern. Note that this
# behavior is only applicable if there is only a single MFA provider
# configured, since that would allow CAS to know what provider to next
# activate. </li> <li>Trigger MFA based on a authentication attribute(s)
# whose value(s) EXACTLY matches an MFA provider. This option is more
# relevant if you have more than one provider configured or if you have
# the flexibility of assigning provider ids to attributes as values.
# </li> </ul> Needless to say, the attributes need to have been resolved
# for the authentication event prior to this step. This trigger is
# generally useful when the underlying authentication engine signals CAS
# to perform additional validation of credentials. This signal may be
# captured by CAS as an attribute that is part of the authentication
# event metadata which can then trigger additional multifactor
# authentication events.
#
# cas.authn.mfa.triggers.authentication.global-authentication-attribute-name-triggers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.AuthenticationAttributeMultifactorAuthenticationProperties
#
# The regular expression that is cross matched against the
# authentication attribute to determine if the account is qualified for
# multifactor authentication.
#
# cas.authn.mfa.triggers.authentication.global-authentication-attribute-value-regex: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GlobalMultifactorAuthenticationProperties
#
# MFA can be triggered for all applications and users regardless of
# individual settings. This setting holds the value of an MFA provider
# that shall be activated for all requests, regardless. Multiple
# provider identifiers can be specified here via a comma-separated
# syntax which may force CAS to launch into a provider selection and
# resolution flow.
#
# cas.authn.mfa.triggers.global.global-provider-id: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GrouperMultifactorAuthenticationProperties
#
# MFA can be triggered by Grouper groups to which the authenticated
# principal is assigned. Groups are collected by CAS and then
# cross-checked against all available/configured MFA providers. The
# group’s comparing factor MUST be defined in CAS to activate this
# behavior and it can be based on the group’s name, display name, etc
# where a successful match against a provider id shall activate the
# chosen MFA provider.
#
# cas.authn.mfa.triggers.grouper.grouper-group-field: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationHttpTriggerProperties
#
# MFA can be triggered for a specific authentication request, provided
# the initial request to the CAS /login endpoint contains a request
# header that indicates the required MFA authentication flow. The header
# name is configurable, but its value must match the authentication
# provider id of an available MFA provider.
#
# cas.authn.mfa.triggers.http.request-header: authn_method

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationHttpTriggerProperties
#
# MFA can be triggered for a specific authentication request, provided
# the initial request to the CAS /login endpoint contains a parameter
# that indicates the required MFA authentication flow. The parameter
# name is configurable, but its value must match the authentication
# provider id of an available MFA provider.
#
# cas.authn.mfa.triggers.http.request-parameter: authn_method

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationHttpTriggerProperties
#
# MFA can be triggered for a specific authentication request, provided
# the request contains a session/request attribute that indicates the
# required MFA authentication flow. The attribute name is configurable,
# but its value must match the authentication provider id of an
# available MFA provider.
#
# cas.authn.mfa.triggers.http.session-attribute: authn_method

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.PrincipalAttributeMultifactorAuthenticationProperties
#
# Force CAS to deny and block the authentication attempt altogether if
# attribute name/value configuration cannot produce a successful match
# to trigger multifactor authentication.
#
# cas.authn.mfa.triggers.principal.deny-if-unmatched: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.PrincipalAttributeMultifactorAuthenticationProperties
#
# MFA can be triggered for all users/subjects carrying a specific
# attribute that matches one of the conditions below. <ul> <li>Trigger
# MFA based on a principal attribute(s) whose value(s) matches a regex
# pattern. Note that this behavior is only applicable if there is only a
# single MFA provider configured, since that would allow CAS to know
# what provider to next activate.</li> <li>Trigger MFA based on a
# principal attribute(s) whose value(s) EXACTLY matches an MFA provider.
# This option is more relevant if you have more than one provider
# configured or if you have the flexibility of assigning provider ids to
# attributes as values.</li> </ul> Needless to say, the attributes need
# to have been resolved for the principal prior to this step. Matching
# and comparison operations are case insensitive.
#
# cas.authn.mfa.triggers.principal.global-principal-attribute-name-triggers: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.triggers.principal.global-principal-attribute-predicate.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.PrincipalAttributeMultifactorAuthenticationProperties
#
# The regular expression that is cross matched against the principal
# attribute to determine if the account is qualified for multifactor
# authentication. Matching and comparison operations are case
# insensitive.
#
# cas.authn.mfa.triggers.principal.global-principal-attribute-value-regex: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.PrincipalAttributeMultifactorAuthenticationProperties
#
# Principal attribute triggers by default look for a positive match and
# the presence of a pattern in attribute values. If you are looking to
# reverse that behavior and trigger MFA when the attribute value does
# NOT match the given pattern, then set this flag to {@code true}. This
# option does not apply when a predicate trigger is used to decide on
# the provider, and is only relevant when {@link
# #globalPrincipalAttributeNameTriggers} and {@link
# #globalPrincipalAttributeValueRegex} are used.
#
# cas.authn.mfa.triggers.principal.reverse-match: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.triggers.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.triggers.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.triggers.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.triggers.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.triggers.rest.url: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.mfa.trusted.cleaner.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.mfa.trusted.cleaner.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.mfa.trusted.cleaner.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.mfa.trusted.cleaner.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.mfa.trusted.cleaner.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.mfa.trusted.cleaner.schedule.start-delay: PT15S

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.TrustedDevicesMultifactorCoreProperties
#
# If an MFA request is bypassed due to a trusted authentication
# decision, applications will receive a special attribute as part of the
# validation payload that indicates this behavior. Applications must
# further account for the scenario where they ask for an MFA mode and
# yet don’t receive confirmation of it in the response given the
# authentication session was trusted and MFA bypassed.
#
# cas.authn.mfa.trusted.core.authentication-context-attribute: isFromTrustedMultifactorAuthentication

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.TrustedDevicesMultifactorCoreProperties
#
# When device registration is enabled, indicate whether a device name
# should be automatically selected and assigned by CAS.
#
# cas.authn.mfa.trusted.core.auto-assign-device-name: false

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.TrustedDevicesMultifactorCoreProperties
#
# Indicates whether CAS should ask for device registration consent or
# execute it automatically.
#
# cas.authn.mfa.trusted.core.device-registration-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.mfa.trusted.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.mfa.trusted.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.mfa.trusted.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.mfa.trusted.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.mfa.trusted.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.mfa.trusted.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.mfa.trusted.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.GeoLocation
#
# Is this component enabled or not.
#
# cas.authn.mfa.trusted.device-fingerprint.browser.enabled: false

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.GeoLocation
#
# Indicates the order of components when generating a device
# fingerprint.
#
# cas.authn.mfa.trusted.device-fingerprint.browser.order: 0

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.ClientIp
#
# Is this component enabled or not.
#
# cas.authn.mfa.trusted.device-fingerprint.client-ip.enabled: false

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.ClientIp
#
# Indicates the order of components when generating a device
# fingerprint.
#
# cas.authn.mfa.trusted.device-fingerprint.client-ip.order: 0

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# Is this component enabled or not.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.name: 

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# Indicates the order of components when generating a device
# fingerprint.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.order: 1

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.path: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Cookie
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.authn.mfa.trusted.device-fingerprint.cookie.secure: true

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.Core
#
# Component Separator for device fingerprints.
#
# cas.authn.mfa.trusted.device-fingerprint.core.component-separator: @

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.GeoLocation
#
# Is this component enabled or not.
#
# cas.authn.mfa.trusted.device-fingerprint.geolocation.enabled: false

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.GeoLocation
#
# Indicates the order of components when generating a device
# fingerprint.
#
# cas.authn.mfa.trusted.device-fingerprint.geolocation.order: 0

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.UserAgent
#
# Is this component enabled or not.
#
# cas.authn.mfa.trusted.device-fingerprint.user-agent.enabled: false

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.DeviceFingerprintProperties.UserAgent
#
# Indicates the order of components when generating a device
# fingerprint.
#
# cas.authn.mfa.trusted.device-fingerprint.user-agent.order: 0

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.authn.mfa.trusted.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Client execution timeout.
#
# cas.authn.mfa.trusted.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.trusted.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.mfa.trusted.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.mfa.trusted.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.authn.mfa.trusted.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.authn.mfa.trusted.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.authn.mfa.trusted.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.authn.mfa.trusted.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.authn.mfa.trusted.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.authn.mfa.trusted.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.authn.mfa.trusted.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.authn.mfa.trusted.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.authn.mfa.trusted.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# AWS custom endpoint.
#
# cas.authn.mfa.trusted.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Local address.
#
# cas.authn.mfa.trusted.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.authn.mfa.trusted.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Maximum connections setting.
#
# cas.authn.mfa.trusted.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.authn.mfa.trusted.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Profile name to use.
#
# cas.authn.mfa.trusted.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Profile path.
#
# cas.authn.mfa.trusted.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.mfa.trusted.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.mfa.trusted.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.mfa.trusted.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Read capacity.
#
# cas.authn.mfa.trusted.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# AWS region used.
#
# cas.authn.mfa.trusted.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.authn.mfa.trusted.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Socket timeout.
#
# cas.authn.mfa.trusted.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# The table name used and created by CAS to hold mfa trust definitions
# in DynamoDb.
#
# cas.authn.mfa.trusted.dynamo-db.table-name: DynamoDbCasMfaTrustRecords

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Time offset.
#
# cas.authn.mfa.trusted.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.mfa.trusted.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTrustedDevicesMultifactorProperties
#
# Write capacity.
#
# cas.authn.mfa.trusted.dynamo-db.write-capacity: 10

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.mfa.trusted.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.mfa.trusted.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.mfa.trusted.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.mfa.trusted.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.mfa.trusted.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.mfa.trusted.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.mfa.trusted.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.mfa.trusted.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.mfa.trusted.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.mfa.trusted.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.mfa.trusted.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.mfa.trusted.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.mfa.trusted.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.mfa.trusted.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.mfa.trusted.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.trusted.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.mfa.trusted.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# The database connection password.
#
# cas.authn.mfa.trusted.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.mfa.trusted.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.mfa.trusted.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.mfa.trusted.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.mfa.trusted.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.mfa.trusted.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.mfa.trusted.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.mfa.trusted.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.mfa.trusted.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.mfa.trusted.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.trusted.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.mfa.trusted.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.mfa.trusted.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# The database connection URL.
#
# cas.authn.mfa.trusted.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-jdbc
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JpaTrustedDevicesMultifactorProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.mfa.trusted.jpa.user: sa

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-trusted-mfa
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.JsonTrustedDevicesMultifactorProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.trusted.json.location: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Name of the database to use for authentication.
#
# cas.authn.mfa.trusted.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.mfa.trusted.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.mfa.trusted.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# MongoDb database instance name.
#
# cas.authn.mfa.trusted.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.mfa.trusted.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.mfa.trusted.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# MongoDb database password for authentication.
#
# cas.authn.mfa.trusted.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.mfa.trusted.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.mfa.trusted.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.mfa.trusted.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.mfa.trusted.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.mfa.trusted.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.mfa.trusted.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# MongoDb database port.
#
# cas.authn.mfa.trusted.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.mfa.trusted.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.mfa.trusted.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.mfa.trusted.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.mfa.trusted.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.mfa.trusted.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Whether connections require SSL.
#
# cas.authn.mfa.trusted.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# MongoDb database connection timeout.
#
# cas.authn.mfa.trusted.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# MongoDb database user for authentication.
#
# cas.authn.mfa.trusted.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.MongoDbTrustedDevicesMultifactorProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.mfa.trusted.mongo.write-concern: ACKNOWLEDGED

# Type: java.io.File
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.trusted.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.authn.mfa.trusted.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.authn.mfa.trusted.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.authn.mfa.trusted.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.authn.mfa.trusted.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.authn.mfa.trusted.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.authn.mfa.trusted.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.authn.mfa.trusted.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.authn.mfa.trusted.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.authn.mfa.trusted.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.authn.mfa.trusted.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.authn.mfa.trusted.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.authn.mfa.trusted.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.authn.mfa.trusted.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.trusted.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Database index used by the connection factory.
#
# cas.authn.mfa.trusted.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.authn.mfa.trusted.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Redis server host.
#
# cas.authn.mfa.trusted.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.trusted.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.authn.mfa.trusted.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.authn.mfa.trusted.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Login password of the redis server.
#
# cas.authn.mfa.trusted.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.authn.mfa.trusted.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.authn.mfa.trusted.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.authn.mfa.trusted.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.authn.mfa.trusted.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.authn.mfa.trusted.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.authn.mfa.trusted.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.authn.mfa.trusted.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.authn.mfa.trusted.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.authn.mfa.trusted.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.authn.mfa.trusted.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.authn.mfa.trusted.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.authn.mfa.trusted.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.authn.mfa.trusted.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.authn.mfa.trusted.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Redis server port.
#
# cas.authn.mfa.trusted.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Redis protocol version.
#
# cas.authn.mfa.trusted.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.authn.mfa.trusted.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.authn.mfa.trusted.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.authn.mfa.trusted.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.authn.mfa.trusted.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.authn.mfa.trusted.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.authn.mfa.trusted.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.authn.mfa.trusted.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Command timeout.
#
# cas.authn.mfa.trusted.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Database URI.
#
# cas.authn.mfa.trusted.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.authn.mfa.trusted.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Login username of the redis server.
#
# cas.authn.mfa.trusted.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-trusted-mfa-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RedisTrustedDevicesMultifactorProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.authn.mfa.trusted.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RestfulTrustedDevicesMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.trusted.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RestfulTrustedDevicesMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.trusted.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-trusted-mfa-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RestfulTrustedDevicesMultifactorProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.trusted.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RestfulTrustedDevicesMultifactorProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.trusted.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-trusted-mfa-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.trusteddevice.RestfulTrustedDevicesMultifactorProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.trusted.rest.url: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.web-authn.bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values. Multiple values may be separated by a
# comma.
#
# cas.authn.mfa.web-authn.bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution. Specifically, skip multifactor if the a
# particular authentication handler noted by its name successfully is
# able to authenticate credentials in the primary factor. Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.web-authn.bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution. Specifically, skip multifactor if the
# authentication method attribute collected as part of authentication
# metadata matches a certain value. Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.web-authn.bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials. Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.web-authn.bypass.credential-class-type: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GroovyMultifactorAuthenticationProviderBypassProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.web-authn.bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names. Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.web-authn.bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host matches the value defined here. The value may be specified as
# a regular expression.
#
# cas.authn.mfa.web-authn.bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.web-authn.bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.web-authn.bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.web-authn.bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.web-authn.bypass.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.web-authn.bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.web-authn.bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.web-authn.bypass.rest.url: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.mfa.web-authn.cleaner.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.mfa.web-authn.cleaner.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.mfa.web-authn.cleaner.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.mfa.web-authn.cleaner.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.mfa.web-authn.cleaner.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.mfa.web-authn.cleaner.schedule.start-delay: PT15S

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# Configure the authentication flow to allow web-authn to be used as the
# first primary factor for authentication. Registered accounts with a
# valid webauthn registration record can choose to login using their
# device as the first step.
#
# cas.authn.mfa.web-authn.core.allow-primary-authentication: false

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# If false finish registration op will only allow registrations where
# the attestation signature can be linked to a trusted attestation root.
# This excludes self attestation and none attestation. Regardless of the
# value of this option, invalid attestation statements of supported
# formats will always be rejected. For example, a "packed" attestation
# statement with an invalid signature will be rejected even if this
# option is set to true.
#
# cas.authn.mfa.web-authn.core.allow-untrusted-attestation: false

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# The allowed origins that returned authenticator responses will be
# compared against. The default is set to the server name. A successful
# registration or authentication operation requires origins to exactly
# equal one of these values.
#
# cas.authn.mfa.web-authn.core.allowed-origins: 

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# The extension input to set for the {@code appid} extension when
# initiating authentication operations. If this member is set, starting
# an assertion op will automatically set the {@code appid} extension
# input, and finish assertion op will adjust its verification logic to
# also accept this AppID as an alternative to the RP ID. By default,
# this is not set.
#
# cas.authn.mfa.web-authn.core.application-id: 

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# Accepted values are: {@code DIRECT}, {@code INDIRECT}, {@code NONE}.
# The argument for the attestation parameter in registration operations.
# Unless your application has a concrete policy for authenticator
# attestation, it is recommended to leave this parameter undefined.
#
# cas.authn.mfa.web-authn.core.attestation-conveyance-preference: DIRECT

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# Name of the principal attribute that indicates the principal's display
# name, primarily used for device registration.
#
# cas.authn.mfa.web-authn.core.display-name-attribute: displayName

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# Whether WebAuthn functionality should be activated and enabled.
#
# cas.authn.mfa.web-authn.core.enabled: true

# Type: java.lang.Long
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# Expire and forget device registration records after this period.
#
# cas.authn.mfa.web-authn.core.expire-devices: 30

# Type: java.util.concurrent.TimeUnit
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# Device registration record expiration time unit.
#
# cas.authn.mfa.web-authn.core.expire-devices-time-unit: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# When enabled, allows the user/system to accept multiple accounts and
# device registrations per user, allowing one to switch between or
# register new devices/accounts automatically.
#
# cas.authn.mfa.web-authn.core.multiple-device-registration-enabled: false

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# The id that will be set as the rp parameter when initiating
# registration operations, and which id hash will be compared against.
# This is a required parameter. A successful registration or
# authentication operation requires rp id hash to exactly equal the
# SHA-256 hash of this id member. Alternatively, it may instead equal
# the SHA-256 hash of application id if the latter is present.
#
# cas.authn.mfa.web-authn.core.relying-party-id: 

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# The human-palatable name of the Relaying Party.
#
# cas.authn.mfa.web-authn.core.relying-party-name: 

# Type: java.io.File
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAttestationTrustSourceFidoProperties
#
# Cache metadata BLOB in the file cache file. If cache file exists, is a
# normal file, is readable, and is not out of date, then it will be used
# as the FIDO Metadata Service BLOB. <p> Otherwise, the metadata BLOB
# will be downloaded and written to this file.
#
# cas.authn.mfa.web-authn.core.trust-source.fido.blob-cache-file: 

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAttestationTrustSourceFidoProperties
#
# Set legal headers expected in the metadata BLOB. By using the FIDO
# Metadata Service, you will be subject to its terms of service. This
# setting serves two purposes: <p> To remind you and any
# adopters/reviewers that you need to read those terms of service before
# using this feature. To help you detect if the legal header changes, so
# you can take appropriate action. <p> If the legal header in the
# downloaded BLOB does not equal any of the expected headers, an
# exception will be thrown in the finalizing configuration step. <p>
# Note that CAS makes no guarantee that a change to the FIDO Metadata
# Service terms of service will also cause a change to the legal header
# in the BLOB. <p> The current legal header is noted by: {@link
# #DEFAULT_LEGAL_HEADER} which is the following: <p><br> {@code
# "Retrieval and use of this BLOB indicates acceptance of the
# appropriate agreement located at
# https://fidoalliance.org/metadata/metadata-legal-terms/"}.
#
# cas.authn.mfa.web-authn.core.trust-source.fido.legal-header: 

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAttestationTrustSourceFidoProperties
#
# Download the metadata BLOB from the FIDO website. This is the current
# FIDO Metadata Service BLOB download URL.
#
# cas.authn.mfa.web-authn.core.trust-source.fido.metadata-blob-url: https://mds.fidoalliance.org/

# Type: java.io.File
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAttestationTrustSourceFidoProperties
#
# Cache the trust root certificate in the file cache file. If cache file
# exists, is a normal file, is readable, matches one of the SHA-256
# hashes configured in and contains a currently valid X.509 certificate,
# then it will be used as the trust root for the FIDO Metadata Service
# blob. <p> Otherwise, the trust root certificate will be downloaded and
# written to this file.
#
# cas.authn.mfa.web-authn.core.trust-source.fido.trust-root-cache-file: 

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAttestationTrustSourceFidoProperties
#
# Certificate SHA-256 hash required for PKI to verify the downloaded
# certificate. Separate hash values with a comma.
#
# cas.authn.mfa.web-authn.core.trust-source.fido.trust-root-hash: cbb522d7b7f127ad6a0113865bdf1cd4102e7d0759af635a7cf4720dc963c53b

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAttestationTrustSourceFidoProperties
#
# Certificate required for PKI to verify the downloaded blob. This is
# the current FIDO Metadata Service trust root certificate. If the cert
# is downloaded, it is also written to the cache File. The certificate
# will be downloaded if it does not exist in the cache, or if the cached
# certificate is not currently valid.
#
# cas.authn.mfa.web-authn.core.trust-source.fido.trust-root-url: https://secure.globalsign.com/cacert/root-r3.crt

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.web-authn.core.trust-source.trusted-device-metadata.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# Indicates whether this provider should support trusted devices.
#
# cas.authn.mfa.web-authn.core.trusted-device-enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties
#
# If true, finish assertion op will fail if the signature counter value
# in the response is not strictly greater than the stored signature
# counter value.
#
# cas.authn.mfa.web-authn.core.validate-signature-counter: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.mfa.web-authn.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.mfa.web-authn.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.mfa.web-authn.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.mfa.web-authn.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.mfa.web-authn.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.mfa.web-authn.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.mfa.web-authn.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.authn.mfa.web-authn.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Client execution timeout.
#
# cas.authn.mfa.web-authn.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.web-authn.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.mfa.web-authn.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.mfa.web-authn.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.authn.mfa.web-authn.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.authn.mfa.web-authn.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# AWS custom endpoint.
#
# cas.authn.mfa.web-authn.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Local address.
#
# cas.authn.mfa.web-authn.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.authn.mfa.web-authn.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Maximum connections setting.
#
# cas.authn.mfa.web-authn.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.authn.mfa.web-authn.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Profile name to use.
#
# cas.authn.mfa.web-authn.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Profile path.
#
# cas.authn.mfa.web-authn.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.mfa.web-authn.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.mfa.web-authn.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.mfa.web-authn.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Read capacity.
#
# cas.authn.mfa.web-authn.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# AWS region used.
#
# cas.authn.mfa.web-authn.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.authn.mfa.web-authn.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Socket timeout.
#
# cas.authn.mfa.web-authn.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# The table name used and created by CAS to hold records in DynamoDb.
#
# cas.authn.mfa.web-authn.dynamo-db.table-name: DynamoDbCasWebAuthnRecords

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Time offset.
#
# cas.authn.mfa.web-authn.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.mfa.web-authn.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-webauthn-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnDynamoDbMultifactorProperties
#
# Write capacity.
#
# cas.authn.mfa.web-authn.dynamo-db.write-capacity: 10

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default supports fail-closed mode, which means that if you
# attempt to exercise a particular provider available to CAS and the
# provider cannot be reached, authentication will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication proceeds without exercising the provider
# functionality, if that provider cannot respond. Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.web-authn.failure-mode: CLOSED

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties
#
# The identifier for the multifactor provider. In most cases, this need
# not be configured explicitly, unless multiple instances of the same
# provider type are configured in CAS.
#
# cas.authn.mfa.web-authn.id: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.mfa.web-authn.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.mfa.web-authn.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.mfa.web-authn.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.mfa.web-authn.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.mfa.web-authn.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.mfa.web-authn.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.mfa.web-authn.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.mfa.web-authn.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.mfa.web-authn.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.mfa.web-authn.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.mfa.web-authn.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.mfa.web-authn.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.mfa.web-authn.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.mfa.web-authn.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.mfa.web-authn.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.web-authn.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.mfa.web-authn.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# The database connection password.
#
# cas.authn.mfa.web-authn.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.mfa.web-authn.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.mfa.web-authn.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.mfa.web-authn.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.mfa.web-authn.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.mfa.web-authn.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.mfa.web-authn.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.mfa.web-authn.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.mfa.web-authn.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.mfa.web-authn.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.web-authn.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.mfa.web-authn.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.mfa.web-authn.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# The database connection URL.
#
# cas.authn.mfa.web-authn.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-webauthn-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJpaMultifactorProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.mfa.web-authn.jpa.user: sa

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJsonMultifactorProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.web-authn.json.location: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Name of LDAP attribute that holds WebAuthn account/credential as JSON.
#
# cas.authn.mfa.web-authn.ldap.account-attribute-name: casWebAuthnRecord

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.mfa.web-authn.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.mfa.web-authn.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.mfa.web-authn.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.mfa.web-authn.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.mfa.web-authn.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.mfa.web-authn.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.mfa.web-authn.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.mfa.web-authn.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.mfa.web-authn.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.mfa.web-authn.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.mfa.web-authn.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Set if search referrals should be followed.
#
# cas.authn.mfa.web-authn.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.mfa.web-authn.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.mfa.web-authn.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.mfa.web-authn.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Keystore password.
#
# cas.authn.mfa.web-authn.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.mfa.web-authn.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.mfa.web-authn.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.mfa.web-authn.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.mfa.web-authn.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Name of the LDAP handler.
#
# cas.authn.mfa.web-authn.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.mfa.web-authn.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.mfa.web-authn.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.mfa.web-authn.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Duration of time to wait for responses.
#
# cas.authn.mfa.web-authn.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# SASL authorization id.
#
# cas.authn.mfa.web-authn.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The SASL mechanism.
#
# cas.authn.mfa.web-authn.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.mfa.web-authn.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# SASL quality of protected.
#
# cas.authn.mfa.web-authn.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The SASL realm.
#
# cas.authn.mfa.web-authn.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# SASL security strength.
#
# cas.authn.mfa.web-authn.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Search handlers.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.mfa.web-authn.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.mfa.web-authn.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.mfa.web-authn.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.mfa.web-authn.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.mfa.web-authn.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.mfa.web-authn.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Password needed to open the truststore.
#
# cas.authn.mfa.web-authn.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.mfa.web-authn.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.mfa.web-authn.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.mfa.web-authn.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Period at which pool should be validated.
#
# cas.authn.mfa.web-authn.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.mfa.web-authn.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-webauthn-ldap
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnLdapMultifactorProperties
#
# Period at which validation operations may time out.
#
# cas.authn.mfa.web-authn.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.mfa.web-authn.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.mfa.web-authn.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.mfa.web-authn.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.mfa.web-authn.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.mfa.web-authn.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.mfa.web-authn.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.mfa.web-authn.ldap.validator.type: search

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Name of the database to use for authentication.
#
# cas.authn.mfa.web-authn.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.mfa.web-authn.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.mfa.web-authn.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# MongoDb database instance name.
#
# cas.authn.mfa.web-authn.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.mfa.web-authn.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.mfa.web-authn.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# MongoDb database password for authentication.
#
# cas.authn.mfa.web-authn.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.mfa.web-authn.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.mfa.web-authn.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.mfa.web-authn.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.mfa.web-authn.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.mfa.web-authn.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.mfa.web-authn.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# MongoDb database port.
#
# cas.authn.mfa.web-authn.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.mfa.web-authn.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.mfa.web-authn.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.mfa.web-authn.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.mfa.web-authn.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.mfa.web-authn.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Whether connections require SSL.
#
# cas.authn.mfa.web-authn.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# MongoDb database connection timeout.
#
# cas.authn.mfa.web-authn.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# MongoDb database user for authentication.
#
# cas.authn.mfa.web-authn.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMongoDbMultifactorProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.mfa.web-authn.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.String
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties
#
# The name of the authentication handler used to verify credentials in
# MFA. Remember that if you have more than one authentication handler of
# the same type, the names must be defined uniquely for each
# authentication scheme. Failing to do so may force CAS to not register
# authentication handlers with a duplicate name.
#
# cas.authn.mfa.web-authn.name: 

# Type: java.lang.Integer
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.web-authn.order: 

# Type: java.lang.Integer
# Module: cas-server-support-webauthn
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required. Consider for a moment that CAS already has
# established an SSO session with/without a provider and has reached a
# level of authentication. Another incoming request attempts to exercise
# that SSO session with a different and often competing authentication
# requirement that may differ from the authentication level CAS has
# already established. Concretely, examples may be: <ul> <li>CAS has
# achieved an SSO session, but a separate request now requires step-up
# authentication with DuoSecurity.</li> <li>CAS has achieved an SSO
# session with an authentication level satisfied by DuoSecurity, but a
# separate request now requires step-up authentication with YubiKey.
# </li> </ul> In certain scenarios, CAS will attempt to rank
# authentication levels and compare them with each other. If CAS already
# has achieved a level that is higher than what the incoming request
# requires, no step-up authentication will be performed. If the opposite
# is true, CAS will route the authentication flow to the required
# authentication level and upon success, will adjust the SSO session
# with the new higher authentication level now satisfied. Ranking of
# authentication methods is done per provider via specific properties
# for each. Note that the higher the rank value is, the higher on the
# security scale it remains. A provider that ranks higher with a larger
# weight value trumps and override others with a lower value.
#
# cas.authn.mfa.web-authn.rank: 0

# Type: java.io.File
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.web-authn.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.authn.mfa.web-authn.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.authn.mfa.web-authn.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.authn.mfa.web-authn.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.authn.mfa.web-authn.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.authn.mfa.web-authn.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.authn.mfa.web-authn.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.authn.mfa.web-authn.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.authn.mfa.web-authn.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.authn.mfa.web-authn.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.authn.mfa.web-authn.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.authn.mfa.web-authn.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.authn.mfa.web-authn.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.authn.mfa.web-authn.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.web-authn.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Database index used by the connection factory.
#
# cas.authn.mfa.web-authn.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.authn.mfa.web-authn.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Redis server host.
#
# cas.authn.mfa.web-authn.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.web-authn.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.authn.mfa.web-authn.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.authn.mfa.web-authn.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Login password of the redis server.
#
# cas.authn.mfa.web-authn.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.authn.mfa.web-authn.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.authn.mfa.web-authn.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.authn.mfa.web-authn.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.authn.mfa.web-authn.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.authn.mfa.web-authn.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.authn.mfa.web-authn.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.authn.mfa.web-authn.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.authn.mfa.web-authn.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.authn.mfa.web-authn.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.authn.mfa.web-authn.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.authn.mfa.web-authn.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.authn.mfa.web-authn.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.authn.mfa.web-authn.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.authn.mfa.web-authn.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Redis server port.
#
# cas.authn.mfa.web-authn.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Redis protocol version.
#
# cas.authn.mfa.web-authn.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.authn.mfa.web-authn.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.authn.mfa.web-authn.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.authn.mfa.web-authn.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.authn.mfa.web-authn.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.authn.mfa.web-authn.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.authn.mfa.web-authn.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.authn.mfa.web-authn.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Command timeout.
#
# cas.authn.mfa.web-authn.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Database URI.
#
# cas.authn.mfa.web-authn.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.authn.mfa.web-authn.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Login username of the redis server.
#
# cas.authn.mfa.web-authn.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-webauthn-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRedisMultifactorProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.authn.mfa.web-authn.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-webauthn-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRestfulMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.web-authn.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRestfulMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.web-authn.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-webauthn-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRestfulMultifactorProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.web-authn.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-webauthn-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRestfulMultifactorProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.web-authn.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-webauthn-rest
# Owner: org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnRestfulMultifactorProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.web-authn.rest.url: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# Collection of allowed devices allowed per user. This is done using a
# key-value structure where the key is the user the value is the allowed
# collection of yubikey device ids.
#
# cas.authn.mfa.yubikey.allowed-devices: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# YubiKey API urls to contact for verification of credentials.
#
# cas.authn.mfa.yubikey.api-urls: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated authentication
# attribute names.
#
# cas.authn.mfa.yubikey.bypass.authentication-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# authentication attribute values. Multiple values may be separated by a
# comma.
#
# cas.authn.mfa.yubikey.bypass.authentication-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# authentication execution. Specifically, skip multifactor if the a
# particular authentication handler noted by its name successfully is
# able to authenticate credentials in the primary factor. Multiple
# values may be separated by a comma.
#
# cas.authn.mfa.yubikey.bypass.authentication-handler-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on method/form of primary
# authentication execution. Specifically, skip multifactor if the
# authentication method attribute collected as part of authentication
# metadata matches a certain value. Multiple values may be separated by
# a comma.
#
# cas.authn.mfa.yubikey.bypass.authentication-method-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication depending on form of primary
# credentials. Value must equal the fully qualified class name of the
# credential type.
#
# cas.authn.mfa.yubikey.bypass.credential-class-type: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.GroovyMultifactorAuthenticationProviderBypassProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mfa.yubikey.bypass.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request contains the
# defined header names. Header names may be comma-separated and can be
# regular expressions; values are ignored.
#
# cas.authn.mfa.yubikey.bypass.http-request-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication if the http request's remote address
# or host matches the value defined here. The value may be specified as
# a regular expression.
#
# cas.authn.mfa.yubikey.bypass.http-request-remote-address: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Skip multifactor authentication based on designated principal
# attribute names.
#
# cas.authn.mfa.yubikey.bypass.principal-attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.MultifactorAuthenticationProviderBypassProperties
#
# Optionally, skip multifactor authentication based on designated
# principal attribute values.
#
# cas.authn.mfa.yubikey.bypass.principal-attribute-value: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.yubikey.bypass.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.yubikey.bypass.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.yubikey.bypass.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.yubikey.bypass.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.mfa.RestfulMultifactorAuthenticationProviderBypassProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.yubikey.bypass.rest.url: 

# Type: java.lang.Integer
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# Yubikey client id.
#
# cas.authn.mfa.yubikey.client-id: 0

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.mfa.yubikey.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.mfa.yubikey.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.mfa.yubikey.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.mfa.yubikey.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.mfa.yubikey.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.mfa.yubikey.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.mfa.yubikey.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.authn.mfa.yubikey.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Client execution timeout.
#
# cas.authn.mfa.yubikey.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.yubikey.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.mfa.yubikey.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.mfa.yubikey.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.authn.mfa.yubikey.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.authn.mfa.yubikey.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# AWS custom endpoint.
#
# cas.authn.mfa.yubikey.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Local address.
#
# cas.authn.mfa.yubikey.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.authn.mfa.yubikey.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Maximum connections setting.
#
# cas.authn.mfa.yubikey.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.authn.mfa.yubikey.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Profile name to use.
#
# cas.authn.mfa.yubikey.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Profile path.
#
# cas.authn.mfa.yubikey.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.mfa.yubikey.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.mfa.yubikey.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.mfa.yubikey.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Read capacity.
#
# cas.authn.mfa.yubikey.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# AWS region used.
#
# cas.authn.mfa.yubikey.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.authn.mfa.yubikey.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Socket timeout.
#
# cas.authn.mfa.yubikey.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# The table name used and created by CAS to hold devices in DynamoDb.
#
# cas.authn.mfa.yubikey.dynamo-db.table-name: DynamoDbYubiKeyDevices

# Type: java.lang.Integer
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Time offset.
#
# cas.authn.mfa.yubikey.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.mfa.yubikey.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-yubikey-dynamodb
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyDynamoDbMultifactorProperties
#
# Write capacity.
#
# cas.authn.mfa.yubikey.dynamo-db.write-capacity: 10

# Type: org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# The failure mode policy for this MFA provider. The authentication
# policy by default supports fail-closed mode, which means that if you
# attempt to exercise a particular provider available to CAS and the
# provider cannot be reached, authentication will be stopped and an
# error will be displayed. You can of course change this behavior so
# that authentication proceeds without exercising the provider
# functionality, if that provider cannot respond. Each defined
# multifactor authentication provider can set its own failure mode
# policy. Failure modes set at this location will override the global
# failure mode, but defer to any failure mode set by the registered
# service.
# Available values are as follows:
# <ul><li>{@code OPEN}:
# Disallow MFA, proceed with authentication but don't communicate MFA to
# the RP.</li><li>{@code CLOSED}: Disallow MFA, block with
# authentication.</li><li>{@code PHANTOM}: Disallow MFA, proceed with
# authentication and communicate MFA to the RP.</li><li>{@code NONE}: Do
# not check for failure at all.</li><li>{@code UNDEFINED}: The default
# one indicating that no failure mode is set at all.</li></ul>
#
# cas.authn.mfa.yubikey.failure-mode: CLOSED

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# The identifier for the multifactor provider. In most cases, this need
# not be configured explicitly, unless multiple instances of the same
# provider type are configured in CAS.
#
# cas.authn.mfa.yubikey.id: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.mfa.yubikey.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.mfa.yubikey.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.mfa.yubikey.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.mfa.yubikey.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.mfa.yubikey.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.mfa.yubikey.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.mfa.yubikey.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.mfa.yubikey.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.mfa.yubikey.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.mfa.yubikey.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.mfa.yubikey.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.mfa.yubikey.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.mfa.yubikey.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.mfa.yubikey.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.mfa.yubikey.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.yubikey.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.mfa.yubikey.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# The database connection password.
#
# cas.authn.mfa.yubikey.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.mfa.yubikey.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.mfa.yubikey.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.mfa.yubikey.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.mfa.yubikey.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.mfa.yubikey.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.mfa.yubikey.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.mfa.yubikey.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.mfa.yubikey.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.mfa.yubikey.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.mfa.yubikey.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.mfa.yubikey.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.mfa.yubikey.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# The database connection URL.
#
# cas.authn.mfa.yubikey.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-yubikey-jpa
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyJpaMultifactorProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.mfa.yubikey.jpa.user: sa

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# Keep device registration records inside a static JSON resource.
#
# cas.authn.mfa.yubikey.json-file: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Name of the database to use for authentication.
#
# cas.authn.mfa.yubikey.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.mfa.yubikey.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.mfa.yubikey.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# MongoDb database instance name.
#
# cas.authn.mfa.yubikey.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.mfa.yubikey.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.mfa.yubikey.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# MongoDb database password for authentication.
#
# cas.authn.mfa.yubikey.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.mfa.yubikey.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.mfa.yubikey.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.mfa.yubikey.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.mfa.yubikey.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.mfa.yubikey.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.mfa.yubikey.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# MongoDb database port.
#
# cas.authn.mfa.yubikey.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.mfa.yubikey.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.mfa.yubikey.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.mfa.yubikey.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.mfa.yubikey.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.mfa.yubikey.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Whether connections require SSL.
#
# cas.authn.mfa.yubikey.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# MongoDb database connection timeout.
#
# cas.authn.mfa.yubikey.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# MongoDb database user for authentication.
#
# cas.authn.mfa.yubikey.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-mongo
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMongoDbMultifactorProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.mfa.yubikey.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# When enabled, allows the user/system to accept multiple accounts and
# device registrations per user, allowing one to switch between or
# register new devices/accounts automatically.
#
# cas.authn.mfa.yubikey.multiple-device-registration-enabled: false

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# The name of the authentication handler used to verify credentials in
# MFA. Remember that if you have more than one authentication handler of
# the same type, the names must be defined uniquely for each
# authentication scheme. Failing to do so may force CAS to not register
# authentication handlers with a duplicate name.
#
# cas.authn.mfa.yubikey.name: 

# Type: java.lang.Integer
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.mfa.yubikey.order: 

# Type: java.lang.Integer
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# At times, CAS needs to determine the correct provider when step-up
# authentication is required. Consider for a moment that CAS already has
# established an SSO session with/without a provider and has reached a
# level of authentication. Another incoming request attempts to exercise
# that SSO session with a different and often competing authentication
# requirement that may differ from the authentication level CAS has
# already established. Concretely, examples may be: <ul> <li>CAS has
# achieved an SSO session, but a separate request now requires step-up
# authentication with DuoSecurity.</li> <li>CAS has achieved an SSO
# session with an authentication level satisfied by DuoSecurity, but a
# separate request now requires step-up authentication with YubiKey.
# </li> </ul> In certain scenarios, CAS will attempt to rank
# authentication levels and compare them with each other. If CAS already
# has achieved a level that is higher than what the incoming request
# requires, no step-up authentication will be performed. If the opposite
# is true, CAS will route the authentication flow to the required
# authentication level and upon success, will adjust the SSO session
# with the new higher authentication level now satisfied. Ranking of
# authentication methods is done per provider via specific properties
# for each. Note that the higher the rank value is, the higher on the
# security scale it remains. A provider that ranks higher with a larger
# weight value trumps and override others with a lower value.
#
# cas.authn.mfa.yubikey.rank: 0

# Type: java.io.File
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.yubikey.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.authn.mfa.yubikey.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.authn.mfa.yubikey.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.authn.mfa.yubikey.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.authn.mfa.yubikey.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.authn.mfa.yubikey.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.authn.mfa.yubikey.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.authn.mfa.yubikey.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.authn.mfa.yubikey.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.authn.mfa.yubikey.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.authn.mfa.yubikey.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.authn.mfa.yubikey.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.authn.mfa.yubikey.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.authn.mfa.yubikey.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Connection timeout.
#
# cas.authn.mfa.yubikey.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Database index used by the connection factory.
#
# cas.authn.mfa.yubikey.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.authn.mfa.yubikey.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Redis server host.
#
# cas.authn.mfa.yubikey.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.mfa.yubikey.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.authn.mfa.yubikey.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.authn.mfa.yubikey.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Login password of the redis server.
#
# cas.authn.mfa.yubikey.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.authn.mfa.yubikey.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.authn.mfa.yubikey.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.authn.mfa.yubikey.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.authn.mfa.yubikey.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.authn.mfa.yubikey.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.authn.mfa.yubikey.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.authn.mfa.yubikey.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.authn.mfa.yubikey.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.authn.mfa.yubikey.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.authn.mfa.yubikey.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.authn.mfa.yubikey.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.authn.mfa.yubikey.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.authn.mfa.yubikey.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.authn.mfa.yubikey.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Redis server port.
#
# cas.authn.mfa.yubikey.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Redis protocol version.
#
# cas.authn.mfa.yubikey.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.authn.mfa.yubikey.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.authn.mfa.yubikey.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.authn.mfa.yubikey.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.authn.mfa.yubikey.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.authn.mfa.yubikey.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.authn.mfa.yubikey.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.authn.mfa.yubikey.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Command timeout.
#
# cas.authn.mfa.yubikey.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Database URI.
#
# cas.authn.mfa.yubikey.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.authn.mfa.yubikey.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Login username of the redis server.
#
# cas.authn.mfa.yubikey.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey-redis
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRedisMultifactorProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.authn.mfa.yubikey.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRestfulMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.mfa.yubikey.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRestfulMultifactorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.mfa.yubikey.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRestfulMultifactorProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.mfa.yubikey.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRestfulMultifactorProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.mfa.yubikey.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyRestfulMultifactorProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.mfa.yubikey.rest.url: 

# Type: java.lang.String
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# Yubikey secret key.
#
# cas.authn.mfa.yubikey.secret-key: 

# Type: java.lang.Boolean
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# Indicates whether this provider should support trusted devices.
#
# cas.authn.mfa.yubikey.trusted-device-enabled: false

# Type: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties$YubiKeyDeviceValidationOptions
# Module: cas-server-support-yubikey
# Owner: org.apereo.cas.configuration.model.support.mfa.yubikey.YubiKeyMultifactorAuthenticationProperties
#
# Define the strategy that controls how devices should be validated.
#
# Available values are as follows:
# <ul><li>{@code VERIFY}: Verify
# yubikey devices via YubiKey APIs.</li><li>{@code SKIP}: Skip all
# validations checks and accept all devices.</li><li>{@code REJECT}:
# Reject all devices.</li></ul>
#
# cas.authn.mfa.yubikey.validator: VERIFY

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Attributes to fetch from Mongo (blank by default to force the pac4j
# legacy behavior).
#
# cas.authn.mongo.attributes: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Name of the database to use for authentication.
#
# cas.authn.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# MongoDb database instance name.
#
# cas.authn.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.mongo.name: 

# Type: java.lang.Integer
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Order of authentication handler in chain.
#
# cas.authn.mongo.order: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# MongoDb database password for authentication.
#
# cas.authn.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Attribute that holds the password.
#
# cas.authn.mongo.password-attribute: password

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.mongo.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.mongo.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.mongo.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.mongo.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.mongo.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.mongo.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.mongo.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# MongoDb database port.
#
# cas.authn.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Attribute that would be used to establish the authenticated profile.
#
# cas.authn.mongo.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.mongo.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.mongo.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.mongo.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.mongo.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.mongo.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.mongo.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Whether connections require SSL.
#
# cas.authn.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# MongoDb database connection timeout.
#
# cas.authn.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# MongoDb database user for authentication.
#
# cas.authn.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Attributes that holds the username.
#
# cas.authn.mongo.username-attribute: username

# Type: java.lang.String
# Module: cas-server-support-mongo
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbAuthenticationProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.Boolean
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthAccessTokenProperties
#
# Create access token as JWTs.
#
# cas.authn.oauth.access-token.create-as-jwt: false

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.oauth.access-token.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.oauth.access-token.crypto.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto encryption operations are enabled.
#
# cas.authn.oauth.access-token.crypto.encryption-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.oauth.access-token.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.oauth.access-token.crypto.encryption.key-size: 512

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto signing operations are enabled.
#
# cas.authn.oauth.access-token.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.oauth.access-token.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.oauth.access-token.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.oauth.access-token.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.Long
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthAccessTokenProperties
#
# Maximum number of active access tokens that an application can
# receive. If the application requests more that this limit, the request
# will be denied and the access token will not be issued.
#
# cas.authn.oauth.access-token.max-active-tokens-allowed: 0

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthAccessTokenProperties
#
# Hard timeout to kill the access token and expire it.
#
# cas.authn.oauth.access-token.max-time-to-live-in-seconds: PT8H

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthAccessTokenProperties
#
# The storage object name used and created by CAS to hold OAuth access
# tokens in the backing ticket registry implementation.
#
# cas.authn.oauth.access-token.storage-name: oauthAccessTokensCache

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthAccessTokenProperties
#
# Sliding window for the access token expiration policy. Essentially,
# this is an idle time out.
#
# cas.authn.oauth.access-token.time-to-kill-in-seconds: PT2H

# Type: java.lang.Integer
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCodeProperties
#
# Number of times this code is valid and can be used.
#
# cas.authn.oauth.code.number-of-uses: 1

# Type: java.lang.Boolean
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCodeProperties
#
# Remove the related access tokens when trying to use a code which is
# expired or no longer exists.
#
# cas.authn.oauth.code.remove-related-access-tokens: false

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCodeProperties
#
# The storage object name used and created by CAS to hold OAuth codes in
# the backing ticket registry implementation.
#
# cas.authn.oauth.code.storage-name: oauthCodesCache

# Type: java.lang.Long
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCodeProperties
#
# Duration in seconds where the code is valid.
#
# cas.authn.oauth.code.time-to-kill-in-seconds: 30

# Type: java.lang.Boolean
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCoreProperties
#
# Whether approval prompt/consent screen should be bypassed.
#
# cas.authn.oauth.core.bypass-approval-prompt: false

# Type: org.apereo.cas.configuration.model.support.oauth.OAuthCoreProperties$UserProfileViewTypes
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCoreProperties
#
# User profile view type determines how the final user profile should be
# rendered once an access token is "validated".
# Available values are
# as follows:
# <ul><li>{@code NESTED}: Return and render the user
# profile view in nested mode.
# This is the default option, most
# usually.</li><li>{@code FLAT}: Return and render the user profile view
# in flattened mode
# where all attributes are flattened down to one
# level only.</li></ul>
#
# cas.authn.oauth.core.user-profile-view-type: NESTED

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.oauth.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.oauth.crypto.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto encryption operations are enabled.
#
# cas.authn.oauth.crypto.encryption-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.oauth.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.oauth.crypto.encryption.key-size: 512

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto signing operations are enabled.
#
# cas.authn.oauth.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.oauth.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.oauth.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.oauth.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCsrfCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.authn.oauth.csrf-cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCsrfCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.authn.oauth.csrf-cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCsrfCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.authn.oauth.csrf-cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCsrfCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.oauth.csrf-cookie.name: 

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCsrfCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.authn.oauth.csrf-cookie.path: 

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCsrfCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.oauth.csrf-cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthCsrfCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.authn.oauth.csrf-cookie.secure: true

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthDeviceTokenProperties
#
# Hard timeout to kill the device token and expire it.
#
# cas.authn.oauth.device-token.max-time-to-live-in-seconds: PT5M

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthDeviceTokenProperties
#
# The device refresh interval. The client should attempt to acquire an
# access token every few seconds (at a rate specified by interval) by
# POSTing to the access token endpoint on the server.
#
# cas.authn.oauth.device-token.refresh-interval: PT15S

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthDeviceTokenProperties
#
# The storage object name used and created by CAS to hold OAuth device
# tokens in the backing ticket registry implementation.
#
# cas.authn.oauth.device-token.storage-name: oauthDeviceTokensCache

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthDeviceUserCodeProperties
#
# Hard timeout to kill the token and expire it.
#
# cas.authn.oauth.device-user-code.max-time-to-live-in-seconds: PT1M

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthDeviceUserCodeProperties
#
# The storage object name used and created by CAS to hold OAuth device
# user codes in the backing ticket registry implementation.
#
# cas.authn.oauth.device-user-code.storage-name: oauthDeviceUserCodesCache

# Type: java.lang.Integer
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthDeviceUserCodeProperties
#
# Length of the generated user code.
#
# cas.authn.oauth.device-user-code.user-code-length: 8

# Type: java.lang.Boolean
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthGrantsProperties.ResourceOwner
#
# Whether using the resource-owner grant should enforce authorization
# rules and per-service policies based on a service parameter is
# provided as a header outside the normal semantics of the grant and
# protocol.
#
# cas.authn.oauth.grants.resource-owner.require-service-header: false

# Type: java.lang.Long
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthRefreshTokenProperties
#
# Maximum number of active refresh tokens that an application can
# receive. If the application requests more that this limit, the request
# will be denied and the access token will not be issued.
#
# cas.authn.oauth.refresh-token.max-active-tokens-allowed: 0

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthRefreshTokenProperties
#
# The storage object name used and created by CAS to hold OAuth refresh
# tokens in the backing ticket registry implementation.
#
# cas.authn.oauth.refresh-token.storage-name: oauthRefreshTokensCache

# Type: java.lang.String
# Module: cas-server-support-oauth
# Owner: org.apereo.cas.configuration.model.support.oauth.OAuthRefreshTokenProperties
#
# Hard timeout beyond which the refresh token is considered expired.
#
# cas.authn.oauth.refresh-token.time-to-kill-in-seconds: P14D

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# A regular expression pattern that indicates the set of allowed IP
# addresses, when {@link #isPinToSession()} is configured. In the event
# that there is a mismatch between the cookie IP address and the current
# request-provided IP address (i.e. network switches, VPN, etc), the
# cookie can still be considered valid if the new IP address matches the
# pattern specified here.
#
# cas.authn.oauth.session-replication.cookie.allowed-ip-addresses-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.authn.oauth.session-replication.cookie.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.oauth.session-replication.cookie.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.oauth.session-replication.cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.oauth.session-replication.cookie.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.oauth.session-replication.cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.oauth.session-replication.cookie.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.oauth.session-replication.cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.oauth.session-replication.cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.authn.oauth.session-replication.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# When set to {@code true} and assuming {@link #isPinToSession()} is
# also {@code true}, client sessions (using the client IP address) are
# geo-located using a geolocation service when/if configured. The
# resulting session is either pinned to the client geolocation, or the
# default client address.
#
# cas.authn.oauth.session-replication.cookie.geo-locate-client-session: false

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.authn.oauth.session-replication.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.authn.oauth.session-replication.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.oauth.session-replication.cookie.name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.authn.oauth.session-replication.cookie.path: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# When generating cookie values, determine whether the value should be
# compounded and signed with the properties of the current session, such
# as IP address, user-agent, etc.
#
# cas.authn.oauth.session-replication.cookie.pin-to-session: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.oauth.session-replication.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.authn.oauth.session-replication.cookie.secure: true

# Type: java.lang.Boolean
# Module: cas-server-core-api
# Owner: org.apereo.cas.configuration.model.support.replication.SessionReplicationProperties
#
# Indicates whether profiles and other session data, collected as part
# of authentication flows and protocol requests that are kept by the
# container session, should be replicated across the cluster using CAS
# and its own ticket registry. Without this option, profile data and
# other related pieces of information should be manually replicated via
# means and libraries outside of CAS.
#
# cas.authn.oauth.session-replication.replicate-sessions: true

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaCoreProperties
#
# UMA issuer.
#
# cas.authn.oauth.uma.core.issuer: http://localhost:8080/cas

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaPermissionTicketProperties
#
# Hard timeout to kill the UMA permission token and expire it.
#
# cas.authn.oauth.uma.permission-ticket.max-time-to-live-in-seconds: PT3M

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.oauth.uma.requesting-party-token.jwks-file.location: 

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaRequestingPartyTokenProperties
#
# Hard timeout to kill the RP token and expire it.
#
# cas.authn.oauth.uma.requesting-party-token.max-time-to-live-in-seconds: PT3M

# Type: java.lang.Boolean
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.oauth.uma.resource-set.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.oauth.uma.resource-set.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.oauth.uma.resource-set.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.oauth.uma.resource-set.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.oauth.uma.resource-set.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.oauth.uma.resource-set.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.oauth.uma.resource-set.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.oauth.uma.resource-set.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.oauth.uma.resource-set.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.oauth.uma.resource-set.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.oauth.uma.resource-set.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.oauth.uma.resource-set.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.oauth.uma.resource-set.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.oauth.uma.resource-set.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.oauth.uma.resource-set.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.oauth.uma.resource-set.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.oauth.uma.resource-set.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# The database connection password.
#
# cas.authn.oauth.uma.resource-set.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.oauth.uma.resource-set.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.oauth.uma.resource-set.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.oauth.uma.resource-set.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.oauth.uma.resource-set.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.oauth.uma.resource-set.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# The database connection URL.
#
# cas.authn.oauth.uma.resource-set.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-oauth-uma
# Owner: org.apereo.cas.configuration.model.support.uma.UmaResourceSetJpaProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.oauth.uma.resource-set.jpa.user: sa

# Type: org.apereo.cas.configuration.model.support.oauth.OAuthCoreProperties.UserProfileViewTypes
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into a core sub namespace.
# Replace with: Setting is moved into a core sub namespace.
#
# 
#
# cas.authn.oauth.user-profile-view-type: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCibaProperties
#
# Hard timeout to kill the id token and expire it.
#
# cas.authn.oidc.ciba.max-time-to-live-in-seconds: PT5M

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCibaProperties
#
# The storage object name used and created by CAS to hold CIBA requests
# in the backing ticket registry implementation.
#
# cas.authn.oidc.ciba.storage-name: oidcCibaRequestsCache

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCibaVerificationProperties
#
# Number of seconds to pause and wait before sending out the
# verification notification to the user. Essentially, this controls how
# long the user must wait before the notification message is received
# via email, etc.
#
# cas.authn.oidc.ciba.verification.delay: PT5S

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.authn.oidc.ciba.verification.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.authn.oidc.ciba.verification.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.authn.oidc.ciba.verification.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.authn.oidc.ciba.verification.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.oidc.ciba.verification.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.oidc.ciba.verification.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.authn.oidc.ciba.verification.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.authn.oidc.ciba.verification.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.authn.oidc.ciba.verification.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.oidc.ciba.verification.mail.validate-addresses: false

# Type: java.util.List
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because claim-types-supported setting is moved into the discovery namespace.
# Replace with: claim-types-supported setting is moved into the discovery namespace.
#
# 
#
# cas.authn.oidc.claim-types-supported: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because claims setting is moved into the discovery namespace.
# Replace with: claims setting is moved into the discovery namespace.
#
# 
#
# cas.authn.oidc.claims: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because claims-map is moved into the core namespace.
# Replace with: claims-map is moved into the core namespace.
#
# 
#
# cas.authn.oidc.claims-map: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCoreProperties
#
# Defines the regular expression pattern that is matched against the
# calculated issuer from the request. If the issuer that is extracted
# from the request does not match the {@link #issuer} defined in the CAS
# configuration, this pattern acts as a secondary level rule to allow
# incoming requests to pass through if the match is successful. By
# default, the pattern is designed to never match anything.
#
# cas.authn.oidc.core.accepted-issuers-pattern: a^

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCoreProperties
#
# A mapping of authentication context refs (ACR) values. This is where
# specific authentication context classes are referenced and mapped to
# providers that CAS may support mainly for MFA purposes. <p> Example
# might be {@code acr-value->mfa-duo}. <p> Support for authentication
# context class references is implemented in form of {@code acr_values}
# as part of the original authorization request, which is mostly taken
# into account by the multifactor authentication features of CAS. Once
# successful, {@code acr} and {@code amr} values are passed back to the
# relying party as part of the id token.
#
# cas.authn.oidc.core.authentication-context-reference-mappings: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCoreProperties
#
# Map fixed claims to CAS attributes. Key is the existing claim name for
# a scope and value is the new attribute that should take its place and
# value. Claims associated with a scope (i.e. given_name for profile)
# are fixed in the OpenID specification. In the event that custom
# arbitrary attributes should be mapped to claims, mappings can be
# defined in CAS settings to link a CAS-defined attribute to a fixed
# given scope. For instance, CAS configuration may allow the value of
# the attribute {@code sys_given_name} to be mapped and assigned to the
# claim {@code given_name} without having an impact on the attribute
# resolution configuration and all other CAS-enabled applications. If
# mapping is not defined, by default CAS attributes are expected to
# match claim names.
#
# cas.authn.oidc.core.claims-map: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because dynamic-client-registration-mode is moved into the registration namespace.
# Replace with: dynamic-client-registration-mode is moved into the registration namespace.
#
# 
#
# cas.authn.oidc.core.dynamic-client-registration-mode: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a id-token namespace.
# Replace with: This setting is moved into a id-token namespace.
#
# 
#
# cas.authn.oidc.core.include-id-token-claims: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCoreProperties
#
# OIDC issuer. All OpenID Connect servers such as CAS are uniquely
# identified by a URL known as the issuer. This URL serves as the prefix
# of a service discovery endpoint as specified in the OpenID Connect
# Discovery standard. <p> This URL must be using the https scheme with
# no query or fragment component that the identity provider (CAS)
# asserts as its Issuer Identifier. This also MUST be identical to the
# {@code iss} claim value in ID Tokens issued from this issuer, unless
# overridden in very special circumstances as a last resort. <p> CAS
# primarily supports a single issuer per deployment/host.
#
# cas.authn.oidc.core.issuer: http://localhost:8080/cas/oidc

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCoreProperties
#
# Skew value used to massage the authentication issue instance.
#
# cas.authn.oidc.core.skew: PT5M

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcCoreProperties
#
# Mapping of user-defined scopes. Key is the new scope name and value is
# a comma-separated list of claims mapped to the scope. Such
# user-defined scopes are also able to override the definition of system
# scopes. User-defined scopes as well as any and all custom claims that
# are mapped to the scope must also be defined as scopes and claims
# supported by CAS in OpenID Connect discovery.
#
# cas.authn.oidc.core.user-defined-scopes: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of ACR values supported. This discovery element contains a list
# of the supported acr values supported by this server. Support for
# authentication context class references is implemented in form of
# {@code acr_values} as part of the original authorization request,
# which is mostly taken into account by the multifactor authentication
# features of CAS. Once successful, {@code acr} and {@code amr} values
# are passed back to the relying party as part of the id token.
#
# cas.authn.oidc.discovery.acr-values-supported: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Parameter indicating whether the authorization server provides the
# {@code iss} parameter in the authorization response.
#
# cas.authn.oidc.discovery.authorization-response-issuer-parameter-supported: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of the JWS signing algorithms (alg values) supported by the CAS
# for signed authentication requests. If omitted, signed authentication
# requests are not supported by the CAS.
#
# cas.authn.oidc.discovery.backchannel-authentication-request-signing-alg-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported backchannel token delivery modes used for CIBA.
#
# cas.authn.oidc.discovery.backchannel-token-delivery-modes-supported: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Boolean value specifying whether the OP supports the use of the {@code
# user_code} parameter.
#
# cas.authn.oidc.discovery.backchannel-user-code-parameter-supported: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported claim types.
#
# cas.authn.oidc.discovery.claim-types-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of supported claims.
#
# cas.authn.oidc.discovery.claims: 

# Type: java.util.Set<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of the supported verified claims.
#
# cas.authn.oidc.discovery.claims-in-verified-claims-supported: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Specifying whether this provider supports use of the claims parameter.
#
# cas.authn.oidc.discovery.claims-parameter-supported: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of PKCE code challenge methods supported.
#
# cas.authn.oidc.discovery.code-challenge-methods-supported: 

# Type: java.util.Set<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Needed when {@link #evidenceSupported} contains {@code document} or
# {@code id_document}. Set containing all identity document types
# utilized by the CAS for identity verification.
#
# cas.authn.oidc.discovery.documents-supported: 

# Type: java.util.Set<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Set containing the validation methods the CAS supports.
#
# cas.authn.oidc.discovery.documents-validation-methods-supported: 

# Type: java.util.Set<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Set containing the verification methods the CAS supports.
#
# cas.authn.oidc.discovery.documents-verification-methods-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# A array containing a list of the JWS "alg" values supported by the CAS
# authorization server for DPoP proof JWTs.
#
# cas.authn.oidc.discovery.dpop-signing-alg-values-supported: 

# Type: java.util.Set<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Needed when evidence_supported contains {@code electronicrecord}. Set
# containing all electronic record types the CAS supports.
#
# cas.authn.oidc.discovery.electronic-records-supported: 

# Type: java.util.Set<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Set containing all types of identity evidence the OP uses. This array
# may have zero or more members.
#
# cas.authn.oidc.discovery.evidence-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported grant types.
#
# cas.authn.oidc.discovery.grant-types-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported algorithms for id token encryption.
#
# cas.authn.oidc.discovery.id-token-encryption-alg-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported encoding strategies for id token encryption.
#
# cas.authn.oidc.discovery.id-token-encryption-encoding-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported algorithms for id token signing.
#
# cas.authn.oidc.discovery.id-token-signing-alg-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Accepted values containing a list of the JWE encryption algorithms
# ({@code alg} values) supported by the introspection endpoint to
# encrypt the content encryption key for introspection response.
#
# cas.authn.oidc.discovery.introspection-encrypted-response-alg-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Accepted values containing a list of the JWE encryption algorithms
# ({@code enc} values) supported by the introspection endpoint to
# encrypt the introspection response.
#
# cas.authn.oidc.discovery.introspection-encrypted-response-encoding-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Accepted values containing a list of the JWS signing algorithms
# supported by the introspection endpoint to sign the response.
#
# cas.authn.oidc.discovery.introspection-signed-response-alg-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported authentication methods for introspection.
#
# cas.authn.oidc.discovery.introspection-supported-authentication-methods: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported prompt values. If CAS receives a prompt value that it does
# not support (not declared in the {@code prompt_values_supported}
# metadata field) the CAS SHOULD respond with an HTTP 400 (Bad Request)
# status code and an error value of invalid request.
#
# cas.authn.oidc.discovery.prompt-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported algorithms for request object encryption.
#
# cas.authn.oidc.discovery.request-object-encryption-alg-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported encoding strategies for request object encryption.
#
# cas.authn.oidc.discovery.request-object-encryption-encoding-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported algorithms for request object signing.
#
# cas.authn.oidc.discovery.request-object-signing-alg-values-supported: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Specifying whether this provider supports use of the {@code request}
# parameter.
#
# cas.authn.oidc.discovery.request-parameter-supported: true

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Specifying whether this provider supports use of the {@code
# request_uri} parameter.
#
# cas.authn.oidc.discovery.request-uri-parameter-supported: true

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Boolean parameter indicating whether the authorization server (CAS)
# accepts authorization request data only via the pushed authorization
# request method.
#
# cas.authn.oidc.discovery.require-pushed-authorization-requests: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported response modes.
#
# cas.authn.oidc.discovery.response-modes-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported response types. The Response Mode request parameter
# response_mode informs the Authorization Server of the mechanism to be
# used for returning Authorization Response parameters from the
# Authorization Endpoint. Each Response Type value also defines a
# default Response Mode mechanism to be used, if no Response Mode is
# specified using the request parameter.
#
# cas.authn.oidc.discovery.response-types-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of supported scopes.
#
# cas.authn.oidc.discovery.scopes: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of supported subject types.
#
# cas.authn.oidc.discovery.subject-types: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Boolean value indicating server support for mutual-TLS client
# certificate-bound access tokens.
#
# cas.authn.oidc.discovery.tls-client-certificate-bound-access-tokens: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# List of client authentication methods supported by token endpoint.
#
# cas.authn.oidc.discovery.token-endpoint-auth-methods-supported: 

# Type: java.util.Set<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Set containing all supported trust frameworks. This array must have at
# least one member.
#
# cas.authn.oidc.discovery.trust-frameworks-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported algorithms for user-info encryption.
#
# cas.authn.oidc.discovery.user-info-encryption-alg-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported encoding strategies for user-info encryption.
#
# cas.authn.oidc.discovery.user-info-encryption-encoding-values-supported: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Supported algorithms for user-info signing.
#
# cas.authn.oidc.discovery.user-info-signing-alg-values-supported: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcDiscoveryProperties
#
# Boolean value indicating support for verified_claims, i.e., the OpenID
# Connect for Identity Assurance extension.
#
# cas.authn.oidc.discovery.verified-claims-supported: true

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because dynamic-client-registration-mode is moved into the core namespace.
# Replace with: dynamic-client-registration-mode is moved into the core namespace.
#
# 
#
# cas.authn.oidc.dynamic-client-registration-mode: 

# Type: java.util.List
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because grant-types-supported setting is moved into the discovery namespace.
# Replace with: grant-types-supported setting is moved into the discovery namespace.
#
# 
#
# cas.authn.oidc.grant-types-supported: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcIdTokenProperties
#
# As per OpenID Connect Core section 5.4, "The Claims requested by the
# {@code profile}, {@code email}, {@code address}, and {@code phone}
# scope values are returned from the userinfo endpoint", except for
# {@code response_type}={@code id_token}, where they are returned in the
# id_token (as there is no access token issued that could be used to
# access the userinfo endpoint). The Claims requested by the profile,
# email, address, and phone scope values are returned from the userinfo
# endpoint when a {@code response_type} value is used that results in an
# access token being issued. However, when no access token is issued
# (which is the case for the {@code response_type} value {@code
# id_token}), the resulting Claims are returned in the ID Token. <p>
# Setting this flag to true will force CAS to include claims in the ID
# token regardless of the response type. Note that this setting
# <strong>MUST ONLY</strong> be used as a last resort, to stay compliant
# with the specification as much as possible. <strong>DO NOT</strong>
# use this setting without due consideration. <p> Note that this setting
# is set to {@code true} by default mainly provided to preserve backward
# compatibility with previous CAS versions that included claims into the
# ID token without considering the response type. The behavior of this
# setting may change and it may be removed in future CAS releases.
#
# cas.authn.oidc.id-token.include-id-token-claims: true

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcIdTokenProperties
#
# Hard timeout to kill the id token and expire it.
#
# cas.authn.oidc.id-token.max-time-to-live-in-seconds: PT8H

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.oidc.identity-assurance.verification-source.location: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because issuer is moved into the core namespace.
# Replace with: issuer is moved into the core namespace.
#
# 
#
# cas.authn.oidc.issuer: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcJwtAuthorizationResponseModeProperties
#
# Hard timeout to kill the JWT token and expire it.
#
# cas.authn.oidc.jarm.expiration: PT60S

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.OidcJsonWebKeystoreCoreProperties
#
# Timeout that indicates how long should the JWKS file be kept in cache.
#
# cas.authn.oidc.jwks.core.jwks-cache-expiration: PT60M

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.OidcJsonWebKeystoreCoreProperties
#
# The key identifier to set for the generated key in the keystore.
#
# cas.authn.oidc.jwks.core.jwks-key-id: cas

# Type: java.lang.Integer
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.OidcJsonWebKeystoreCoreProperties
#
# The key size for the generated jwks. This is an algorithm-specific
# metric, such as modulus length, specified in number of bits. <p> If
# the keystore type is {@code EC}, the key size defined here should
# switch to one of {@code 256}, {@code 384} or {@code 521}. If using
# {@code EC}, then the size should match the number of bits required.
#
# cas.authn.oidc.jwks.core.jwks-key-size: 2048

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.OidcJsonWebKeystoreCoreProperties
#
# The type of the JWKS used to handle signing/encryption of
# authentication tokens. Accepted values are {@code RSA} or {@code EC}.
#
# cas.authn.oidc.jwks.core.jwks-type: RSA

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.FileSystemOidcJsonWebKeystoreProperties
#
# Path to the JWKS file resource used to handle signing/encryption of
# authentication tokens. Contents of the keystore may be encrypted using
# the same encryption and security mechanism available for all other CAS
# configuration settings. The setting value here may also be defined in
# a raw format; that is, you may pass the actual contents of the
# keystore verbaitm to this setting and CAS would load the keystore as
# an in-memory resource. This is relevant in scenarios where the setting
# source is external to CAS and has no support for file systems where
# the value is loaded on the fly from the source into this setting. Note
# that if the keystore files does not exist at the specified path, one
# will be generated for you.
#
# cas.authn.oidc.jwks.file-system.jwks-file: file:/etc/cas/config/keystore.jwks

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.FileSystemOidcJsonWebKeystoreProperties
#
# Flag indicating whether a background watcher thread is enabled for the
# purposes of live reloading of keystore data file changes from disk.
#
# cas.authn.oidc.jwks.file-system.watcher-enabled: true

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.oidc.jwks.groovy.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.oidc.jwks.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.oidc.jwks.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.oidc.jwks.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.oidc.jwks.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.oidc.jwks.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.oidc.jwks.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.oidc.jwks.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.oidc.jwks.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.oidc.jwks.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.oidc.jwks.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.oidc.jwks.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.oidc.jwks.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.oidc.jwks.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.oidc.jwks.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.oidc.jwks.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.oidc.jwks.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.oidc.jwks.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# The database connection password.
#
# cas.authn.oidc.jwks.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.oidc.jwks.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.oidc.jwks.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.oidc.jwks.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.oidc.jwks.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.oidc.jwks.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.oidc.jwks.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.oidc.jwks.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.oidc.jwks.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.oidc.jwks.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.oidc.jwks.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.oidc.jwks.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.oidc.jwks.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# The database connection URL.
#
# cas.authn.oidc.jwks.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.JpaOidcJsonWebKeystoreProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.oidc.jwks.jpa.user: sa

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a core sub namespace.
# Replace with: This setting is moved into a core sub namespace.
#
# 
#
# cas.authn.oidc.jwks.jwks-cache-expiration: 

# Type: java.lang.Integer
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting should be defined as duration value, i.e.
# Replace with: This setting should be defined as duration value, i.e.
#
# 
#
# cas.authn.oidc.jwks.jwks-cache-in-minutes: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a file-system sub namespace.
# Replace with: This setting is moved into a file-system sub namespace.
#
# 
#
# cas.authn.oidc.jwks.jwks-file: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Name of the database to use for authentication.
#
# cas.authn.oidc.jwks.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.oidc.jwks.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.oidc.jwks.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# MongoDb database instance name.
#
# cas.authn.oidc.jwks.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.oidc.jwks.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.oidc.jwks.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# MongoDb database password for authentication.
#
# cas.authn.oidc.jwks.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.oidc.jwks.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.oidc.jwks.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.oidc.jwks.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.oidc.jwks.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.oidc.jwks.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.oidc.jwks.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# MongoDb database port.
#
# cas.authn.oidc.jwks.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.oidc.jwks.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.oidc.jwks.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.oidc.jwks.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.oidc.jwks.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.oidc.jwks.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Whether connections require SSL.
#
# cas.authn.oidc.jwks.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# MongoDb database connection timeout.
#
# cas.authn.oidc.jwks.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# MongoDb database user for authentication.
#
# cas.authn.oidc.jwks.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.MongoDbOidcJsonWebKeystoreProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.oidc.jwks.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.RestfulOidcJsonWebKeystoreProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.oidc.jwks.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.RestfulOidcJsonWebKeystoreProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.oidc.jwks.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.RestfulOidcJsonWebKeystoreProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.oidc.jwks.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.RestfulOidcJsonWebKeystoreProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.oidc.jwks.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.jwks.RestfulOidcJsonWebKeystoreProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.oidc.jwks.rest.url: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.oidc.jwks.revocation.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.oidc.jwks.revocation.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.oidc.jwks.revocation.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.oidc.jwks.revocation.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.oidc.jwks.revocation.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.oidc.jwks.revocation.schedule.start-delay: PT15S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.oidc.jwks.rotation.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.oidc.jwks.rotation.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.oidc.jwks.rotation.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.oidc.jwks.rotation.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.oidc.jwks.rotation.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.oidc.jwks.rotation.schedule.start-delay: PT15S

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcLogoutProperties
#
# Whether the back-channel logout is supported.
#
# cas.authn.oidc.logout.backchannel-logout-supported: true

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcLogoutProperties
#
# Whether the front-channel logout is supported.
#
# cas.authn.oidc.logout.frontchannel-logout-supported: true

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcPushedAuthorizationProperties
#
# Hard timeout to kill the PAR token and expire it.
#
# cas.authn.oidc.par.max-time-to-live-in-seconds: PT30S

# Type: java.lang.Long
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcPushedAuthorizationProperties
#
# Controls number of times a request can be used within CAS server.
#
# cas.authn.oidc.par.number-of-uses: 1

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcPushedAuthorizationProperties
#
# The storage object name used and created by CAS to hold PARs in the
# backing ticket registry implementation.
#
# cas.authn.oidc.par.storage-name: oidcPushedAuthzRequestsCache

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcClientRegistrationProperties
#
# When client secret is issued by CAS, this is the period that gets
# added to the current time measured in UTC to determine the client
# secret's expiration date. An example value would be {@code P14D}
# forcing client applications to expire their client secret in 2 weeks
# after the registration date. Expired client secrets can be updated
# using the client configuration endpoint. A value of {@code 0}
# indicates that client secrets would never expire.
#
# cas.authn.oidc.registration.client-secret-expiration: 0

# Type: org.apereo.cas.configuration.model.support.oidc.OidcClientRegistrationProperties$DynamicClientRegistrationModes
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcClientRegistrationProperties
#
# Whether dynamic registration operates in {@code OPEN} or {@code
# PROTECTED} mode.
# Available values are as follows:
# <ul><li>{@code
# OPEN}: Registration is open to all.
# In a situation where CAS is
# supporting open Client registration,
# it will check to see if the
# {@code logo_uri} and {@code policy_uri} have the same host
# as the
# hosts defined in the array of {@code redirect_uris}.</li><li>{@code
# PROTECTED}: registration is protected for all.</li></ul>
#
# cas.authn.oidc.registration.dynamic-client-registration-mode: PROTECTED

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcClientRegistrationProperties
#
# The password used in a basic-auth scheme to request an initial access
# token that would then be used to dynamically register clients in
# {@link DynamicClientRegistrationModes#PROTECTED} mode.
#
# cas.authn.oidc.registration.initial-access-token-password: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcClientRegistrationProperties
#
# The username used in a basic-auth scheme to request an initial access
# token that would then be used to dynamically register clients in
# {@link DynamicClientRegistrationModes#PROTECTED} mode.
#
# cas.authn.oidc.registration.initial-access-token-user: 

# Type: java.util.List
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because response-types-supported setting is moved into the discovery namespace.
# Replace with: response-types-supported setting is moved into the discovery namespace.
#
# 
#
# cas.authn.oidc.response-types-supported: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwkCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.oidc.response.crypto.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwkCryptographyProperties
#
# Whether crypto encryption operations are enabled.
#
# cas.authn.oidc.response.crypto.encryption-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwkCryptographyProperties
#
# Whether crypto signing operations are enabled.
#
# cas.authn.oidc.response.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwkCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.oidc.response.crypto.strategy-type: SIGN_AND_ENCRYPT

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because scopes settings is moved into the discovery namespace.
# Replace with: scopes settings is moved into the discovery namespace.
#
# 
#
# cas.authn.oidc.scopes: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcServicesProperties
#
# Control the default, initial values for fields that are part of a OIDC
# service definition. This is defined as a map where the key is the
# field name (i.e. {@code signIdToken}) and the value should be the
# default value. If a service definition explicitly defines a value for
# a field, that value will take over and the default defined here will
# be ignored. If a service definition does not define a value for a
# field and no defaults are specified for that field, then the default
# value that is directly assigned to the field in the body of the
# service definition will take over.
#
# cas.authn.oidc.services.defaults: 

# Type: java.util.List
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because subject-types setting is moved into the discovery namespace.
# Replace with: subject-types setting is moved into the discovery namespace.
#
# 
#
# cas.authn.oidc.subject-types: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because user-defined-scopes is moved into the core namespace.
# Replace with: user-defined-scopes is moved into the core namespace.
#
# 
#
# cas.authn.oidc.user-defined-scopes: 

# Type: java.lang.Boolean
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcWebFingerProperties
#
# Indicate if webfinger discovery protocol should be enabled.
#
# cas.authn.oidc.webfinger.enabled: true

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcWebFingerProperties.Groovy
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.oidc.webfinger.user-info.groovy.location: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcWebFingerProperties.Rest
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.oidc.webfinger.user-info.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcWebFingerProperties.Rest
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.oidc.webfinger.user-info.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcWebFingerProperties.Rest
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.oidc.webfinger.user-info.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcWebFingerProperties.Rest
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.oidc.webfinger.user-info.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-oidc
# Owner: org.apereo.cas.configuration.model.support.oidc.OidcWebFingerProperties.Rest
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.oidc.webfinger.user-info.rest.url: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# Connection timeout in milliseconds.
#
# cas.authn.okta.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase. The credential criteria may be one of the following
# options:<ul> <li>1) A regular expression pattern that is tested
# against the credential identifier.</li> <li>2) A fully qualified class
# name of your own design that implements {@code Predicate}.</li> <li>3)
# Path to an external Groovy script that implements the same
# interface.</li> </ul>
#
# cas.authn.okta.credential-criteria: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# The name of the authentication handler.
#
# cas.authn.okta.name: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.okta.order: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# Okta domain.
#
# cas.authn.okta.organization-url: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.okta.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.okta.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.okta.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.okta.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.okta.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.okta.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.okta.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.okta.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.okta.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.okta.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.okta.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.okta.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.okta.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Okta API token.
#
# cas.authn.okta.provisioning.api-token: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Map of attributes that optionally may be used to control the names of
# the attributes to Okta that form the user profile. If an attribute is
# provided by Okta, such as {@code department}, it can be listed here as
# the key of the map with a value that should be the name of that
# attribute as collected and recorded by CAS. For example, the
# convention {@code department->organization} will process the CAS
# attribute {@code organization} and will assign its value to the user
# profile under {@code department}. If no mapping is specified, the okta
# attribute itself will be used to find the CAS principal attribute
# value.
#
# cas.authn.okta.provisioning.attribute-mappings: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Okta client id used in combination with the private key.
#
# cas.authn.okta.provisioning.client-id: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Connection timeout in milliseconds.
#
# cas.authn.okta.provisioning.connection-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Whether or not provisioning should be enabled with Okta.
#
# cas.authn.okta.provisioning.enabled: false

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.okta.provisioning.order: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Okta domain.
#
# cas.authn.okta.provisioning.organization-url: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.okta.provisioning.private-key.location: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Send requests via a proxy; define the hostname.
#
# cas.authn.okta.provisioning.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Send requests via a proxy; define the proxy password.
#
# cas.authn.okta.provisioning.proxy-password: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Send requests via a proxy; define the proxy port. Negative/zero values
# should deactivate the proxy configuration for the http client.
#
# cas.authn.okta.provisioning.proxy-port: 0

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Send requests via a proxy; define the proxy username.
#
# cas.authn.okta.provisioning.proxy-username: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaPrincipalProvisioningProperties
#
# Okta allows you to interact with Okta APIs using scoped OAuth 2.0
# access tokens. Each access token enables the bearer to perform
# specific actions on specific Okta endpoints, with that ability
# controlled by which scopes the access token contains. Scopes are only
# used when using client id and private-key.
#
# cas.authn.okta.provisioning.scopes: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# Send requests via a proxy; define the hostname.
#
# cas.authn.okta.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# Send requests via a proxy; define the proxy password.
#
# cas.authn.okta.proxy-password: 

# Type: java.lang.Integer
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# Send requests via a proxy; define the proxy port. Negative/zero values
# should deactivate the proxy configuration for the http client.
#
# cas.authn.okta.proxy-port: 0

# Type: java.lang.String
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# Send requests via a proxy; define the proxy username.
#
# cas.authn.okta.proxy-username: 

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-okta-authentication
# Owner: org.apereo.cas.configuration.model.support.okta.OktaAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.okta.state: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.bitbucket.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.bitbucket.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.bitbucket.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.bitbucket.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.bitbucket.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.bitbucket.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.bitbucket.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# The client id.
#
# cas.authn.pac4j.bitbucket.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.bitbucket.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationBitBucketProperties
#
# The client secret.
#
# cas.authn.pac4j.bitbucket.secret: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationProperties
#
# Settings that deal with having CAS Servers as an external delegated-to
# authentication provider.
#
# cas.authn.pac4j.cas: 

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.cas[].auto-redirect-type: NONE

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.cas[].callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.cas[].callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.cas[].client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.cas[].css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.cas[].display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.cas[].enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# The CAS server login url.
#
# cas.authn.pac4j.cas[].login-url: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.cas[].principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.cas.Pac4jCasClientProperties
#
# CAS protocol to use.
# Acceptable values are {@code CAS10, CAS20,
# CAS20_PROXY, CAS30, CAS30_PROXY, SAML}.
#
# cas.authn.pac4j.cas[].protocol: CAS20

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.authn.pac4j.cookie.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.authn.pac4j.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# Determine whether cookie settings should be enabled to track delegated
# authentication choices and identity providers.
#
# cas.authn.pac4j.cookie.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.authn.pac4j.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.authn.pac4j.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.pac4j.cookie.name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.authn.pac4j.cookie.path: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.pac4j.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.authn.pac4j.cookie.secure: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCoreProperties
#
# Control the expiration policy of the cache that holds onto the
# results.
#
# cas.authn.pac4j.core.cache-duration: PT8H

# Type: java.lang.Long
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCoreProperties
#
# Control the size of the delegated identity provider cache that holds
# identity providers. <p> This setting specifies the maximum number of
# entries the cache may contain. Note that the cache <b>may evict an
# entry before this limit is exceeded or temporarily exceed the
# threshold while evicting</b>. As the cache size grows close to the
# maximum, the cache evicts entries that are less likely to be used
# again. For example, the cache may evict an entry because it hasn't
# been used recently or very often.
#
# cas.authn.pac4j.core.cache-size: 100

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDiscoverySelectionJsonProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pac4j.core.discovery-selection.json.location: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDiscoverySelectionJsonProperties
#
# The name of the principal attribute whose values will be compared
# against the key pattern defined in the configuration rules. If a match
# is found, then the provider configuration block will be used as the
# selected provider. The matching routine will examine all attribute
# values linked to the principal attribute to find any acceptable match.
# When this setting left undefined, then the resolved principal id for
# the given user identifier will be used to locate the provider.
#
# cas.authn.pac4j.core.discovery-selection.json.principal-attribute: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDiscoverySelectionProperties$Pac4jDelegatedAuthenticationSelectionTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDiscoverySelectionProperties
#
# Indicate how the selection and presentation of identity providers
# would be controlled.
# Available values are as follows:
#
# <ul><li>{@code MENU}: Defined identity providers will be listed
# for
# the user to select.</li><li>{@code DYNAMIC}: Defined identity
# providers are pre-built first,
# and one is chosen dynamically at
# runtime based on
# user attributes properties, domain identifier,
# etc.</li></ul>
#
# cas.authn.pac4j.core.discovery-selection.selection-type: MENU

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pac4j.core.groovy-authentication-request-customizer.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pac4j.core.groovy-provider-post-processor.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pac4j.core.groovy-redirection-strategy.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCoreProperties
#
# Whether initialization of delegated identity providers should be done
# eagerly typically during startup.
#
# cas.authn.pac4j.core.lazy-init: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCoreProperties
#
# The name of the authentication handler in CAS used for delegation.
#
# cas.authn.pac4j.core.name: 

# Type: java.lang.Integer
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCoreProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.pac4j.core.order: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCoreProperties
#
# The attribute to use as the principal identifier built during and upon
# a successful authentication attempt.
#
# cas.authn.pac4j.core.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# A regular expression pattern that indicates the set of allowed IP
# addresses, when {@link #isPinToSession()} is configured. In the event
# that there is a mismatch between the cookie IP address and the current
# request-provided IP address (i.e. network switches, VPN, etc), the
# cookie can still be considered valid if the new IP address matches the
# pattern specified here.
#
# cas.authn.pac4j.core.session-replication.cookie.allowed-ip-addresses-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.authn.pac4j.core.session-replication.cookie.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.pac4j.core.session-replication.cookie.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.pac4j.core.session-replication.cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.pac4j.core.session-replication.cookie.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.pac4j.core.session-replication.cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.pac4j.core.session-replication.cookie.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.pac4j.core.session-replication.cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.pac4j.core.session-replication.cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.authn.pac4j.core.session-replication.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# When set to {@code true} and assuming {@link #isPinToSession()} is
# also {@code true}, client sessions (using the client IP address) are
# geo-located using a geolocation service when/if configured. The
# resulting session is either pinned to the client geolocation, or the
# default client address.
#
# cas.authn.pac4j.core.session-replication.cookie.geo-locate-client-session: false

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.authn.pac4j.core.session-replication.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.authn.pac4j.core.session-replication.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.pac4j.core.session-replication.cookie.name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.authn.pac4j.core.session-replication.cookie.path: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# When generating cookie values, determine whether the value should be
# compounded and signed with the properties of the current session, such
# as IP address, user-agent, etc.
#
# cas.authn.pac4j.core.session-replication.cookie.pin-to-session: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.pac4j.core.session-replication.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.authn.pac4j.core.session-replication.cookie.secure: true

# Type: java.lang.Boolean
# Module: cas-server-core-api
# Owner: org.apereo.cas.configuration.model.support.replication.SessionReplicationProperties
#
# Indicates whether profiles and other session data, collected as part
# of authentication flows and protocol requests that are kept by the
# container session, should be replicated across the cluster using CAS
# and its own ticket registry. Without this option, profile data and
# other related pieces of information should be manually replicated via
# means and libraries outside of CAS.
#
# cas.authn.pac4j.core.session-replication.replicate-sessions: true

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationCoreProperties
#
# When constructing the final user profile from the delegated provider,
# determines if the provider id should be combined with the principal
# id.
#
# cas.authn.pac4j.core.typed-id-used: false

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.dropbox.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.dropbox.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.dropbox.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.dropbox.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.dropbox.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.dropbox.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.dropbox.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# The client id.
#
# cas.authn.pac4j.dropbox.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.dropbox.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationDropboxProperties
#
# The client secret.
#
# cas.authn.pac4j.dropbox.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.facebook.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.facebook.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.facebook.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.facebook.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.facebook.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.facebook.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.facebook.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# Custom fields to include in the request.
#
# cas.authn.pac4j.facebook.fields: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# The client id.
#
# cas.authn.pac4j.facebook.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.facebook.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# The requested scope.
#
# cas.authn.pac4j.facebook.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFacebookProperties
#
# The client secret.
#
# cas.authn.pac4j.facebook.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.foursquare.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.foursquare.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.foursquare.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.foursquare.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.foursquare.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.foursquare.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.foursquare.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# The client id.
#
# cas.authn.pac4j.foursquare.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.foursquare.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationFoursquareProperties
#
# The client secret.
#
# cas.authn.pac4j.foursquare.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.github.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.github.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.github.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.github.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.github.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.github.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.github.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# The client id.
#
# cas.authn.pac4j.github.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.github.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# The requested scope from the provider. The default scope is {@code
# user}, i.e. {@code read/write} access to the GitHub user account.
#
# cas.authn.pac4j.github.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGitHubProperties
#
# The client secret.
#
# cas.authn.pac4j.github.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.google.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.google.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.google.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.google.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.google.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.google.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.google.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# The client id.
#
# cas.authn.pac4j.google.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.google.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# The requested scope.
#
# cas.authn.pac4j.google.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGoogleProperties
#
# The client secret.
#
# cas.authn.pac4j.google.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.hi-org-server.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.hi-org-server.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.hi-org-server.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.hi-org-server.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.hi-org-server.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.hi-org-server.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.hi-org-server.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# The client id.
#
# cas.authn.pac4j.hi-org-server.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.hi-org-server.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# The requested scope.
#
# cas.authn.pac4j.hi-org-server.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationHiOrgServerProperties
#
# The client secret.
#
# cas.authn.pac4j.hi-org-server.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.linked-in.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.linked-in.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.linked-in.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.linked-in.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.linked-in.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.linked-in.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.linked-in.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# The client id.
#
# cas.authn.pac4j.linked-in.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.linked-in.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# The requested scope.
#
# cas.authn.pac4j.linked-in.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLinkedInProperties
#
# The client secret.
#
# cas.authn.pac4j.linked-in.secret: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationProperties
#
# Settings that deal with having OAuth2-capable providers as an external
# delegated-to authentication provider.
#
# cas.authn.pac4j.oauth2: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Authorization endpoint of the provider.
#
# cas.authn.pac4j.oauth2[].auth-url: 

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.oauth2[].auto-redirect-type: NONE

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.oauth2[].callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.oauth2[].callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# The client authentication method: {@code basicAuth} (default) or
# {@code requestBody}.
#
# cas.authn.pac4j.oauth2[].client-authentication-method: basicAuth

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.oauth2[].client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.oauth2[].css-class: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Custom parameters in form of key-value pairs sent along in authZ
# requests, etc.
#
# cas.authn.pac4j.oauth2[].custom-params: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.oauth2[].display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.oauth2[].enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# The client id.
#
# cas.authn.pac4j.oauth2[].id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.oauth2[].principal-id-attribute: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Profile attributes to request and collect in form of key-value
# pairs.
# Key is the attribute name, and value is the mapped attribute
# name, if necessary.
# If remapping is not required, key and value
# should match.
# It's also possible to define values as {@code
# CONVERTER|mapped-attribute}.
# {@code CONVERTER} should be the
# attribute converter specified by its acceptable type
# and when
# acceptable, the converter attempts to transform the provided attribute
# value.
# Accepted converters are {@code Locale, Integer, Color, Date,
# Gender, Boolean, Long, String, Url}.
# CAS can also provide a special
# attribute converter that does the transformation and conversion
#
# based on an <i>inline groovy script</i>. This special groovy converter
# can be specified
# using this example syntax for the value, {@code
# groovy { return attribute + '-test'}|mapped-attribute}.
#
# cas.authn.pac4j.oauth2[].profile-attrs: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Profile endpoint of the provider.
#
# cas.authn.pac4j.oauth2[].profile-url: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Http method to use when asking for profile.
#
# cas.authn.pac4j.oauth2[].profile-verb: POST

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Response type determines the authentication flow on the Authentication
# Server.
#
# cas.authn.pac4j.oauth2[].response-type: code

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# The scope requested from the identity provider.
#
# cas.authn.pac4j.oauth2[].scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# The client secret.
#
# cas.authn.pac4j.oauth2[].secret: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Token endpoint of the provider.
#
# cas.authn.pac4j.oauth2[].token-url: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.oauth.Pac4jOAuth20ClientProperties
#
# Whether a state value should be generated
# when sending
# authentication requests to the provider.
#
# cas.authn.pac4j.oauth2[].with-state: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jOidcClientProperties>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationProperties
#
# Settings that deal with having OpenID Connect Providers as an external
# delegated-to authentication provider.
#
# cas.authn.pac4j.oidc: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is renamed.
# Replace with: This setting is renamed.
#
# 
#
# cas.authn.pac4j.oidc[0].azure.principal-attribute-id: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Whether unsigned id tokens issued as plain JWTs are accepted.
#
# cas.authn.pac4j.oidc[].apple.allow-unsigned-id-tokens: 

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.oidc[].apple.auto-redirect-type: NONE

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.oidc[].apple.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.oidc[].apple.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The preferred client authentication method
# that will be chosen for
# token requests. If none is specified,
# one will be chosen somewhat
# randomly based on what the OIDC OP supports.
#
# cas.authn.pac4j.oidc[].apple.client-authentication-method: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.oidc[].apple.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Read timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].apple.connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.oidc[].apple.css-class: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Custom parameters to send along in authZ requests, etc.
#
# cas.authn.pac4j.oidc[].apple.custom-params: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Disable PKCE support for the provider.
#
# cas.authn.pac4j.oidc[].apple.disable-pkce: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The discovery endpoint to locate the provide metadata.
#
# cas.authn.pac4j.oidc[].apple.discovery-uri: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.oidc[].apple.display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.oidc[].apple.enabled: true

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Checks if sessions expire with token expiration.
#
# cas.authn.pac4j.oidc[].apple.expire-session-with-token: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The client id.
#
# cas.authn.pac4j.oidc[].apple.id: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# If enabled, try to process the access token as a JWT and include its
# claims in the profile.
# Only enable this if there is an agreement
# between the IdP and CAS about the format of
# the access token. If
# not, the token format could change at any time.
#
# cas.authn.pac4j.oidc[].apple.include-access-token-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Logout url used for this provider.
#
# cas.authn.pac4j.oidc[].apple.logout-url: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# List arbitrary mappings of claims when fetching user profiles.
# Uses
# a "directed list" where the allowed
# syntax would be {@code
# claim->attribute}.
#
# cas.authn.pac4j.oidc[].apple.mapped-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Clock skew in order to account for drift, when validating id tokens.
#
# cas.authn.pac4j.oidc[].apple.max-clock-skew: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The JWS algorithm to use forcefully when validating ID tokens.
# If
# none is defined, the first algorithm from metadata will be used.
#
# cas.authn.pac4j.oidc[].apple.preferred-jws-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.oidc[].apple.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Private key obtained from Apple.
# Must point to a resource that
# resolved to an elliptic curve (EC) private key.
#
# cas.authn.pac4j.oidc[].apple.private-key: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The identifier for the private key.
# Usually the 10 character Key ID
# of the private key you create
# in Apple.
#
# cas.authn.pac4j.oidc[].apple.private-key-id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Connect timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].apple.read-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The response mode specifies how the result of the authorization
# request is formatted.
# For backward compatibility the default value
# is empty, which means the default pac4j (empty) response mode is
# used.
# Possible values includes "query", "fragment", "form_post", or
# "web_message"
#
# cas.authn.pac4j.oidc[].apple.response-mode: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The response type tells the authorization server which grant to
# execute.
# For backward compatibility the default value is empty,
# which means the default pac4j ("code") response type is used.
#
# Possibles values includes "code", "token" or "id_token".
#
# cas.authn.pac4j.oidc[].apple.response-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Requested scope(s).
#
# cas.authn.pac4j.oidc[].apple.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# The client secret.
#
# cas.authn.pac4j.oidc[].apple.secret: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Control the list of supported client authentication methods
# that can
# be accepted and understood by this integration.
# Multiple methods may
# be specified and separated via a comma.
# Example might be {@code
# client_secret_basic,client_secret_post,client_secret_jwt}.
#
# cas.authn.pac4j.oidc[].apple.supported-client-authentication-methods: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Apple team identifier.
# Usually, 10 character string given to you by
# Apple.
#
# cas.authn.pac4j.oidc[].apple.team-id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Client secret expiration timeout.
#
# cas.authn.pac4j.oidc[].apple.timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Default time period advance (in seconds) for considering an access
# token expired.
#
# cas.authn.pac4j.oidc[].apple.token-expiration-advance: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Whether an initial nonce should be to used
# initially for replay
# attack mitigation.
#
# cas.authn.pac4j.oidc[].apple.use-nonce: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAppleOidcClientProperties
#
# Controls whether the logout token submitted as a JWT should be
# validated
# for the correct signature, etc.
#
# cas.authn.pac4j.oidc[].apple.validate-logout-token: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Whether unsigned id tokens issued as plain JWTs are accepted.
#
# cas.authn.pac4j.oidc[].azure.allow-unsigned-id-tokens: 

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.oidc[].azure.auto-redirect-type: NONE

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.oidc[].azure.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.oidc[].azure.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The preferred client authentication method
# that will be chosen for
# token requests. If none is specified,
# one will be chosen somewhat
# randomly based on what the OIDC OP supports.
#
# cas.authn.pac4j.oidc[].azure.client-authentication-method: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.oidc[].azure.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Read timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].azure.connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.oidc[].azure.css-class: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Custom parameters to send along in authZ requests, etc.
#
# cas.authn.pac4j.oidc[].azure.custom-params: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Disable PKCE support for the provider.
#
# cas.authn.pac4j.oidc[].azure.disable-pkce: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The discovery endpoint to locate the provide metadata.
#
# cas.authn.pac4j.oidc[].azure.discovery-uri: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.oidc[].azure.display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.oidc[].azure.enabled: true

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Checks if sessions expire with token expiration.
#
# cas.authn.pac4j.oidc[].azure.expire-session-with-token: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The client id.
#
# cas.authn.pac4j.oidc[].azure.id: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# If enabled, try to process the access token as a JWT and include its
# claims in the profile.
# Only enable this if there is an agreement
# between the IdP and CAS about the format of
# the access token. If
# not, the token format could change at any time.
#
# cas.authn.pac4j.oidc[].azure.include-access-token-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Logout url used for this provider.
#
# cas.authn.pac4j.oidc[].azure.logout-url: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# List arbitrary mappings of claims when fetching user profiles.
# Uses
# a "directed list" where the allowed
# syntax would be {@code
# claim->attribute}.
#
# cas.authn.pac4j.oidc[].azure.mapped-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Clock skew in order to account for drift, when validating id tokens.
#
# cas.authn.pac4j.oidc[].azure.max-clock-skew: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The JWS algorithm to use forcefully when validating ID tokens.
# If
# none is defined, the first algorithm from metadata will be used.
#
# cas.authn.pac4j.oidc[].azure.preferred-jws-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.oidc[].azure.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Connect timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].azure.read-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The response mode specifies how the result of the authorization
# request is formatted.
# For backward compatibility the default value
# is empty, which means the default pac4j (empty) response mode is
# used.
# Possible values includes "query", "fragment", "form_post", or
# "web_message"
#
# cas.authn.pac4j.oidc[].azure.response-mode: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The response type tells the authorization server which grant to
# execute.
# For backward compatibility the default value is empty,
# which means the default pac4j ("code") response type is used.
#
# Possibles values includes "code", "token" or "id_token".
#
# cas.authn.pac4j.oidc[].azure.response-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Requested scope(s).
#
# cas.authn.pac4j.oidc[].azure.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# The client secret.
#
# cas.authn.pac4j.oidc[].azure.secret: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Control the list of supported client authentication methods
# that can
# be accepted and understood by this integration.
# Multiple methods may
# be specified and separated via a comma.
# Example might be {@code
# client_secret_basic,client_secret_post,client_secret_jwt}.
#
# cas.authn.pac4j.oidc[].azure.supported-client-authentication-methods: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Azure AD tenant name.
# After tenant is configured, {@link
# #getDiscoveryUri()} property will be overridden.
# <p>
# Azure AD
# tenant name can take 4 different values:
# <ul>
# <li>{@code common}:
# Users with both a personal Microsoft account and a work or
# school
# account from Azure AD can sign in. </li>
# <li>{@code organizations}:
# Only users with work or school accounts from Azure
# AD can sign
# in.</li>
# <li>{@code consumers}: Only users with a personal Microsoft
# account can sign
# in.</li>
# <li>Specific tenant domain name or ID:
# Only user with account under that the
# specified tenant can
# login</li>
# </ul>
#
# cas.authn.pac4j.oidc[].azure.tenant: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Default time period advance (in seconds) for considering an access
# token expired.
#
# cas.authn.pac4j.oidc[].azure.token-expiration-advance: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Whether an initial nonce should be to used
# initially for replay
# attack mitigation.
#
# cas.authn.pac4j.oidc[].azure.use-nonce: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jAzureOidcClientProperties
#
# Controls whether the logout token submitted as a JWT should be
# validated
# for the correct signature, etc.
#
# cas.authn.pac4j.oidc[].azure.validate-logout-token: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Whether unsigned id tokens issued as plain JWTs are accepted.
#
# cas.authn.pac4j.oidc[].generic.allow-unsigned-id-tokens: 

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.oidc[].generic.auto-redirect-type: NONE

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.oidc[].generic.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.oidc[].generic.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The preferred client authentication method
# that will be chosen for
# token requests. If none is specified,
# one will be chosen somewhat
# randomly based on what the OIDC OP supports.
#
# cas.authn.pac4j.oidc[].generic.client-authentication-method: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.oidc[].generic.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Read timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].generic.connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.oidc[].generic.css-class: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Custom parameters to send along in authZ requests, etc.
#
# cas.authn.pac4j.oidc[].generic.custom-params: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Disable PKCE support for the provider.
#
# cas.authn.pac4j.oidc[].generic.disable-pkce: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The discovery endpoint to locate the provide metadata.
#
# cas.authn.pac4j.oidc[].generic.discovery-uri: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.oidc[].generic.display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.oidc[].generic.enabled: true

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Checks if sessions expire with token expiration.
#
# cas.authn.pac4j.oidc[].generic.expire-session-with-token: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The client id.
#
# cas.authn.pac4j.oidc[].generic.id: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# If enabled, try to process the access token as a JWT and include its
# claims in the profile.
# Only enable this if there is an agreement
# between the IdP and CAS about the format of
# the access token. If
# not, the token format could change at any time.
#
# cas.authn.pac4j.oidc[].generic.include-access-token-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Logout url used for this provider.
#
# cas.authn.pac4j.oidc[].generic.logout-url: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# List arbitrary mappings of claims when fetching user profiles.
# Uses
# a "directed list" where the allowed
# syntax would be {@code
# claim->attribute}.
#
# cas.authn.pac4j.oidc[].generic.mapped-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Clock skew in order to account for drift, when validating id tokens.
#
# cas.authn.pac4j.oidc[].generic.max-clock-skew: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The JWS algorithm to use forcefully when validating ID tokens.
# If
# none is defined, the first algorithm from metadata will be used.
#
# cas.authn.pac4j.oidc[].generic.preferred-jws-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.oidc[].generic.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Connect timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].generic.read-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The response mode specifies how the result of the authorization
# request is formatted.
# For backward compatibility the default value
# is empty, which means the default pac4j (empty) response mode is
# used.
# Possible values includes "query", "fragment", "form_post", or
# "web_message"
#
# cas.authn.pac4j.oidc[].generic.response-mode: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The response type tells the authorization server which grant to
# execute.
# For backward compatibility the default value is empty,
# which means the default pac4j ("code") response type is used.
#
# Possibles values includes "code", "token" or "id_token".
#
# cas.authn.pac4j.oidc[].generic.response-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Requested scope(s).
#
# cas.authn.pac4j.oidc[].generic.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The client secret.
#
# cas.authn.pac4j.oidc[].generic.secret: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Control the list of supported client authentication methods
# that can
# be accepted and understood by this integration.
# Multiple methods may
# be specified and separated via a comma.
# Example might be {@code
# client_secret_basic,client_secret_post,client_secret_jwt}.
#
# cas.authn.pac4j.oidc[].generic.supported-client-authentication-methods: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Default time period advance (in seconds) for considering an access
# token expired.
#
# cas.authn.pac4j.oidc[].generic.token-expiration-advance: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Whether an initial nonce should be to used
# initially for replay
# attack mitigation.
#
# cas.authn.pac4j.oidc[].generic.use-nonce: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Controls whether the logout token submitted as a JWT should be
# validated
# for the correct signature, etc.
#
# cas.authn.pac4j.oidc[].generic.validate-logout-token: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Whether unsigned id tokens issued as plain JWTs are accepted.
#
# cas.authn.pac4j.oidc[].google.allow-unsigned-id-tokens: 

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.oidc[].google.auto-redirect-type: NONE

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.oidc[].google.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.oidc[].google.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The preferred client authentication method
# that will be chosen for
# token requests. If none is specified,
# one will be chosen somewhat
# randomly based on what the OIDC OP supports.
#
# cas.authn.pac4j.oidc[].google.client-authentication-method: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.oidc[].google.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Read timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].google.connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.oidc[].google.css-class: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Custom parameters to send along in authZ requests, etc.
#
# cas.authn.pac4j.oidc[].google.custom-params: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Disable PKCE support for the provider.
#
# cas.authn.pac4j.oidc[].google.disable-pkce: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The discovery endpoint to locate the provide metadata.
#
# cas.authn.pac4j.oidc[].google.discovery-uri: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.oidc[].google.display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.oidc[].google.enabled: true

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Checks if sessions expire with token expiration.
#
# cas.authn.pac4j.oidc[].google.expire-session-with-token: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The client id.
#
# cas.authn.pac4j.oidc[].google.id: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# If enabled, try to process the access token as a JWT and include its
# claims in the profile.
# Only enable this if there is an agreement
# between the IdP and CAS about the format of
# the access token. If
# not, the token format could change at any time.
#
# cas.authn.pac4j.oidc[].google.include-access-token-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Logout url used for this provider.
#
# cas.authn.pac4j.oidc[].google.logout-url: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# List arbitrary mappings of claims when fetching user profiles.
# Uses
# a "directed list" where the allowed
# syntax would be {@code
# claim->attribute}.
#
# cas.authn.pac4j.oidc[].google.mapped-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Clock skew in order to account for drift, when validating id tokens.
#
# cas.authn.pac4j.oidc[].google.max-clock-skew: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The JWS algorithm to use forcefully when validating ID tokens.
# If
# none is defined, the first algorithm from metadata will be used.
#
# cas.authn.pac4j.oidc[].google.preferred-jws-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.oidc[].google.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Connect timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].google.read-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The response mode specifies how the result of the authorization
# request is formatted.
# For backward compatibility the default value
# is empty, which means the default pac4j (empty) response mode is
# used.
# Possible values includes "query", "fragment", "form_post", or
# "web_message"
#
# cas.authn.pac4j.oidc[].google.response-mode: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The response type tells the authorization server which grant to
# execute.
# For backward compatibility the default value is empty,
# which means the default pac4j ("code") response type is used.
#
# Possibles values includes "code", "token" or "id_token".
#
# cas.authn.pac4j.oidc[].google.response-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Requested scope(s).
#
# cas.authn.pac4j.oidc[].google.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# The client secret.
#
# cas.authn.pac4j.oidc[].google.secret: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Control the list of supported client authentication methods
# that can
# be accepted and understood by this integration.
# Multiple methods may
# be specified and separated via a comma.
# Example might be {@code
# client_secret_basic,client_secret_post,client_secret_jwt}.
#
# cas.authn.pac4j.oidc[].google.supported-client-authentication-methods: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Default time period advance (in seconds) for considering an access
# token expired.
#
# cas.authn.pac4j.oidc[].google.token-expiration-advance: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Whether an initial nonce should be to used
# initially for replay
# attack mitigation.
#
# cas.authn.pac4j.oidc[].google.use-nonce: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.BasePac4jOidcClientProperties
#
# Controls whether the logout token submitted as a JWT should be
# validated
# for the correct signature, etc.
#
# cas.authn.pac4j.oidc[].google.validate-logout-token: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Whether unsigned id tokens issued as plain JWTs are accepted.
#
# cas.authn.pac4j.oidc[].keycloak.allow-unsigned-id-tokens: 

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.oidc[].keycloak.auto-redirect-type: NONE

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Keycloak base URL used to construct metadata discovery URI.
#
# cas.authn.pac4j.oidc[].keycloak.base-uri: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.oidc[].keycloak.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.oidc[].keycloak.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The preferred client authentication method
# that will be chosen for
# token requests. If none is specified,
# one will be chosen somewhat
# randomly based on what the OIDC OP supports.
#
# cas.authn.pac4j.oidc[].keycloak.client-authentication-method: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.oidc[].keycloak.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Read timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].keycloak.connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.oidc[].keycloak.css-class: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Custom parameters to send along in authZ requests, etc.
#
# cas.authn.pac4j.oidc[].keycloak.custom-params: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Disable PKCE support for the provider.
#
# cas.authn.pac4j.oidc[].keycloak.disable-pkce: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The discovery endpoint to locate the provide metadata.
#
# cas.authn.pac4j.oidc[].keycloak.discovery-uri: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.oidc[].keycloak.display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.oidc[].keycloak.enabled: true

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Checks if sessions expire with token expiration.
#
# cas.authn.pac4j.oidc[].keycloak.expire-session-with-token: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The client id.
#
# cas.authn.pac4j.oidc[].keycloak.id: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# If enabled, try to process the access token as a JWT and include its
# claims in the profile.
# Only enable this if there is an agreement
# between the IdP and CAS about the format of
# the access token. If
# not, the token format could change at any time.
#
# cas.authn.pac4j.oidc[].keycloak.include-access-token-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Logout url used for this provider.
#
# cas.authn.pac4j.oidc[].keycloak.logout-url: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# List arbitrary mappings of claims when fetching user profiles.
# Uses
# a "directed list" where the allowed
# syntax would be {@code
# claim->attribute}.
#
# cas.authn.pac4j.oidc[].keycloak.mapped-claims: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Clock skew in order to account for drift, when validating id tokens.
#
# cas.authn.pac4j.oidc[].keycloak.max-clock-skew: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The JWS algorithm to use forcefully when validating ID tokens.
# If
# none is defined, the first algorithm from metadata will be used.
#
# cas.authn.pac4j.oidc[].keycloak.preferred-jws-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.oidc[].keycloak.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Connect timeout of the OIDC client.
#
# cas.authn.pac4j.oidc[].keycloak.read-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Keycloak realm used to construct metadata discovery URI.
#
# cas.authn.pac4j.oidc[].keycloak.realm: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The response mode specifies how the result of the authorization
# request is formatted.
# For backward compatibility the default value
# is empty, which means the default pac4j (empty) response mode is
# used.
# Possible values includes "query", "fragment", "form_post", or
# "web_message"
#
# cas.authn.pac4j.oidc[].keycloak.response-mode: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The response type tells the authorization server which grant to
# execute.
# For backward compatibility the default value is empty,
# which means the default pac4j ("code") response type is used.
#
# Possibles values includes "code", "token" or "id_token".
#
# cas.authn.pac4j.oidc[].keycloak.response-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Requested scope(s).
#
# cas.authn.pac4j.oidc[].keycloak.scope: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# The client secret.
#
# cas.authn.pac4j.oidc[].keycloak.secret: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Control the list of supported client authentication methods
# that can
# be accepted and understood by this integration.
# Multiple methods may
# be specified and separated via a comma.
# Example might be {@code
# client_secret_basic,client_secret_post,client_secret_jwt}.
#
# cas.authn.pac4j.oidc[].keycloak.supported-client-authentication-methods: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Default time period advance (in seconds) for considering an access
# token expired.
#
# cas.authn.pac4j.oidc[].keycloak.token-expiration-advance: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Whether an initial nonce should be to used
# initially for replay
# attack mitigation.
#
# cas.authn.pac4j.oidc[].keycloak.use-nonce: 

# Type: boolean
# Module: cas-server-support-pac4j-oidc
# Owner: org.apereo.cas.configuration.model.support.pac4j.oidc.Pac4jKeyCloakOidcClientProperties
#
# Controls whether the logout token submitted as a JWT should be
# validated
# for the correct signature, etc.
#
# cas.authn.pac4j.oidc[].keycloak.validate-logout-token: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.paypal.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.paypal.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.paypal.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.paypal.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.paypal.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.paypal.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.paypal.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# The client id.
#
# cas.authn.pac4j.paypal.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.paypal.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationPayPalProperties
#
# The client secret.
#
# cas.authn.pac4j.paypal.secret: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pac4j.profile-selection.groovy.location: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationProfileSelectionProperties
#
# Connect to LDAP servers to locate candidate profiles for delegated
# authn.
#
# cas.authn.pac4j.profile-selection.ldap: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.authn.pac4j.profile-selection.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.pac4j.profile-selection.ldap[].allow-multiple-entries: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# List of attributes that should be retrieved from LDAP
# for this
# profile.
#
# cas.authn.pac4j.profile-selection.ldap[].attributes: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Base DN to use.
# There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating
# the LDAP configuration block for each individual
# base-dn, each entry can be specified
# and joined together using a
# special delimiter character. The user DN is retrieved using the
# combination of all base-dn and DN
# resolvers in the order defined. DN
# resolution should fail if multiple DNs are found. Otherwise the first
# DN found is returned.
# Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.pac4j.profile-selection.ldap[].base-dn: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.authn.pac4j.profile-selection.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.pac4j.profile-selection.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.authn.pac4j.profile-selection.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.authn.pac4j.profile-selection.ldap[].block-wait-time: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.pac4j.profile-selection.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.authn.pac4j.profile-selection.ldap[].connection-strategy: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.pac4j.profile-selection.ldap[].disable-pooling: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.authn.pac4j.profile-selection.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Set if search referrals should be followed.
#
# cas.authn.pac4j.profile-selection.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.pac4j.profile-selection.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.pac4j.profile-selection.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.authn.pac4j.profile-selection.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Keystore password.
#
# cas.authn.pac4j.profile-selection.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.pac4j.profile-selection.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.pac4j.profile-selection.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.pac4j.profile-selection.ldap[].max-pool-size: 

# Type: int
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.authn.pac4j.profile-selection.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Name of the LDAP handler.
#
# cas.authn.pac4j.profile-selection.ldap[].name: 

# Type: int
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Request that the server return results in batches of a
# specific
# size. See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>.
# This control is often
# used to work around server result size
# limits.
# A negative/zero value disables paged requests.
#
# cas.authn.pac4j.profile-selection.ldap[].page-size: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.authn.pac4j.profile-selection.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# User attribute from LDAP that determines the identifier
# of the
# linked profile.
#
# cas.authn.pac4j.profile-selection.ldap[].profile-id-attribute: uid

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.authn.pac4j.profile-selection.ldap[].prune-period: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Duration of time to wait for responses.
#
# cas.authn.pac4j.profile-selection.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# SASL authorization id.
#
# cas.authn.pac4j.profile-selection.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The SASL mechanism.
#
# cas.authn.pac4j.profile-selection.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.pac4j.profile-selection.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# SASL quality of protected.
#
# cas.authn.pac4j.profile-selection.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The SASL realm.
#
# cas.authn.pac4j.profile-selection.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# SASL security strength.
#
# cas.authn.pac4j.profile-selection.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.pac4j.profile-selection.ldap[].search-entry-handlers.type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# User filter to use for searching.
# Syntax is {@code cn={user}} or
# {@code cn={0}}.
# <p>
# You may also provide an external groovy
# script
# in the syntax of {@code file:/path/to/GroovyScript.groovy}
#
# to fully build the final filter template dynamically.
#
# cas.authn.pac4j.profile-selection.ldap[].search-filter: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.pac4j.profile-selection.ldap[].subtree-search: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.authn.pac4j.profile-selection.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.authn.pac4j.profile-selection.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.pac4j.profile-selection.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Password needed to open the truststore.
#
# cas.authn.pac4j.profile-selection.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.pac4j.profile-selection.ldap[].trust-store-type: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.pac4j.profile-selection.ldap[].use-start-tls: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.pac4j.profile-selection.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Period at which pool should be validated.
#
# cas.authn.pac4j.profile-selection.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.pac4j.profile-selection.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationLdapProfileSelectionProperties
#
# Period at which validation operations may time out.
#
# cas.authn.pac4j.profile-selection.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.pac4j.profile-selection.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.pac4j.profile-selection.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.pac4j.profile-selection.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.pac4j.profile-selection.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.pac4j.profile-selection.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.pac4j.profile-selection.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.authn.pac4j.profile-selection.ldap[].validator.type: search

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationGroovyProvisioningProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pac4j.provisioning.groovy.location: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProvisioningProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.pac4j.provisioning.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProvisioningProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.pac4j.provisioning.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProvisioningProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.pac4j.provisioning.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProvisioningProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.pac4j.provisioning.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProvisioningProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.pac4j.provisioning.rest.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-scim
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationScimProvisioningProperties
#
# Whether provisioning to SCIM targets should be enabled for delegated
# authentication attempts.
#
# cas.authn.pac4j.provisioning.scim.enabled: false

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.pac4j.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.pac4j.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.pac4j.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.pac4j.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProperties
#
# Specify the format of the payload that would be produced by the REST
# API. Accepted values are: <ul> <li>{@code pac4j}: The output must
# confirm to the syntax controlled by pac4j's {@code
# PropertiesConfigFactory}</li> <li>{@code cas}: The output must should
# contain properties that allow CAS to build delegated identity
# providers.</li> </ul>
#
# cas.authn.pac4j.rest.type: pac4j

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationRestfulProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.pac4j.rest.url: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties>
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationProperties
#
# Settings that deal with having SAML2 IdPs as an external delegated-to
# authentication provider.
#
# cas.authn.pac4j.saml: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a metadata namespace.
# Replace with: This setting is moved into a metadata namespace.
#
# 
#
# cas.authn.pac4j.saml[0].identity-provider-metadata-path: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a metadata namespace.
# Replace with: This setting is moved into a metadata namespace.
#
# 
#
# cas.authn.pac4j.saml[0].service-provider-metadata-path: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because It is a duplication of cas.authn.pac4j.saml[0].sign-service-provider-logout-request.
# Replace with: It is a duplication of cas.authn.pac4j.saml[0].sign-service-provider-logout-request.
#
# 
#
# cas.authn.pac4j.saml[0].single-logout-requests: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Maximum skew in seconds between SP and IDP clocks.
# This skew is
# added onto the {@code NotOnOrAfter} field in seconds
# for the SAML
# response validation.
#
# cas.authn.pac4j.saml[].accepted-skew: PT300S

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether the signature validation should be disabled.
# Never set this
# property to {@code true} in production.
#
# cas.authn.pac4j.saml[].all-signature-validation-disabled: 

# Type: int
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Allows the SAML client to select a specific ACS url from the metadata,
# if defined.
# A negative value de-activates the selection process and
# is the default.
#
# cas.authn.pac4j.saml[].assertion-consumer-service-index: -1

# Type: int
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# AttributeConsumingServiceIndex attribute of AuthnRequest element.
#
# The given index points out a specific AttributeConsumingService
# structure, declared into the
# Service Provider (SP)'s metadata, to be
# used to specify all the attributes that the Service Provider
# is
# asking to be released within the authentication assertion returned by
# the Identity Provider (IdP).
# This attribute won't be sent with the
# request unless a positive value (including 0) is defined.
#
# cas.authn.pac4j.saml[].attribute-consuming-service-index: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Requested authentication context class in authn requests.
#
# cas.authn.pac4j.saml[].authn-context-class-ref: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Specifies the comparison rule that should be used to evaluate the
# specified authentication methods.
# For example, if exact is
# specified, the authentication method used must match one of the
# authentication
# methods specified by the AuthnContextClassRef
# elements.
# AuthContextClassRef element require comparison rule to be
# used to evaluate the specified
# authentication methods. If not
# explicitly specified "exact" rule will be used by default.
# Other
# acceptable values are minimum, maximum, better.
#
# cas.authn.pac4j.saml[].authn-context-comparison-type: exact

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.saml[].auto-redirect-type: NONE

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Collection of signing signature blocked algorithms, if any, to
# override the global defaults.
#
# cas.authn.pac4j.saml[].blocked-signature-signing-algorithms: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Callback URL to use to return the flow
# back to the CAS server one
# the identity
# provider is successfully done. This may be
# used at
# the discretion of the client and its type
# to build service
# parameters, redirect URIs, etc.
# If none is specified, the CAS
# server's login endpoint
# will be used as the basis of the final
# callback url.
#
# cas.authn.pac4j.saml[].callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties.CallbackUrlTypes
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Determine how the callback url should be resolved.
# Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.saml[].callback-url-type: QUERY_PARAMETER

# Type: int
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Define the validity period for the certificate
# in number of days.
# The end-date of the certificate
# is controlled by this setting, when
# defined as a value
# greater than zero.
#
# cas.authn.pac4j.saml[].certificate-expiration-days: 7300

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# A name to append to signing certificates generated.
# The named part
# appended can be useful to identify for which clientName it was
# generated
# If no name is provided the default certificate name will
# be used.
#
# cas.authn.pac4j.saml[].certificate-name-to-append: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Certificate signature algorithm to use
# when generating the
# certificate.
#
# cas.authn.pac4j.saml[].certificate-signature-alg: SHA1WithRSA

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Name of the client mostly for UI purposes and uniqueness.
# This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-")
# is added to the "class" attribute of the
# redirect link on the login page, to allow for
# custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.saml[].client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.saml[].css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The destination binding to use
# when creating authentication
# requests.
#
# cas.authn.pac4j.saml[].destination-binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Indicate the title or display name of the client
# for decoration and
# client presentation purposes.
# If left blank, the client original
# name would be used by default.
#
# cas.authn.pac4j.saml[].display-name: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether the client/external identity provider should be considered
#
# active and enabled for integration purposes.
#
# cas.authn.pac4j.saml[].enabled: true

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether authentication requests should be tagged as forced auth.
#
# cas.authn.pac4j.saml[].force-auth: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Force generation of the keystore.
#
# cas.authn.pac4j.saml[].force-keystore-generation: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The password to use when generating the SP/CAS keystore.
#
# cas.authn.pac4j.saml[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Location of the keystore to use and generate the SP/CAS keystore.
#
# cas.authn.pac4j.saml[].keystore-path: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The destination binding to use
# when creating logout requests.
#
# cas.authn.pac4j.saml[].logout-request-binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Control the logout response binding type during logout operations as
# invoked
# by an external IdP and in response to logout requests.
#
# cas.authn.pac4j.saml[].logout-response-binding-type: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Describes the map of attributes that are to be fetched from the
# credential (map keys)
# and then transformed/renamed using map values
# before they are put into a profile.
# An example might be to fetch
# {@code givenName} from credential and rename it to {@code
# urn:oid:2.5.4.42} or vice versa.
# Note that this setting only applies
# to attribute names, and not friendly-names.
# List arbitrary mappings
# of claims. Uses a "directed list" where the allowed
# syntax would be
# {@code givenName->urn:oid:2.5.4.42}.
#
# cas.authn.pac4j.saml[].mapped-attributes: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Once you have an authenticated session on the identity provider,
# usually it won't prompt you again to enter your
# credentials and it
# will automatically generate a new assertion for you. By default, the
# SAML client
# will accept assertions based on a previous
# authentication for one hour.
# You can adjust this behavior by
# modifying this setting. The unit of time here is seconds.
#
# cas.authn.pac4j.saml[].maximum-authentication-lifetime: PT3600S

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Factory implementing this interface provides services for storing and
# retrieval of SAML messages for
# e.g. verification of retrieved
# responses. The default factory is an always empty store.
# You may
# choose {@code org.pac4j.saml.store.HttpSessionStore} instead which
# allows
# SAML messages to be stored in a distributed session store
#
# specially required for high availability deployments and validation
# operations.
# <p>
# Available options are:
# 
# <ul>
#     <li>{@code
# EMPTY}: Uses the {@code EmptyStoreFactory}</li>
#     <li>{@code
# SESSION}: Uses the {@code HttpSessionStore} </li>
#    
# <li>Fully-qualified class name of the message store
# implementation.</li>
# </ul>
# <p>
# Also note that the message store
# implementation can be supplied and configured at runtime as
# a Spring
# {@code @Bean} with the type {@code SAMLMessageStoreFactory} which, if
# found in the available
# application context, will override all other
# options.
#
# cas.authn.pac4j.saml[].message-store-factory: org.pac4j.saml.store.EmptyStoreFactory

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientMetadataProperties
#
# The metadata location of the identity provider that is to handle
# authentications.
# The location can be specified as a direct absolute
# path to the metadata file
# or it may also be a URL to the identity
# provider's metadata endpoint.
#
# cas.authn.pac4j.saml[].metadata.identity-provider-metadata-path: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Client execution timeout.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.client-execution-timeout: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Connection timeout.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.connection-timeout: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# AWS custom endpoint.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Local address.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.local-address: 

# Type: int
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Maximum connections setting.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.max-connections: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Profile name to use.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Profile path.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# AWS region used.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.region: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Outline the requested retry mode.
# Accepted values are {@code
# STANDARD, LEGACY}.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.retry-mode: 

# Type: java.lang.String
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Socket timeout.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.socket-timeout: 

# Type: boolean
# Module: cas-server-support-aws
# Owner: org.apereo.cas.configuration.model.support.aws.BaseAmazonWebServicesProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.pac4j.saml[].metadata.service-provider.amazon-s3.use-reaper: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataFileSystemProperties
#
# Location of the SP metadata to use and generate
# on the file system.
# If the metadata file already exists,
# it will be ignored and
# reused.
# Location of the SP metadata to use and generate
# on the
# file system. If the metadata file already exists,
# it will be ignored
# and reused.
#
# cas.authn.pac4j.saml[].metadata.service-provider.file-system.location: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The default auto-commit behavior of connections in the pool.
#
# Determined whether queries such as update/insert should be immediately
# executed
# without waiting for an underlying transaction.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.autocommit: 

# Type: int
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.batch-size: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Indicates the maximum number of milliseconds that the service
# can
# wait to obtain a connection.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.connection-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified.
# Will attempt to locate the data source object as is.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema.
# By default, creates and drops the schema automatically when
# a session is starts and ends.
# Setting the value to {@code validate}
# or {@code none} may be more desirable for production,
# but any of the
# following options can be used:
# <ul>
#     <li>{@code validate}:
# Validate the schema, but make no changes to the database.</li>
#    
# <li>{@code update}: Update the schema.</li>
#     <li>{@code create}:
# Create the schema, destroying previous data.</li>
#     <li>{@code
# create-drop}: Drop the schema at the end of the session.</li>
#    
# <li>{@code none}: Do nothing.</li>
# </ul>
# <p>
# Note that during a
# version migration where any schema has changed {@code create-drop}
# will result
# in the loss of all data as soon as CAS is started. For
# transient data like tickets this is probably
# not an issue, but in
# cases like the audit table important data could be lost. Using
# `update`, while safe
# for data, is confirmed to result in invalid
# database state. {@code validate} or {@code none} settings
# are likely
# the only safe options for production use.
# </p>
# For more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.ddl-auto: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc)
# which allows such
# software to translate its generic SQL statements into vendor specific
# DDL, DML.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.dialect: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.driver-class: 

# Type: long
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Set the pool initialization failure timeout.
# <ul>
# <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization.
# The calling thread will be blocked from continuing
# until a successful connection
# to the database, or until the timeout
# is reached.  If the timeout is reached, then
# a {@code
# PoolInitializationException} will be thrown. </li>
# <li>A value of
# zero will <i>not</i>  prevent the pool from starting in the
# case
# that a connection cannot be obtained. However, upon start the pool
# will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery}
# and {@code connectionInitSql} are valid.  If
# those validations fail, an exception
# will be thrown.  If a
# connection cannot be obtained, the validation is skipped
# and the the
# pool will start and continue to try to obtain connections in the
#
# background. This can mean that callers to {@code
# DataSource#getConnection()} may
# encounter exceptions. </li>
# <li>A
# value less than zero will <i>not</i> bypass any connection attempt
# and
# validation during startup, and therefore the pool will start
# immediately.  The
# pool will continue to try to obtain connections in
# the background. This can mean
# that callers to {@code
# DataSource#getConnection()} may encounter exceptions. </li>
# </ul>
#
# Note that if this timeout value is greater than or equal to zero (0),
# and therefore an
# initial connection validation is performed, this
# timeout does not override the
# {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this
# timeout is
# applied.  The default value is one millisecond.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.fail-fast-timeout: 

# Type: int
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.fetch-size: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.generate-statistics: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The SQL query to be executed to test the validity of connections.
#
# This is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.idle-timeout: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test,
# in their own
# transaction.
# <p>
# Since these are typically read-only queries, it
# is rarely necessary to encapsulate them in their own transaction.
#
# This property only applies if {@link #autocommit} is disabled.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.isolate-internal-queries: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Defines the isolation level for transactions.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.isolation-level-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message
# is logged indicating a possible connection leak.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.leak-threshold: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The database connection password.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.physical-naming-strategy-class-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection
# will never be tested by the keepalive
# thread, only when it is idle will it be tested.
# Default is zero,
# which disables this feature.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.keep-alive-time: 0

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep
# in the pool,
# including both idle and in-use connections.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait
#
# while attempting to connect to a database.
# <p>
# A value of zero
# specifies that the timeout is the default system timeout
# if there is
# one; otherwise, it specifies that there is no timeout.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection
# reaches this timeout, even if recently
# used,
# it will be retired from the pool. An in-use connection will
# never be retired, only when it is idle will it be removed.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.maximum-lifetime: PT10M

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed
# to reach,
# including both idle and in-use connections.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for
# the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.name: 

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed.
# <p>
# There is a
# performance impact when pool suspension is enabled.
# Unless you need
# it (for a redundancy system for example) do not enable it.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.suspension: 

# Type: long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the
# pool will wait for a
# connection to be validated as alive.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Defines the propagation behavior for transactions.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.propagation-behavior-name: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.properties: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.read-only: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The table name in the database that holds the SAML2 service provider
# metadata.
# The table structure and columns must be created and exist
# beforehand, and must
# match the following SQL statements, with
# expected
# adjustments depending on database type, driver and
# dialect:
# <p>
# {@code CREATE TABLE sp_metadata (entityId
# VARCHAR(512), metadata TEXT)}
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.table-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The database connection URL.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.url: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderMetadataJdbcProperties
#
# The database user.
# <p>
# The database user must have sufficient
# permissions to be able to handle
# schema changes and updates, when
# needed.
#
# cas.authn.pac4j.saml[].metadata.service-provider.jdbc.user: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Name of the database to use for authentication.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# The connection uri to the mongodb instance.
# This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}.
# If not
# specified, will fallback onto other individual settings.
# If
# specified, takes over all other settings where applicable.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# MongoDb database instance name.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.database-name: 

# Type: boolean
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.drop-collection: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# MongoDb database host for authentication.
# Multiple host addresses
# may be defined, separated by comma.
# If more than one host is
# defined, it is assumed that each host contains the port as well, if
# any.
# Otherwise the configuration may fallback onto the port defined.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.host: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# MongoDb database password for authentication.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection.  A zero value indicates
# no limit
# to the idle time.  A pooled connection that has
# exceeded
# its idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for.  A zero value
# indicates no limit
# to the life time.  A pooled connection that
# has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.pool.life-time: PT60S

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.pool.max-wait-time: PT60S

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.pool.min-size: 1

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.pool.per-host: 10

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# MongoDb database port.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.port: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Read concern. Accepted values are:
# <ul>
#     <li>{@code
# LOCAL}</li>
#     <li>{@code MAJORITY}</li>
#     <li>{@code
# LINEARIZABLE}</li>
#     <li>{@code SNAPSHOT}</li>
#     <li>{@code
# AVAILABLE}</li>
# </ul>
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.read-concern: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Read preference. Accepted values are:
# <ul>
#     <li>{@code
# PRIMARY}</li>
#     <li>{@code SECONDARY}</li>
#     <li>{@code
# SECONDARY_PREFERRED}</li>
#     <li>{@code PRIMARY_PREFERRED}</li>
#  
# <li>{@code NEAREST}</li>
# </ul>
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.read-preference: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain
# the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.replica-set: 

# Type: boolean
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.retry-writes: 

# Type: boolean
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.socket-keep-alive: 

# Type: boolean
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Whether connections require SSL.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.ssl-enabled: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# MongoDb database connection timeout.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.timeout: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# MongoDb database user for authentication.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.SingleCollectionMongoDbProperties
#
# Write concern describes the level of acknowledgement requested from
#
# MongoDB for write operations to a standalone
# mongo db or to replica
# sets or to sharded clusters. In sharded clusters,
# mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.pac4j.saml[].metadata.service-provider.mongo.write-concern: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The attribute name that should be used and extracted from the SAML2
#
# response to identify and build a NameID value, when the response
# is
# processed and consumed.
#
# cas.authn.pac4j.saml[].name-id-attribute: 

# Type: TriStateBoolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Flag to indicate whether the allow-create flags
# for nameid policies
# should be set to true, false or ignored/defined.
# Available values
# are as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.pac4j.saml[].name-id-policy-allow-create: TRUE

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# NameID policy to request in the authentication requests.
#
# cas.authn.pac4j.saml[].name-id-policy-format: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Logouts are only successful if the IdP was able to inform all
# services, otherwise it will
# respond with {@code PartialLogout}. This
# setting allows clients such as CAS to ignore such server-side
# behavior.
# If the IdP reports back a partial logout, this setting
# instructs CAS whether it should accept or deny that response.
#
# cas.authn.pac4j.saml[].partial-logout-as-success: true

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether authentication requests should be tagged as passive.
#
# cas.authn.pac4j.saml[].passive: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The attribute found in the identity provider response
# that may be
# used to establish the authenticated
# user and build a profile for
# CAS.
#
# cas.authn.pac4j.saml[].principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The password to use when generating the private key for the SP/CAS
# keystore.
#
# cas.authn.pac4j.saml[].private-key-password: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Provider name set for the saml authentication request.
# Sets the
# human-readable name of the requester for use by
# the presenter's user
# agent or the identity provider.
#
# cas.authn.pac4j.saml[].provider-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# When generating SAML2 metadata, configure and set the request
# initiator location attribute.
#
# cas.authn.pac4j.saml[].request-initiator-url: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderRequestedAttribute
#
# Attribute friendly name.
#
# cas.authn.pac4j.saml[].requested-attributes.friendly-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderRequestedAttribute
#
# Attribute name.
#
# cas.authn.pac4j.saml[].requested-attributes.name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderRequestedAttribute
#
# Attribute name format.
#
# cas.authn.pac4j.saml[].requested-attributes.name-format: urn:oasis:names:tc:SAML:2.0:attrname-format:uri

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlServiceProviderRequestedAttribute
#
# Whether this attribute is required and should
# be marked so in the
# metadata.
#
# cas.authn.pac4j.saml[].requested-attributes.required: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The SAML2 response binding type to use when generating metadata.
#
# This ultimately controls the binding type of the assertion consumer
#
# service in the metadata.
# Default value is typically {@code
# urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST}.
#
# cas.authn.pac4j.saml[].response-binding-type: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# When validating the response, ensure it has a value set for the {@code
# Destination} attribute.
#
# cas.authn.pac4j.saml[].response-destination-mandatory: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Controls the way SAML2 attributes are converted from the
# authentication response into pac4j attributes.
# By default, values of
# complex types are serialized into a single attribute. To change this
# behaviour, a
# converter class implementing the {@code
#
# AttributeConverter
# } interface.
#
# cas.authn.pac4j.saml[].saml2-attribute-converter: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The entity id of the SP/CAS that is used in the SP metadata generation
# process.
#
# cas.authn.pac4j.saml[].service-provider-entity-id: https://apereo.org/cas/samlsp

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether or not the authnRequest should be signed.
#
# cas.authn.pac4j.saml[].sign-authn-request: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether or not the Logout Request sent from the SP should be signed.
#
# cas.authn.pac4j.saml[].sign-service-provider-logout-request: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether or not SAML SP metadata should be signed when generated.
#
# cas.authn.pac4j.saml[].sign-service-provider-metadata: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Collection of signing signature algorithms, if any, to override the
# global defaults.
#
# cas.authn.pac4j.saml[].signature-algorithms: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# The signing signature canonicalization algorithm, if any, to override
# the global defaults.
#
# cas.authn.pac4j.saml[].signature-canonicalization-algorithm: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Collection of signing signature reference digest methods, if any, to
# override the global defaults.
#
# cas.authn.pac4j.saml[].signature-reference-digest-methods: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# When generating SAML2 metadata, configure and set the single logout
# service URL attribute.
#
# cas.authn.pac4j.saml[].single-logout-service-url: 

# Type: java.util.List<String>
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# When generating SAML2 metadata, configure and set the list of
# supported protocols in the metadata.
#
# cas.authn.pac4j.saml[].supported-protocols: urn:oasis:names:tc:SAML:2.0:protocol

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether name qualifiers should be produced
# in the final saml
# response.
#
# cas.authn.pac4j.saml[].use-name-qualifier: true

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether metadata should be marked to request sign assertions.
#
# cas.authn.pac4j.saml[].wants-assertions-signed: 

# Type: boolean
# Module: cas-server-support-pac4j-saml
# Owner: org.apereo.cas.configuration.model.support.pac4j.saml.Pac4jSamlClientProperties
#
# Whether a response has to be mandatory signed.
#
# cas.authn.pac4j.saml[].wants-responses-signed: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.twitter.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.twitter.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.twitter.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.twitter.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.twitter.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.twitter.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.twitter.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# The client id.
#
# cas.authn.pac4j.twitter.id: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# Set to true to request the user's email address from the Twitter API.
# For this to have an effect it must first be enabled in the Twitter
# developer console.
#
# cas.authn.pac4j.twitter.include-email: false

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.twitter.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationTwitterProperties
#
# The client secret.
#
# cas.authn.pac4j.twitter.secret: 

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.authn.pac4j.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.authn.pac4j.webflow.order: 0

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.windows-live.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.windows-live.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.windows-live.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.windows-live.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.windows-live.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.windows-live.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.windows-live.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# The client id.
#
# cas.authn.pac4j.windows-live.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.windows-live.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWindowsLiveProperties
#
# The client secret.
#
# cas.authn.pac4j.windows-live.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.wordpress.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.wordpress.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.wordpress.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.wordpress.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.wordpress.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.wordpress.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.wordpress.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# The client id.
#
# cas.authn.pac4j.wordpress.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.wordpress.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationWordpressProperties
#
# The client secret.
#
# cas.authn.pac4j.wordpress.secret: 

# Type: org.apereo.cas.configuration.model.support.delegation.DelegationAutoRedirectTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# Auto-redirect to this client.
# Available values are as follows:
#
# <ul><li>{@code SERVER}: Redirect on the server side, typically making
# CAS invisible.</li><li>{@code CLIENT}: Redirect on the client side
# using browser redirects, etc.</li><li>{@code NONE}: Do nothing and let
# the selection take place manually.</li></ul>
#
# cas.authn.pac4j.yahoo.auto-redirect-type: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# Callback URL to use to return the flow back to the CAS server one the
# identity provider is successfully done. This may be used at the
# discretion of the client and its type to build service parameters,
# redirect URIs, etc. If none is specified, the CAS server's login
# endpoint will be used as the basis of the final callback url.
#
# cas.authn.pac4j.yahoo.callback-url: 

# Type: org.apereo.cas.configuration.model.support.pac4j.Pac4jBaseClientProperties$CallbackUrlTypes
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# Determine how the callback url should be resolved. Default is {@link
# CallbackUrlTypes#QUERY_PARAMETER}.
# Available values are as
# follows:
# <ul><li>{@code PATH_PARAMETER}: Path parameter callback
# url.
# The client name is added to the path of the callback
# URL.</li><li>{@code QUERY_PARAMETER}: Query parameter callback url.
#
# The client name is added to the path of a query
# parameter.</li><li>{@code NONE}: No callback url.
# No name is added
# to the callback URL to be able to distinguish the client.</li></ul>
#
# cas.authn.pac4j.yahoo.callback-url-type: QUERY_PARAMETER

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# Name of the client mostly for UI purposes and uniqueness. This name,
# with 'non-word' characters converted to '-' (e.g. "This Org (New)"
# becomes "This-Org--New-") is added to the "class" attribute of the
# redirect link on the login page, to allow for custom styling of
# individual IdPs (e.g. for an organization logo).
#
# cas.authn.pac4j.yahoo.client-name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# CSS class that should be assigned to this client.
#
# cas.authn.pac4j.yahoo.css-class: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# Indicate the title or display name of the client for decoration and
# client presentation purposes. If left blank, the client original name
# would be used by default.
#
# cas.authn.pac4j.yahoo.display-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# Whether the client/external identity provider should be considered
# active and enabled for integration purposes.
#
# cas.authn.pac4j.yahoo.enabled: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# The client id.
#
# cas.authn.pac4j.yahoo.id: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# The attribute found in the identity provider response that may be used
# to establish the authenticated user and build a profile for CAS.
#
# cas.authn.pac4j.yahoo.principal-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-webflow
# Owner: org.apereo.cas.configuration.model.support.pac4j.Pac4jDelegatedAuthenticationYahooProperties
#
# The client secret.
#
# cas.authn.pac4j.yahoo.secret: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.PasswordSynchronizationProperties
#
# Allow password synchronization to be turned off globally.
#
# cas.authn.password-sync.enabled: true

# Type: java.util.List<org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.PasswordSynchronizationProperties
#
# Options for password sync via LDAP.
#
# cas.authn.password-sync.ldap: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.authn.password-sync.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.password-sync.ldap[].allow-multiple-entries: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Base DN to use.
# There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating
# the LDAP configuration block for each individual
# base-dn, each entry can be specified
# and joined together using a
# special delimiter character. The user DN is retrieved using the
# combination of all base-dn and DN
# resolvers in the order defined. DN
# resolution should fail if multiple DNs are found. Otherwise the first
# DN found is returned.
# Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.password-sync.ldap[].base-dn: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.authn.password-sync.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.password-sync.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.authn.password-sync.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.authn.password-sync.ldap[].block-wait-time: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.password-sync.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.authn.password-sync.ldap[].connection-strategy: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.password-sync.ldap[].disable-pooling: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Whether or not password sync should be enabled for this ldap instance.
#
# cas.authn.password-sync.ldap[].enabled: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.authn.password-sync.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Set if search referrals should be followed.
#
# cas.authn.password-sync.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.password-sync.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.password-sync.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.authn.password-sync.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Keystore password.
#
# cas.authn.password-sync.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.password-sync.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.password-sync.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.password-sync.ldap[].max-pool-size: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.authn.password-sync.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Name of the LDAP handler.
#
# cas.authn.password-sync.ldap[].name: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Request that the server return results in batches of a
# specific
# size. See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>.
# This control is often
# used to work around server result size
# limits.
# A negative/zero value disables paged requests.
#
# cas.authn.password-sync.ldap[].page-size: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Name of the LDAP attribute that should
# hold the password.
#
# cas.authn.password-sync.ldap[].password-attribute: unicodePwd

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# If synchronization fails for any reason, (ie. password update fails
#
# or user account cannot be found), control whether the failure
# should
# be considered fatal.
#
# cas.authn.password-sync.ldap[].password-synchronization-failure-fatal: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.authn.password-sync.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.authn.password-sync.ldap[].prune-period: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Duration of time to wait for responses.
#
# cas.authn.password-sync.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# SASL authorization id.
#
# cas.authn.password-sync.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The SASL mechanism.
#
# cas.authn.password-sync.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.password-sync.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# SASL quality of protected.
#
# cas.authn.password-sync.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The SASL realm.
#
# cas.authn.password-sync.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# SASL security strength.
#
# cas.authn.password-sync.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.password-sync.ldap[].search-entry-handlers.search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.password-sync.ldap[].search-entry-handlers.type: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# User filter to use for searching.
# Syntax is {@code cn={user}} or
# {@code cn={0}}.
# <p>
# You may also provide an external groovy
# script
# in the syntax of {@code file:/path/to/GroovyScript.groovy}
#
# to fully build the final filter template dynamically.
#
# cas.authn.password-sync.ldap[].search-filter: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.password-sync.ldap[].subtree-search: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.authn.password-sync.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.authn.password-sync.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.password-sync.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Password needed to open the truststore.
#
# cas.authn.password-sync.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.password-sync.ldap[].trust-store-type: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.password-sync.ldap[].use-start-tls: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.password-sync.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Period at which pool should be validated.
#
# cas.authn.password-sync.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.password-sync.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.core.authentication.passwordsync.LdapPasswordSynchronizationProperties
#
# Period at which validation operations may time out.
#
# cas.authn.password-sync.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.password-sync.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.password-sync.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.password-sync.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.password-sync.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.password-sync.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.password-sync.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.authn.password-sync.ldap[].validator.type: search

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationGroovyAccountsProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.passwordless.accounts.groovy.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationJsonAccountsProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.passwordless.accounts.json.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.passwordless.accounts.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.passwordless.accounts.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.passwordless.accounts.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.passwordless.accounts.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.passwordless.accounts.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.passwordless.accounts.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.passwordless.accounts.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.passwordless.accounts.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.passwordless.accounts.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.passwordless.accounts.ldap.disable-pooling: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Name of the LDAP attribute that indicates the user's email address.
#
# cas.authn.passwordless.accounts.ldap.email-attribute: mail

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.passwordless.accounts.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Set if search referrals should be followed.
#
# cas.authn.passwordless.accounts.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.passwordless.accounts.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.passwordless.accounts.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.passwordless.accounts.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Keystore password.
#
# cas.authn.passwordless.accounts.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.passwordless.accounts.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.passwordless.accounts.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.passwordless.accounts.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.passwordless.accounts.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Name of the LDAP handler.
#
# cas.authn.passwordless.accounts.ldap.name: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
# This setting is deprecated with a severity level of ERROR.
#
# Name of the LDAP attribute that indicates the user's name. @deprecated
# This property will likely be removed in v8.
#
# cas.authn.passwordless.accounts.ldap.name-attribute: cn

# Type: java.lang.Integer
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.passwordless.accounts.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Name of the LDAP attribute that indicates the user's phone.
#
# cas.authn.passwordless.accounts.ldap.phone-attribute: phoneNumber

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.passwordless.accounts.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.passwordless.accounts.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Name of the LDAP attribute that is the passwordless flow to request a
# password prompt from user. The attribute value must be a boolean.
# Acceoted values are {@code true}, {@code false}, {@code on}, {@code
# off}, {@code yes}, {@code no}, {@code Y}, {@code T}, {@code F}, {@code
# N}, etc. Comparisons are not case sensitive.
#
# cas.authn.passwordless.accounts.ldap.request-password-attribute: requestPassword

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Name of the LDAP attribute that is required to be present in the user
# account entry for passwordless authentication to trigger. Presence of
# this attribute is checked to ensure the user account is allowed to use
# passwordless authentication.
#
# cas.authn.passwordless.accounts.ldap.required-attribute: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The required attribute value that must be present in the user account
# entry for passwordless authentication to trigger. Presence of this
# attribute is checked to ensure the user account is allowed to use
# passwordless authentication. The value can be a regular expression
# pattern.
#
# cas.authn.passwordless.accounts.ldap.required-attribute-value: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Duration of time to wait for responses.
#
# cas.authn.passwordless.accounts.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# SASL authorization id.
#
# cas.authn.passwordless.accounts.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The SASL mechanism.
#
# cas.authn.passwordless.accounts.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.passwordless.accounts.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# SASL quality of protected.
#
# cas.authn.passwordless.accounts.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The SASL realm.
#
# cas.authn.passwordless.accounts.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# SASL security strength.
#
# cas.authn.passwordless.accounts.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Search handlers.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.passwordless.accounts.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.passwordless.accounts.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.passwordless.accounts.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.passwordless.accounts.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.passwordless.accounts.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.passwordless.accounts.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Password needed to open the truststore.
#
# cas.authn.passwordless.accounts.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.passwordless.accounts.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.passwordless.accounts.ldap.use-start-tls: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Name of the LDAP attribute that indicates the username.
#
# cas.authn.passwordless.accounts.ldap.username-attribute: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.passwordless.accounts.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Period at which pool should be validated.
#
# cas.authn.passwordless.accounts.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.passwordless.accounts.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-passwordless-ldap
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationLdapAccountsProperties
#
# Period at which validation operations may time out.
#
# cas.authn.passwordless.accounts.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.passwordless.accounts.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.passwordless.accounts.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.passwordless.accounts.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.passwordless.accounts.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.passwordless.accounts.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.passwordless.accounts.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.passwordless.accounts.ldap.validator.type: search

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Name of the database to use for authentication.
#
# cas.authn.passwordless.accounts.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.passwordless.accounts.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.passwordless.accounts.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# MongoDb database instance name.
#
# cas.authn.passwordless.accounts.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.passwordless.accounts.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.passwordless.accounts.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# MongoDb database password for authentication.
#
# cas.authn.passwordless.accounts.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.passwordless.accounts.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.passwordless.accounts.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.passwordless.accounts.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.passwordless.accounts.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.passwordless.accounts.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.passwordless.accounts.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# MongoDb database port.
#
# cas.authn.passwordless.accounts.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.passwordless.accounts.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.passwordless.accounts.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.passwordless.accounts.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.passwordless.accounts.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.passwordless.accounts.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Whether connections require SSL.
#
# cas.authn.passwordless.accounts.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# MongoDb database connection timeout.
#
# cas.authn.passwordless.accounts.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# MongoDb database user for authentication.
#
# cas.authn.passwordless.accounts.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationMongoDbAccountsProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.passwordless.accounts.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationRestAccountsProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.passwordless.accounts.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationRestAccountsProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.passwordless.accounts.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationRestAccountsProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.passwordless.accounts.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationRestAccountsProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.passwordless.accounts.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.account.PasswordlessAuthenticationRestAccountsProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.passwordless.accounts.rest.url: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.PasswordlessAuthenticationAccountsProperties
#
# Passwordless authentication settings using static accounts. The key is
# the user identifier, while the value is the form of contact such as
# email, sms, etc.
#
# cas.authn.passwordless.accounts.simple: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.PasswordlessAuthenticationCoreProperties
#
# Allow passwordless authentication to skip its own flow in favor of
# delegated authentication providers that may be available and defined
# in CAS. <p> If delegated authentication is activated, CAS will skip
# its normal passwordless authentication flow in favor of the requested
# delegated authentication provider. If no delegated providers are
# available, passwordless authentication flow will commence as usual.
#
# cas.authn.passwordless.core.delegated-authentication-activated: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.passwordless.core.delegated-authentication-selector-script.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.PasswordlessAuthenticationCoreProperties
#
# Flag to indicate if paswordless authentication is enabled.
#
# cas.authn.passwordless.core.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.PasswordlessAuthenticationCoreProperties
#
# Allow passwordless authentication to skip its own flow in favor of
# multifactor authentication providers that may be available and defined
# in CAS. <p> If multifactor authentication is activated, and defined
# MFA triggers in CAS signal availability and eligibility of an MFA flow
# for the given passwordless user, CAS will skip its normal passwordless
# authentication flow in favor of the requested multifactor
# authentication provider. If no MFA providers are available, or if no
# triggers require MFA for the verified passwordless user, passwordless
# authentication flow will commence as usual.
#
# cas.authn.passwordless.core.multifactor-authentication-activated: false

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# A regular expression pattern to indicate that captcha should be
# activated when the remote IP address matches this pattern, and
# otherwise skipped and disabled.
#
# cas.authn.passwordless.google-recaptcha.activate-for-ip-address-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether reCAPTCHA should be enabled.
#
# cas.authn.passwordless.google-recaptcha.enabled: true

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Headers, defined as a {@link Map}, to include in the request when
# making the verification call to the recaptcha API.
#
# cas.authn.passwordless.google-recaptcha.headers: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether google reCAPTCHA invisible should be enabled.
#
# cas.authn.passwordless.google-recaptcha.invisible: false

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The google reCAPTCHA badge position (only if invisible is enabled).
# Accepted values are: <ul> <li>{@code bottomright}: bottom right
# corner, default value.</li> <li>{@code bottomleft}: bottom left
# corner</li> <li>{@code inline}: allows to control the CSS.</li> </ul>
#
# cas.authn.passwordless.google-recaptcha.position: bottomright

# Type: java.lang.Double
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Google reCAPTCHA v3 returns a score (1.0 is very likely a good
# interaction, 0.0 is very likely a bot). reCAPTCHA learns by seeing
# real traffic on your site. For this reason, scores in a staging
# environment or soon after implementing may differ from production. As
# reCAPTCHA v3 doesn't ever interrupt the user flow, you can first run
# reCAPTCHA without taking action and then decide on thresholds by
# looking at your traffic in the admin console. By default, you can use
# a threshold of 0.5.
#
# cas.authn.passwordless.google-recaptcha.score: 0.5

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site secret.
#
# cas.authn.passwordless.google-recaptcha.secret: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site key.
#
# cas.authn.passwordless.google-recaptcha.site-key: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA endpoint for verification of the reCAPTCHA response. The
# endpoint is specific to the reCAPTCHA provider: <ul> <li>For Google
# reCAPTCHA, the endpoint is {@code
# https://www.google.com/recaptcha/api/siteverify}.</li> <li>For
# hCaptcha, the endpoint is {@code
# https://hcaptcha.com/siteverify}.</li> <li>For Turnstile, the endpoint
# is {@code
# https://challenges.cloudflare.com/turnstile/v0/siteverify}.</li> </ul>
#
# cas.authn.passwordless.google-recaptcha.verify-url: https://www.google.com/recaptcha/api/siteverify

# Type: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties$RecaptchaVersions
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Indicate the version of the recaptcha api.
# Available values are as
# follows:
# <ul><li>{@code GOOGLE_RECAPTCHA_V2}: V2 version of the
# recaptcha API.</li><li>{@code GOOGLE_RECAPTCHA_V3}: V3 version of the
# recaptcha API.</li><li>{@code HCAPTCHA}: hCaptcha is an alternative to
# reCAPTCHA that requires website visitors
# to label images as part of
# its business model.
# The provider is more focused on manual image
# recognition challenges. It is a image classification
# task based
# CAPTCHA provider employing visual challenges like identifying
# objects.</li><li>{@code TURNSTILE}: Offers a CAPTCHA alternative by
# Cloudflare that prioritizes user experience and privacy.
# Turnstile
# delivers frustration-free, CAPTCHA-free web experiences to website
# visitors -
# with just a simple snippet of free code. Moreover,
# Turnstile stops abuse and confirms
# visitors are real without the
# data privacy concerns or awful user experience of CAPTCHAs.</li></ul>
#
# cas.authn.passwordless.google-recaptcha.version: GOOGLE_RECAPTCHA_V2

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationTokensCoreProperties
#
# Indicate how long should the token be considered valid.
#
# cas.authn.passwordless.tokens.core.expiration: PT180S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.passwordless.tokens.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.passwordless.tokens.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.passwordless.tokens.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.passwordless.tokens.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.passwordless.tokens.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.passwordless.tokens.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.passwordless.tokens.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.passwordless.tokens.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.passwordless.tokens.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.passwordless.tokens.jpa.cleaner.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.passwordless.tokens.jpa.cleaner.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.passwordless.tokens.jpa.cleaner.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.passwordless.tokens.jpa.cleaner.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.passwordless.tokens.jpa.cleaner.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.passwordless.tokens.jpa.cleaner.schedule.start-delay: PT15S

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.passwordless.tokens.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.passwordless.tokens.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.passwordless.tokens.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.passwordless.tokens.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.passwordless.tokens.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.passwordless.tokens.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.passwordless.tokens.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.passwordless.tokens.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.passwordless.tokens.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.passwordless.tokens.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.passwordless.tokens.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.passwordless.tokens.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.passwordless.tokens.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.passwordless.tokens.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.passwordless.tokens.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# The database connection password.
#
# cas.authn.passwordless.tokens.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.passwordless.tokens.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.passwordless.tokens.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.passwordless.tokens.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.passwordless.tokens.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.passwordless.tokens.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.passwordless.tokens.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.passwordless.tokens.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.passwordless.tokens.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.passwordless.tokens.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.passwordless.tokens.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.passwordless.tokens.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.passwordless.tokens.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# The database connection URL.
#
# cas.authn.passwordless.tokens.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-passwordless-jpa
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationJpaTokensProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.passwordless.tokens.jpa.user: sa

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.authn.passwordless.tokens.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.authn.passwordless.tokens.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.authn.passwordless.tokens.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.authn.passwordless.tokens.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.passwordless.tokens.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.passwordless.tokens.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.authn.passwordless.tokens.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.authn.passwordless.tokens.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.authn.passwordless.tokens.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.passwordless.tokens.mail.validate-addresses: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Name of the database to use for authentication.
#
# cas.authn.passwordless.tokens.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.passwordless.tokens.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.passwordless.tokens.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# MongoDb database instance name.
#
# cas.authn.passwordless.tokens.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.passwordless.tokens.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.passwordless.tokens.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# MongoDb database password for authentication.
#
# cas.authn.passwordless.tokens.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.passwordless.tokens.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.passwordless.tokens.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.passwordless.tokens.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.passwordless.tokens.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.passwordless.tokens.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.passwordless.tokens.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# MongoDb database port.
#
# cas.authn.passwordless.tokens.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.passwordless.tokens.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.passwordless.tokens.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.passwordless.tokens.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.passwordless.tokens.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.passwordless.tokens.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Whether connections require SSL.
#
# cas.authn.passwordless.tokens.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# MongoDb database connection timeout.
#
# cas.authn.passwordless.tokens.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# MongoDb database user for authentication.
#
# cas.authn.passwordless.tokens.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-mongo
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationMongoDbTokensProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.passwordless.tokens.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationRestTokensProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.passwordless.tokens.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationRestTokensProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.passwordless.tokens.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationRestTokensProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.passwordless.tokens.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationRestTokensProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.passwordless.tokens.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-passwordless-webflow
# Owner: org.apereo.cas.configuration.model.support.passwordless.token.PasswordlessAuthenticationRestTokensProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.passwordless.tokens.rest.url: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# Principal attribute names that indicates the destination phone number
# for this SMS message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.authn.passwordless.tokens.sms.attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The from address for the message.
#
# cas.authn.passwordless.tokens.sms.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The body of the SMS message.
#
# cas.authn.passwordless.tokens.sms.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.authn.passwordless.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.authn.passwordless.webflow.order: 0

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.PasswordManagementCoreProperties
#
# Flag to indicate whether successful password change should trigger
# login automatically.
#
# cas.authn.pm.core.auto-login: false

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.PasswordManagementCoreProperties
#
# Flag to indicate if password management facility is enabled.
#
# cas.authn.pm.core.enabled: false

# Type: java.lang.String
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.PasswordManagementCoreProperties
#
# The character set that CAS may use to generate and suggest new
# passwords.
#
# cas.authn.pm.core.password-policy-character-set: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789![]{}()%&*$#^<>~@|

# Type: java.lang.Long
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.PasswordManagementCoreProperties
#
# The password length used by CAS when suggesting generated passwords.
#
# cas.authn.pm.core.password-policy-password-length: 10

# Type: java.lang.String
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.PasswordManagementCoreProperties
#
# A String value representing password policy regex pattern. Minimum 8
# and Maximum 10 characters at least 1 Uppercase Alphabet, 1 Lowercase
# Alphabet, 1 Number and 1 Special Character.
#
# cas.authn.pm.core.password-policy-pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,10}

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is renamed to indicate it's the 'password' policy pattern.
# Replace with: Setting is renamed to indicate it's the 'password' policy pattern.
#
# 
#
# cas.authn.pm.core.policy-pattern: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because enabled setting is moved into the core namespace.
# Replace with: enabled setting is moved into the core namespace.
#
# 
#
# cas.authn.pm.enabled: 

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.ForgotUsernamePasswordManagementProperties
#
# Whether forgot/reset username functionality should be enabled.
#
# cas.authn.pm.forgot-username.enabled: true

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# A regular expression pattern to indicate that captcha should be
# activated when the remote IP address matches this pattern, and
# otherwise skipped and disabled.
#
# cas.authn.pm.forgot-username.google-recaptcha.activate-for-ip-address-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether reCAPTCHA should be enabled.
#
# cas.authn.pm.forgot-username.google-recaptcha.enabled: true

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Headers, defined as a {@link Map}, to include in the request when
# making the verification call to the recaptcha API.
#
# cas.authn.pm.forgot-username.google-recaptcha.headers: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether google reCAPTCHA invisible should be enabled.
#
# cas.authn.pm.forgot-username.google-recaptcha.invisible: false

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The google reCAPTCHA badge position (only if invisible is enabled).
# Accepted values are: <ul> <li>{@code bottomright}: bottom right
# corner, default value.</li> <li>{@code bottomleft}: bottom left
# corner</li> <li>{@code inline}: allows to control the CSS.</li> </ul>
#
# cas.authn.pm.forgot-username.google-recaptcha.position: bottomright

# Type: java.lang.Double
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Google reCAPTCHA v3 returns a score (1.0 is very likely a good
# interaction, 0.0 is very likely a bot). reCAPTCHA learns by seeing
# real traffic on your site. For this reason, scores in a staging
# environment or soon after implementing may differ from production. As
# reCAPTCHA v3 doesn't ever interrupt the user flow, you can first run
# reCAPTCHA without taking action and then decide on thresholds by
# looking at your traffic in the admin console. By default, you can use
# a threshold of 0.5.
#
# cas.authn.pm.forgot-username.google-recaptcha.score: 0.5

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site secret.
#
# cas.authn.pm.forgot-username.google-recaptcha.secret: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site key.
#
# cas.authn.pm.forgot-username.google-recaptcha.site-key: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA endpoint for verification of the reCAPTCHA response. The
# endpoint is specific to the reCAPTCHA provider: <ul> <li>For Google
# reCAPTCHA, the endpoint is {@code
# https://www.google.com/recaptcha/api/siteverify}.</li> <li>For
# hCaptcha, the endpoint is {@code
# https://hcaptcha.com/siteverify}.</li> <li>For Turnstile, the endpoint
# is {@code
# https://challenges.cloudflare.com/turnstile/v0/siteverify}.</li> </ul>
#
# cas.authn.pm.forgot-username.google-recaptcha.verify-url: https://www.google.com/recaptcha/api/siteverify

# Type: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties$RecaptchaVersions
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Indicate the version of the recaptcha api.
# Available values are as
# follows:
# <ul><li>{@code GOOGLE_RECAPTCHA_V2}: V2 version of the
# recaptcha API.</li><li>{@code GOOGLE_RECAPTCHA_V3}: V3 version of the
# recaptcha API.</li><li>{@code HCAPTCHA}: hCaptcha is an alternative to
# reCAPTCHA that requires website visitors
# to label images as part of
# its business model.
# The provider is more focused on manual image
# recognition challenges. It is a image classification
# task based
# CAPTCHA provider employing visual challenges like identifying
# objects.</li><li>{@code TURNSTILE}: Offers a CAPTCHA alternative by
# Cloudflare that prioritizes user experience and privacy.
# Turnstile
# delivers frustration-free, CAPTCHA-free web experiences to website
# visitors -
# with just a simple snippet of free code. Moreover,
# Turnstile stops abuse and confirms
# visitors are real without the
# data privacy concerns or awful user experience of CAPTCHAs.</li></ul>
#
# cas.authn.pm.forgot-username.google-recaptcha.version: GOOGLE_RECAPTCHA_V2

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.authn.pm.forgot-username.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.authn.pm.forgot-username.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.authn.pm.forgot-username.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.authn.pm.forgot-username.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.pm.forgot-username.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.pm.forgot-username.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.authn.pm.forgot-username.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.authn.pm.forgot-username.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.authn.pm.forgot-username.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.pm.forgot-username.mail.validate-addresses: false

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# A regular expression pattern to indicate that captcha should be
# activated when the remote IP address matches this pattern, and
# otherwise skipped and disabled.
#
# cas.authn.pm.google-recaptcha.activate-for-ip-address-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether reCAPTCHA should be enabled.
#
# cas.authn.pm.google-recaptcha.enabled: true

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Headers, defined as a {@link Map}, to include in the request when
# making the verification call to the recaptcha API.
#
# cas.authn.pm.google-recaptcha.headers: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether google reCAPTCHA invisible should be enabled.
#
# cas.authn.pm.google-recaptcha.invisible: false

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The google reCAPTCHA badge position (only if invisible is enabled).
# Accepted values are: <ul> <li>{@code bottomright}: bottom right
# corner, default value.</li> <li>{@code bottomleft}: bottom left
# corner</li> <li>{@code inline}: allows to control the CSS.</li> </ul>
#
# cas.authn.pm.google-recaptcha.position: bottomright

# Type: java.lang.Double
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Google reCAPTCHA v3 returns a score (1.0 is very likely a good
# interaction, 0.0 is very likely a bot). reCAPTCHA learns by seeing
# real traffic on your site. For this reason, scores in a staging
# environment or soon after implementing may differ from production. As
# reCAPTCHA v3 doesn't ever interrupt the user flow, you can first run
# reCAPTCHA without taking action and then decide on thresholds by
# looking at your traffic in the admin console. By default, you can use
# a threshold of 0.5.
#
# cas.authn.pm.google-recaptcha.score: 0.5

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site secret.
#
# cas.authn.pm.google-recaptcha.secret: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site key.
#
# cas.authn.pm.google-recaptcha.site-key: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA endpoint for verification of the reCAPTCHA response. The
# endpoint is specific to the reCAPTCHA provider: <ul> <li>For Google
# reCAPTCHA, the endpoint is {@code
# https://www.google.com/recaptcha/api/siteverify}.</li> <li>For
# hCaptcha, the endpoint is {@code
# https://hcaptcha.com/siteverify}.</li> <li>For Turnstile, the endpoint
# is {@code
# https://challenges.cloudflare.com/turnstile/v0/siteverify}.</li> </ul>
#
# cas.authn.pm.google-recaptcha.verify-url: https://www.google.com/recaptcha/api/siteverify

# Type: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties$RecaptchaVersions
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Indicate the version of the recaptcha api.
# Available values are as
# follows:
# <ul><li>{@code GOOGLE_RECAPTCHA_V2}: V2 version of the
# recaptcha API.</li><li>{@code GOOGLE_RECAPTCHA_V3}: V3 version of the
# recaptcha API.</li><li>{@code HCAPTCHA}: hCaptcha is an alternative to
# reCAPTCHA that requires website visitors
# to label images as part of
# its business model.
# The provider is more focused on manual image
# recognition challenges. It is a image classification
# task based
# CAPTCHA provider employing visual challenges like identifying
# objects.</li><li>{@code TURNSTILE}: Offers a CAPTCHA alternative by
# Cloudflare that prioritizes user experience and privacy.
# Turnstile
# delivers frustration-free, CAPTCHA-free web experiences to website
# visitors -
# with just a simple snippet of free code. Moreover,
# Turnstile stops abuse and confirms
# visitors are real without the
# data privacy concerns or awful user experience of CAPTCHAs.</li></ul>
#
# cas.authn.pm.google-recaptcha.version: GOOGLE_RECAPTCHA_V2

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-pm
# Owner: org.apereo.cas.configuration.model.support.pm.GroovyPasswordManagementProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pm.groovy.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.PasswordHistoryCoreProperties
#
# Flag to indicate if password history tracking is enabled.
#
# cas.authn.pm.history.core.enabled: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pm.history.groovy.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.pm.jdbc.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.pm.jdbc.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.pm.jdbc.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.pm.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.pm.jdbc.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.pm.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.pm.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.pm.jdbc.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.pm.jdbc.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.pm.jdbc.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.pm.jdbc.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.pm.jdbc.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.pm.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.pm.jdbc.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.pm.jdbc.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.pm.jdbc.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.pm.jdbc.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# The database connection password.
#
# cas.authn.pm.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.pm.jdbc.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.pm.jdbc.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.pm.jdbc.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.pm.jdbc.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.pm.jdbc.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.pm.jdbc.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.pm.jdbc.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.pm.jdbc.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.pm.jdbc.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.pm.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.pm.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.pm.jdbc.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.pm.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.pm.jdbc.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.pm.jdbc.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.pm.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.pm.jdbc.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.pm.jdbc.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.pm.jdbc.read-only: false

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to change the password and update.
#
# cas.authn.pm.jdbc.sql-change-password: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to delete security questions for the account, if any.
#
# cas.authn.pm.jdbc.sql-delete-security-questions: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to locate the user email address.
#
# cas.authn.pm.jdbc.sql-find-email: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to locate the user phone number.
#
# cas.authn.pm.jdbc.sql-find-phone: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to locate the user via email.
#
# cas.authn.pm.jdbc.sql-find-user: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to locate security questions for the account, if any.
#
# cas.authn.pm.jdbc.sql-get-security-questions: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to unlock accounts.
#
# cas.authn.pm.jdbc.sql-unlock-account: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# SQL query to update security questions for the account, if any.
#
# cas.authn.pm.jdbc.sql-update-security-questions: 

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# The database connection URL.
#
# cas.authn.pm.jdbc.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-pm-jdbc
# Owner: org.apereo.cas.configuration.model.support.pm.JdbcPasswordManagementProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.pm.jdbc.user: sa

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-pm
# Owner: org.apereo.cas.configuration.model.support.pm.JsonPasswordManagementProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.pm.json.location: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties>
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.PasswordManagementProperties
#
# Manage account passwords in LDAP.
#
# cas.authn.pm.ldap: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Name of LDAP attribute that represents the account locked status.
#
# The value of the attribute is typically set to {@code "true"} if the
# account is
# ever updated to indicated a locked status. For Active
# Directory, this attribute
# might be called {@code lockoutTime}.
#
# cas.authn.pm.ldap[].account-locked-attribute: pwdLockout

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# When CAS is about to unlock the user account,
# it will use the {@link
# #accountLockedAttribute} setting to
# locate the appropriate attribute
# for the user entry. This attribute
# will then be assigned the
# value(s) defined here to unlock the account.
# <p>For Active Directory
# and in scenarios where {@link #accountLockedAttribute} is set to
#
# {@code lockoutTime}, this value might be set to zero. A value of zero
# means
# that the account is not currently locked out.
# <p>Note that
# the value defined here may be treated as case sensitive by the LDAP
# server.
#
# cas.authn.pm.ldap[].account-unlocked-attribute-values: [FALSE]

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.authn.pm.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.pm.ldap[].allow-multiple-entries: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Base DN to use.
# There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating
# the LDAP configuration block for each individual
# base-dn, each entry can be specified
# and joined together using a
# special delimiter character. The user DN is retrieved using the
# combination of all base-dn and DN
# resolvers in the order defined. DN
# resolution should fail if multiple DNs are found. Otherwise the first
# DN found is returned.
# Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.pm.ldap[].base-dn: 

# Type: java.util.List<String>
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.authn.pm.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.pm.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.authn.pm.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.authn.pm.ldap[].block-wait-time: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.pm.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.authn.pm.ldap[].connection-strategy: 

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.pm.ldap[].disable-pooling: 

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.authn.pm.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Set if search referrals should be followed.
#
# cas.authn.pm.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.pm.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.pm.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.authn.pm.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Keystore password.
#
# cas.authn.pm.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.pm.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.pm.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.pm.ldap[].max-pool-size: 

# Type: int
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.authn.pm.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Name of the LDAP handler.
#
# cas.authn.pm.ldap[].name: 

# Type: int
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Request that the server return results in batches of a
# specific
# size. See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>.
# This control is often
# used to work around server result size
# limits.
# A negative/zero value disables paged requests.
#
# cas.authn.pm.ldap[].page-size: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.authn.pm.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.authn.pm.ldap[].prune-period: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Duration of time to wait for responses.
#
# cas.authn.pm.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# SASL authorization id.
#
# cas.authn.pm.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The SASL mechanism.
#
# cas.authn.pm.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.pm.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# SASL quality of protected.
#
# cas.authn.pm.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The SASL realm.
#
# cas.authn.pm.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# SASL security strength.
#
# cas.authn.pm.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.pm.ldap[].search-entry-handlers.case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.pm.ldap[].search-entry-handlers.case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.pm.ldap[].search-entry-handlers.case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.pm.ldap[].search-entry-handlers.case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.pm.ldap[].search-entry-handlers.dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.pm.ldap[].search-entry-handlers.dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.pm.ldap[].search-entry-handlers.merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.pm.ldap[].search-entry-handlers.merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.pm.ldap[].search-entry-handlers.primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.pm.ldap[].search-entry-handlers.primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.pm.ldap[].search-entry-handlers.recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.pm.ldap[].search-entry-handlers.recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.pm.ldap[].search-entry-handlers.search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.pm.ldap[].search-entry-handlers.search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.pm.ldap[].search-entry-handlers.type: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# User filter to use for searching.
# Syntax is {@code cn={user}} or
# {@code cn={0}}.
# <p>
# You may also provide an external groovy
# script
# in the syntax of {@code file:/path/to/GroovyScript.groovy}
#
# to fully build the final filter template dynamically.
#
# cas.authn.pm.ldap[].search-filter: 

# Type: java.util.Map<String,String>
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Collection of attribute names that indicate security questions
# answers.
# This is done via a key-value structure where the key is the
# attribute name
# for the security question and the value is the
# attribute name for the answer linked to the question.
#
# cas.authn.pm.ldap[].security-questions-attributes: 

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.pm.ldap[].subtree-search: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.authn.pm.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.authn.pm.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.pm.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Password needed to open the truststore.
#
# cas.authn.pm.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.pm.ldap[].trust-store-type: 

# Type: LdapType
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# The specific variant of LDAP
# based on which update operations will
# be constructed.
# Accepted values are:
# * <ul>
# <li>{@code
# AD}</li>
# <li>{@code GENERIC}</li>
# <li>{@code FreeIPA}</li>
#
# <li>{@code EDirectory}</li>
# </ul>
#
# cas.authn.pm.ldap[].type: AD

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.pm.ldap[].use-start-tls: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Username attribute required by LDAP.
#
# cas.authn.pm.ldap[].username-attribute: uid

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.pm.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Period at which pool should be validated.
#
# cas.authn.pm.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.pm.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-pm-ldap
# Owner: org.apereo.cas.configuration.model.support.pm.LdapPasswordManagementProperties
#
# Period at which validation operations may time out.
#
# cas.authn.pm.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.pm.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.pm.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.pm.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.pm.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.pm.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.pm.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.authn.pm.ldap[].validator.type: search

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because policy-pattern setting is moved into the core namespace.
# Replace with: policy-pattern setting is moved into the core namespace.
#
# 
#
# cas.authn.pm.policy-pattern: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.pm.reset.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.pm.reset.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.pm.reset.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.pm.reset.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.pm.reset.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.pm.reset.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.pm.reset.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.ResetPasswordManagementProperties
#
# How long in minutes should the password expiration link remain valid.
#
# cas.authn.pm.reset.expiration: PT1M

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.ResetPasswordManagementProperties
#
# Whether the Password Management Token will contain the client IP
# Address.
#
# cas.authn.pm.reset.include-client-ip-address: true

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.ResetPasswordManagementProperties
#
# Whether the Password Management Token will contain the server IP
# Address.
#
# cas.authn.pm.reset.include-server-ip-address: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.authn.pm.reset.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.authn.pm.reset.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.authn.pm.reset.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.authn.pm.reset.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.pm.reset.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.pm.reset.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.authn.pm.reset.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.authn.pm.reset.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.authn.pm.reset.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.pm.reset.mail.validate-addresses: false

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.ResetPasswordManagementProperties
#
# Controls whether password reset operations must activate and support a
# multifactor authentication flow based on the set of available MFA
# providers that are configured and active, before reset instructions
# can be shared and sent.
#
# cas.authn.pm.reset.multifactor-authentication-enabled: true

# Type: java.lang.Integer
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.ResetPasswordManagementProperties
#
# How many times you can use the password reset link. Stricly lower than
# 1 means infinite.
#
# cas.authn.pm.reset.number-of-uses: -1

# Type: java.lang.Boolean
# Module: cas-server-support-pm-webflow
# Owner: org.apereo.cas.configuration.model.support.pm.ResetPasswordManagementProperties
#
# Whether reset operations require security questions, or should they be
# marked as optional.
#
# cas.authn.pm.reset.security-questions-enabled: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# Principal attribute names that indicates the destination phone number
# for this SMS message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.authn.pm.reset.sms.attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The from address for the message.
#
# cas.authn.pm.reset.sms.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The body of the SMS message.
#
# cas.authn.pm.reset.sms.text: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Password for Basic-Auth at the password management endpoints.
#
# cas.authn.pm.rest.endpoint-password: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Endpoint URL to use when unlocking account.
#
# cas.authn.pm.rest.endpoint-url-account-unlock: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Endpoint URL to use when updating passwords..
#
# cas.authn.pm.rest.endpoint-url-change: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Endpoint URL to use when locating email addresses.
#
# cas.authn.pm.rest.endpoint-url-email: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Endpoint URL to use when locating phone numbers.
#
# cas.authn.pm.rest.endpoint-url-phone: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Endpoint URL to use when locating security questions.
#
# cas.authn.pm.rest.endpoint-url-security-questions: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Endpoint URL to use when locating user names.
#
# cas.authn.pm.rest.endpoint-url-user: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Username for Basic-Auth at the password management endpoints.
#
# cas.authn.pm.rest.endpoint-username: 

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Field name for password field when password change requests are
# submitted.
#
# cas.authn.pm.rest.field-name-password: password

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Field name for oldPassword field when password change requests are
# submitted.
#
# cas.authn.pm.rest.field-name-password-old: oldPassword

# Type: java.lang.String
# Module: cas-server-support-pm-rest
# Owner: org.apereo.cas.configuration.model.support.pm.RestfulPasswordManagementProperties
#
# Field name for username field when password change requests are
# submitted.
#
# cas.authn.pm.rest.field-name-user: username

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.authn.pm.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.authn.pm.webflow.order: 0

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AllHandlersAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.all-handlers.enabled: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AllHandlersAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.all-handlers.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AllHandlersAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.all-handlers.order: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AllCredentialsAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.all.enabled: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AllCredentialsAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.all.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AllCredentialsAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.all.order: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AnyCredentialAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.any.enabled: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AnyCredentialAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.any.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AnyCredentialAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.any.order: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.AnyCredentialAuthenticationPolicyProperties
#
# Avoid short circuiting and try every handler even if one prior
# succeeded. Ensure number of provided credentials does not match the
# sum of authentication successes and failures
#
# cas.authn.policy.any.try-all: false

# Type: java.util.List<org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationPolicyProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationPolicyProperties
#
# Execute a groovy script to detect authentication policy.
#
# cas.authn.policy.groovy: 

# Type: boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.groovy[].enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.groovy[].name: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.groovy[].order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyAuthenticationPolicyProperties
#
# Path to the groovy script to execute.
#
# cas.authn.policy.groovy[].script: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.NotPreventedAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.not-prevented.enabled: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.NotPreventedAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.not-prevented.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.NotPreventedAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.not-prevented.order: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAuthenticationHandlerAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.req.enabled: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAuthenticationHandlerAuthenticationPolicyProperties
#
# The handler name which must have successfully executed and validated
# credentials.
#
# cas.authn.policy.req.handler-name: handlerName

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAuthenticationHandlerAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.req.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAuthenticationHandlerAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.req.order: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAuthenticationHandlerAuthenticationPolicyProperties
#
# Ensure number of provided credentials does not match the sum of
# authentication successes and failures.
#
# cas.authn.policy.req.try-all: false

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAttributesAuthenticationPolicyProperties
#
# Map of attributes that are required to found either as authentication
# attributes or principal attributes.
#
# cas.authn.policy.required-attributes.attributes: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAttributesAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.required-attributes.enabled: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAttributesAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.required-attributes.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.RequiredAttributesAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.required-attributes.order: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationPolicyProperties
#
# Global authentication policy that is applied when CAS attempts to vend
# and validate tickets. Checks to make sure a particular authentication
# handler has successfully executed and validated credentials. Required
# handlers are defined per registered service.
#
# cas.authn.policy.required-handler-authentication-policy-enabled: false

# Type: java.util.List<org.apereo.cas.configuration.model.core.authentication.RestAuthenticationPolicyProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationPolicyProperties
#
# Execute a rest endpoint to detect authentication policy.
#
# cas.authn.policy.rest: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.BaseRestEndpointProperties
#
# If REST endpoint is protected via basic authentication,
# specify the
# password for authentication.
#
# cas.authn.policy.rest[].basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.BaseRestEndpointProperties
#
# If REST endpoint is protected via basic authentication,
# specify the
# username for authentication.
#
# cas.authn.policy.rest[].basic-auth-username: 

# Type: java.util.Map<String,String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.BaseRestEndpointProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call.
# Will overwrite any header that CAS is pre-defined to
#
# send and include in the request. Key in the map should be the header
# name
# and the value in the map should be the header value.
#
# cas.authn.policy.rest[].headers: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.BaseRestEndpointProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.policy.rest[].url: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationPolicyProperties
#
# If true, allows CAS to select authentication handlers based on the
# credential source. This allows the authentication engine to restrict
# the task of validating credentials to the selected source or account
# repository, as opposed to every authentication handler registered with
# CAS at runtime.
#
# cas.authn.policy.source-selection-enabled: false

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.UniquePrincipalAuthenticationPolicyProperties
#
# Enables the policy.
#
# cas.authn.policy.unique-principal.enabled: false

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.UniquePrincipalAuthenticationPolicyProperties
#
# Total number of allowed sessions that users can use simultaneously.
# Default is {@code 0}, which means user can only have one session.
#
# cas.authn.policy.unique-principal.maximum-allowed-sessions: 0

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.UniquePrincipalAuthenticationPolicyProperties
#
# The name of the authentication policy.
#
# cas.authn.policy.unique-principal.name: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.policy.UniquePrincipalAuthenticationPolicyProperties
#
# The execution order of this policy.
#
# cas.authn.policy.unique-principal.order: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-qr-authentication
# Owner: org.apereo.cas.configuration.model.support.qr.QRAuthenticationProperties
#
# Configure allowed {@code Origin} header values. This check is mostly
# designed for browser clients. There is nothing preventing other types
# of client to modify the {@code Origin} header value. <p>When SockJS is
# enabled and origins are restricted, transport types that do not allow
# to check request origin (Iframe based transports) are disabled. As a
# consequence, IE 6 to 9 are not supported when origins are restricted.
# <p>Each provided allowed origin must start by "http://", "https://" or
# be "*" (means that all origins are allowed). By default, only same
# origin requests are allowed (empty list).
#
# cas.authn.qr.allowed-origins: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-qr-authentication
# Owner: org.apereo.cas.configuration.model.support.qr.JsonQRAuthenticationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.qr.json.location: 

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# The accounting port.
#
# cas.authn.radius.client.accounting-port: 1813

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# The authentication port.
#
# cas.authn.radius.client.authentication-port: 1812

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Server address to connect and establish a session.
#
# cas.authn.radius.client.inet-address: localhost

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Secret/password to use for the initial bind.
#
# cas.authn.radius.client.shared-secret: N0Sh@ar3d$ecReT

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Socket connection timeout in milliseconds.
#
# cas.authn.radius.client.socket-timeout: 0

# Type: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties$RadiusClientTransportTypes
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusClientProperties
#
# Transport type to use by this client to connect to the server.
#
# Available values are as follows:
# <ul><li>{@code UDP}: Default. UDP
# client transport type.</li><li>{@code RADSEC}: RadSec is a protocol
# which allows RADIUS servers to
# transfer data over TCP and TLS for
# increased security.</li></ul>
#
# cas.authn.radius.client.transport-type: UDP

# Type: java.lang.Boolean
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusProperties
#
# Whether authentication errors should be skipped and fail over to the
# next server.
#
# cas.authn.radius.failover-on-authentication-failure: false

# Type: java.lang.Boolean
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusProperties
#
# Whether catastrophic errors should be skipped and fail over to the
# next server.
#
# cas.authn.radius.failover-on-exception: false

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusProperties
#
# The name of the authentication handler.
#
# cas.authn.radius.name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.radius.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.radius.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.radius.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.radius.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.radius.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.radius.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.radius.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.radius.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.radius.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.radius.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.radius.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.radius.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.radius.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS identifier.
#
# cas.authn.radius.server.nas-identifier: 

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS IP address.
#
# cas.authn.radius.server.nas-ip-address: 

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS IPv6 address.
#
# cas.authn.radius.server.nas-ipv6-address: 

# Type: java.lang.Long
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS port.
#
# cas.authn.radius.server.nas-port: -1

# Type: java.lang.Long
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS port id.
#
# cas.authn.radius.server.nas-port-id: -1

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS port type.
#
# cas.authn.radius.server.nas-port-type: -1

# Type: java.lang.Long
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# The NAS real port.
#
# cas.authn.radius.server.nas-real-port: -1

# Type: java.lang.String
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# Radius protocol to use when communicating with the server.
#
# cas.authn.radius.server.protocol: EAP_MSCHAPv2

# Type: java.lang.Integer
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusServerProperties
#
# Number of re-try attempts when dealing with connection and
# authentication failures.
#
# cas.authn.radius.server.retries: 3

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-radius
# Owner: org.apereo.cas.configuration.model.support.radius.RadiusProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.radius.state: 

# Type: java.io.File
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.authn.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.authn.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.authn.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.authn.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.authn.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.authn.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.authn.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.authn.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.authn.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.authn.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.authn.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.authn.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.authn.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Connection timeout.
#
# cas.authn.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Database index used by the connection factory.
#
# cas.authn.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.authn.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Redis server host.
#
# cas.authn.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.authn.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.authn.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# The name of the authentication handler.
#
# cas.authn.redis.name: 

# Type: java.lang.Integer
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Order of authentication handler in chain.
#
# cas.authn.redis.order: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Login password of the redis server.
#
# cas.authn.redis.password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.redis.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.redis.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.redis.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.redis.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.redis.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.redis.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.redis.password-encoder.type: NONE

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.authn.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.authn.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.authn.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.authn.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.authn.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.authn.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.authn.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.authn.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.authn.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.authn.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.authn.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.authn.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.authn.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.authn.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Redis server port.
#
# cas.authn.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.redis.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.redis.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.redis.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.redis.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.redis.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.redis.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Redis protocol version.
#
# cas.authn.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.authn.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.authn.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.authn.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.authn.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.authn.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.authn.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.authn.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Command timeout.
#
# cas.authn.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Database URI.
#
# cas.authn.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.authn.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Login username of the redis server.
#
# cas.authn.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-authentication
# Owner: org.apereo.cas.configuration.model.support.redis.RedisAuthenticationProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.authn.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.RejectAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.reject.name: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.reject.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.reject.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.reject.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.reject.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.reject.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.reject.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.reject.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.reject.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.reject.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.reject.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.reject.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.reject.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.reject.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-generic
# Owner: org.apereo.cas.configuration.model.support.generic.RejectAuthenticationProperties
#
# Comma-separated list of users to reject for authentication.
#
# cas.authn.reject.users: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property moved to new namespace under cas.authn.authentication-attribute-release.* settings.
# Replace with: Property moved to new namespace under cas.authn.authentication-attribute-release.* settings.
#
# 
#
# cas.authn.release-protocol-attributes: 

# Type: java.lang.String
# Module: cas-server-support-generic-remote-webflow
# Owner: org.apereo.cas.configuration.model.support.generic.RemoteAuthenticationProperties.RemoteCookie
#
# The name of the remote cookie that is passed onto CAS, usually set by
# a trusted third party. The cookie, when verified and decrypted, must
# indicate the trusted remote principal id that CAS should use for
# authentication.
#
# cas.authn.remote.cookie.cookie-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.remote.cookie.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.remote.cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.remote.cookie.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.remote.cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.remote.cookie.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.remote.cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.remote.cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-generic-remote-webflow
# Owner: org.apereo.cas.configuration.model.support.generic.RemoteAuthenticationProperties
#
# The authorized network address to allow for authentication. This
# approach allows for transparent authentication achieved within a large
# corporate network without the need to manage certificates, etc.
#
# cas.authn.remote.ip-address-range: 

# Type: java.lang.String
# Module: cas-server-support-generic-remote-webflow
# Owner: org.apereo.cas.configuration.model.support.generic.RemoteAuthenticationProperties
#
# The name of the authentication handler.
#
# cas.authn.remote.name: 

# Type: java.lang.Integer
# Module: cas-server-support-generic-remote-webflow
# Owner: org.apereo.cas.configuration.model.support.generic.RemoteAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.remote.order: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.rest.RestAuthenticationProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationProperties
#
# REST-based authentication settings.
#
# cas.authn.rest: 

# Type: java.lang.String
# Module: cas-server-support-rest-authentication
# Owner: org.apereo.cas.configuration.model.support.rest.RestAuthenticationProperties
#
# HTTP method to use when contacting the REST API for authentication.
#
# cas.authn.rest[].method: POST

# Type: java.lang.String
# Module: cas-server-support-rest-authentication
# Owner: org.apereo.cas.configuration.model.support.rest.RestAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.rest[].name: 

# Type: java.lang.Integer
# Module: cas-server-support-rest-authentication
# Owner: org.apereo.cas.configuration.model.support.rest.RestAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.rest[].order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'.
# Relevant when the
# type used is {@code DEFAULT}.
#
# cas.authn.rest[].password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}.
# Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}.
# When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1},
# {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.rest[].password-encoder.encoding-algorithm: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.rest[].password-encoder.hash-length: 16

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.rest[].password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2},
# {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders.
# Secret
# usually is an optional setting.
#
# cas.authn.rest[].password-encoder.secret: 

# Type: int
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing.
#
# Usually relevant when dealing with {@link
# PasswordEncoderTypes#BCRYPT}, {@link PasswordEncoderTypes#PBKDF2} or
# {@link PasswordEncoderTypes#GLIBC_CRYPT}.
# When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.rest[].password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use.
# Type may be specified as
# blank or {@code NONE} to disable password encoding.
# It may also
# refer to a fully-qualified class name that implements
# the Spring
# Security's {@code PasswordEncoder} interface
# if you wish you define
# your own encoder.
# <p>
# The following types may be used:
# <ul>
#   
# <li>{@code NONE}: No password encoding (i.e. plain-text) takes
# place.</li>
#     <li>{@code DEFAULT}: Use the {@code
# DefaultPasswordEncoder} of CAS. For message-digest
#     algorithms
# via {@code character-encoding} and {@code encoding-algorithm}.</li>
# 
# <li>{@code BCRYPT}: Use the {@code BCryptPasswordEncoder} based on the
# strength provided and an optional secret.</li>
#     <li>{@code
# SCRYPT}: Use the {@code SCryptPasswordEncoder}.</li>
#     <li>{@code
# PBKDF2}: Use the {@code Pbkdf2PasswordEncoder} based on the strength
# provided and an optional secret.</li>
#     <li>{@code STANDARD}: Use
# the {@code StandardPasswordEncoder} based on the secret
# provided.</li>
#     <li>{@code SSHA}: Use the {@code
# LdapShaPasswordEncoder} supports Ldap SHA and SSHA (salted-SHA). The
# values
#     are base-64 encoded and have the label {SHA} or {SSHA}
# prepended to the encoded hash.</li>
#     <li>{@code GLIBC_CRYPT}: Use
# the {@code GlibcCryptPasswordEncoder} based on the
#     {@code
# encoding-algorithm}, strength provided and an optional secret.</li>
# 
# <li>{@code org.example.MyEncoder}: An implementation of {@code
# PasswordEncoder} of your own choosing.</li>
#     <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li>
# </ul>
#
# cas.authn.rest[].password-encoder.type: NONE

# Type: AuthenticationHandlerStates
# Module: cas-server-support-rest-authentication
# Owner: org.apereo.cas.configuration.model.support.rest.RestAuthenticationProperties
#
# Define the scope and state of this authentication handler
# and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.rest[].state: ACTIVE

# Type: java.lang.String
# Module: cas-server-support-rest-authentication
# Owner: org.apereo.cas.configuration.model.support.rest.RestAuthenticationProperties
#
# Endpoint URI to use for verification of credentials.
#
# cas.authn.rest[].uri: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override white listed algorithms.
#
# cas.authn.saml-idp.algs.override-allowed-algorithms: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override allowed signature signing algorithms.
#
# cas.authn.saml-idp.algs.override-allowed-signature-signing-algorithms: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override black listed encryption algorithms.
#
# cas.authn.saml-idp.algs.override-blocked-encryption-algorithms: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override blocked signature signing algorithms.
#
# cas.authn.saml-idp.algs.override-blocked-signature-signing-algorithms: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override data encryption algorithms.
#
# cas.authn.saml-idp.algs.override-data-encryption-algorithms: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override key encryption algorithms.
#
# cas.authn.saml-idp.algs.override-key-encryption-algorithms: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override signature algorithms.
#
# cas.authn.saml-idp.algs.override-signature-algorithms: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override signature canonicalization algorithm.
#
# cas.authn.saml-idp.algs.override-signature-canonicalization-algorithm: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# The Override signature reference digest methods.
#
# cas.authn.saml-idp.algs.override-signature-reference-digest-methods: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAlgorithmsProperties
#
# Algorithm name to use when generating or locating private key for
# signing operations..
#
# cas.authn.saml-idp.algs.private-key-alg-name: RSA

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because attribute-friendly-names setting is moved into the core namespace.
# Replace with: attribute-friendly-names setting is moved into the core namespace.
#
# 
#
# cas.authn.saml-idp.attribute-friendly-names: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because authentication-context-class-mappings setting is moved into the core.context namespace.
# Replace with: authentication-context-class-mappings setting is moved into the core.context namespace.
#
# 
#
# cas.authn.saml-idp.authentication-context-class-mappings: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPCoreProperties
#
# A mapping of attribute names to their friendly names, defined
# globally. Example might be {@code
# urn:oid:1.3.6.1.4.1.5923.1.1.1.6->eduPersonPrincipalName}.
#
# cas.authn.saml-idp.core.attribute-friendly-names: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPCoreProperties
#
# Indicates whether attribute query profile is enabled. Enabling this
# setting would allow CAS to record SAML responses and have them be made
# available later for attribute lookups.
#
# cas.authn.saml-idp.core.attribute-query-profile-enabled: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAuthenticationContextProperties
#
# A mapping of authentication context class refs. This is where specific
# authentication context classes are referenced and mapped to providers
# that CAS may support mainly for, i.e. MFA purposes. <p> Example might
# be {@code
# urn:oasis:names:tc:SAML:2.0:ac:classes:SomeClassName->mfa-duo}. <p> In
# delegated authentication scenarios, this can also be a mapping of
# authentication context class refs, when CAS is proxying/delegating
# authentication to an external SAML2 identity provider. The requested
# authentication context as submitted by the service provider is first
# received by CAS, and then gets mapped to a context class that is
# passed onto the external identity provider. For example, you might
# have a scenario where a SAML2 service provider would submit {@code
# https://refeds.org/profile/mfa} to CAS, and CAS would translate that
# to {@code http://schemas.microsoft.com/claims/multipleauthn} to
# ultimate route the authentication request to Azure. If no mapping is
# found, the original context is passed as is. <p> Example might be
# {@code
# https://refeds.org/profile/mfa->http://schemas.microsoft.com/claims/mu
# ltipleauthn}.
#
# cas.authn.saml-idp.core.context.authentication-context-class-mappings: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPAuthenticationContextProperties
#
# The default authentication context class to include in the response if
# none is specified via the service.
#
# cas.authn.saml-idp.core.context.default-authentication-context-class: urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPCoreProperties
#
# The SAML entity id for the deployment.
#
# cas.authn.saml-idp.core.entity-id: https://cas.example.org/idp

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Session replication settings for SAML2 are moved to cas.authn.saml-idp.core.session-storage-type.
# Replace with: Session replication settings for SAML2 are moved to cas.authn.saml-idp.core.session-storage-type.
#
# 
#
# cas.authn.saml-idp.core.replicate-sessions: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# A regular expression pattern that indicates the set of allowed IP
# addresses, when {@link #isPinToSession()} is configured. In the event
# that there is a mismatch between the cookie IP address and the current
# request-provided IP address (i.e. network switches, VPN, etc), the
# cookie can still be considered valid if the new IP address matches the
# pattern specified here.
#
# cas.authn.saml-idp.core.session-replication.cookie.allowed-ip-addresses-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.authn.saml-idp.core.session-replication.cookie.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.saml-idp.core.session-replication.cookie.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.saml-idp.core.session-replication.cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.saml-idp.core.session-replication.cookie.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.saml-idp.core.session-replication.cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.saml-idp.core.session-replication.cookie.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.saml-idp.core.session-replication.cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.saml-idp.core.session-replication.cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.authn.saml-idp.core.session-replication.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# When set to {@code true} and assuming {@link #isPinToSession()} is
# also {@code true}, client sessions (using the client IP address) are
# geo-located using a geolocation service when/if configured. The
# resulting session is either pinned to the client geolocation, or the
# default client address.
#
# cas.authn.saml-idp.core.session-replication.cookie.geo-locate-client-session: false

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.authn.saml-idp.core.session-replication.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.authn.saml-idp.core.session-replication.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.saml-idp.core.session-replication.cookie.name: 

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.authn.saml-idp.core.session-replication.cookie.path: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# When generating cookie values, determine whether the value should be
# compounded and signed with the properties of the current session, such
# as IP address, user-agent, etc.
#
# cas.authn.saml-idp.core.session-replication.cookie.pin-to-session: true

# Type: java.lang.String
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.saml-idp.core.session-replication.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-support-pac4j-api
# Owner: org.apereo.cas.configuration.model.support.replication.CookieSessionReplicationProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.authn.saml-idp.core.session-replication.cookie.secure: true

# Type: java.lang.Boolean
# Module: cas-server-core-api
# Owner: org.apereo.cas.configuration.model.support.replication.SessionReplicationProperties
#
# Indicates whether profiles and other session data, collected as part
# of authentication flows and protocol requests that are kept by the
# container session, should be replicated across the cluster using CAS
# and its own ticket registry. Without this option, profile data and
# other related pieces of information should be manually replicated via
# means and libraries outside of CAS.
#
# cas.authn.saml-idp.core.session-replication.replicate-sessions: true

# Type: org.apereo.cas.configuration.model.core.web.session.SessionStorageTypes
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPCoreProperties
#
# Indicates whether saml requests, and other session data, collected as
# part of SAML flows and requests that are kept by the container http
# session, local storage, or should be replicated across the cluster.
#
# Available values are as follows:
# <ul><li>{@code HTTP}:
# Authentication requests, and other session data collected as part of
# authentication protocol flows and requests
# are kept in the http
# servlet session that is local to the server.</li><li>{@code
# BROWSER_STORAGE}: Authentication requests, and other session data
# collected as part of authentication protocol flows and requests
# are
# kept in the client browser's session storage, signed and encrypted.
# All interactions
# require client-side read/write operations to
# restore the session from the browser.</li><li>{@code TICKET_REGISTRY}:
# Authentication requests, and other session data collected as part of
# authentication protocol flows and requests
# are tracked as CAS
# tickets in the registry and replicated across the entire cluster
# as
# tickets. This state is tied to the user's agent/browser using a
# special cookie that would be used
# to locate and restore that state.
# The cookie content may be signed and encrypted.</li></ul>
#
# cas.authn.saml-idp.core.session-storage-type: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because entity-id setting is moved into the core namespace.
# Replace with: entity-id setting is moved into the core namespace.
#
# 
#
# cas.authn.saml-idp.entity-id: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPLogoutProperties
#
# Whether SLO logout requests are required to be signed.
#
# cas.authn.saml-idp.logout.force-signed-logout-requests: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPLogoutProperties
#
# The order in which the logout request binginds should be tried (if
# available at the SP level).
#
# cas.authn.saml-idp.logout.logout-request-bindings: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPLogoutProperties
#
# Whether SLO logout responses should be sent using a forced binding.
# Accepted values are: <ul> <li>{@code
# urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST}</li> <li>{@code
# urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect}</li> </ul> If no
# binding is defined, all available SLO endpoints found in the metadata
# will be consulted for logout responses.
#
# cas.authn.saml-idp.logout.logout-response-binding: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPLogoutProperties
#
# Whether SLO logout responses should be sent to service providers.
#
# cas.authn.saml-idp.logout.send-logout-response: true

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPLogoutProperties
#
# Whether SLO logout responses are required to be signed.
#
# cas.authn.saml-idp.logout.sign-logout-response: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPLogoutProperties
#
# Whether SAML SLO is enabled and processed.
#
# cas.authn.saml-idp.logout.single-logout-callbacks-disabled: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# S3 bucket that contains metadata files.
#
# cas.authn.saml-idp.metadata.amazon-s3.bucket-name: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Client execution timeout.
#
# cas.authn.saml-idp.metadata.amazon-s3.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Connection timeout.
#
# cas.authn.saml-idp.metadata.amazon-s3.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.authn.saml-idp.metadata.amazon-s3.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.authn.saml-idp.metadata.amazon-s3.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.saml-idp.metadata.amazon-s3.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.saml-idp.metadata.amazon-s3.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.saml-idp.metadata.amazon-s3.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.saml-idp.metadata.amazon-s3.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.saml-idp.metadata.amazon-s3.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.saml-idp.metadata.amazon-s3.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.saml-idp.metadata.amazon-s3.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# AWS custom endpoint.
#
# cas.authn.saml-idp.metadata.amazon-s3.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# The collection name that is responsible to hold the identity provider
# metadata.
#
# cas.authn.saml-idp.metadata.amazon-s3.idp-metadata-bucket-name: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Local address.
#
# cas.authn.saml-idp.metadata.amazon-s3.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Maximum connections setting.
#
# cas.authn.saml-idp.metadata.amazon-s3.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Profile name to use.
#
# cas.authn.saml-idp.metadata.amazon-s3.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Profile path.
#
# cas.authn.saml-idp.metadata.amazon-s3.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.authn.saml-idp.metadata.amazon-s3.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.authn.saml-idp.metadata.amazon-s3.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.authn.saml-idp.metadata.amazon-s3.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# AWS region used.
#
# cas.authn.saml-idp.metadata.amazon-s3.region: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.authn.saml-idp.metadata.amazon-s3.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Socket timeout.
#
# cas.authn.saml-idp.metadata.amazon-s3.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-aws-s3
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.AmazonS3SamlMetadataProperties
#
# Flag that indicates whether to use reaper.
#
# cas.authn.saml-idp.metadata.amazon-s3.use-reaper: false

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because basic-authn-password setting is moved into the mdq namespace.
# Replace with: basic-authn-password setting is moved into the mdq namespace.
#
# 
#
# cas.authn.saml-idp.metadata.basic-authn-password: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because basic-authn-username setting is moved into the mdq namespace.
# Replace with: basic-authn-username setting is moved into the mdq namespace.
#
# 
#
# cas.authn.saml-idp.metadata.basic-authn-username: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# How long should metadata be cached.
#
# cas.authn.saml-idp.metadata.core.cache-expiration: PT24H

# Type: java.lang.Long
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Specifies the maximum number of entries the cache may contain. Note
# that the cache <b>may evict an entry before this limit is exceeded or
# temporarily exceed the threshold while evicting</b>. As the cache size
# grows close to the maximum, the cache evicts entries that are less
# likely to be used again. For example, the cache may evict an entry
# because it hasn't been used recently or very often.
#
# cas.authn.saml-idp.metadata.core.cache-maximum-size: 10000

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# The algorithm type/name that is used when generating certificates for
# the SAML2 identity provider. This setting is only relevant when
# artifacts needs to be generated.
#
# cas.authn.saml-idp.metadata.core.certificate-algorithm: SHA512withRSA

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether invalid metadata should eagerly fail quickly on startup once
# the resource is parsed.
#
# cas.authn.saml-idp.metadata.core.fail-fast: true

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# This is the key size that is used when generating the initial keypair
# that would hold the private/public key for the SAML2 metadata. This
# setting is only relevant when artifacts needs to be generated.
#
# cas.authn.saml-idp.metadata.core.key-size: 4096

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# When attempting to resolve metadata from sources, particularly URLs,
# this setting controls the number of retry attempts that CAS should
# execute when metadata resolution fails. Setting this value to a zero
# or negative value will disable the retry policy.
#
# cas.authn.saml-idp.metadata.core.maximum-retry-attempts: 3

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether valid metadata is required.
#
# cas.authn.saml-idp.metadata.core.require-valid-metadata: true

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether metadata generation process should support SLO service POST
# binding.
#
# cas.authn.saml-idp.metadata.core.slo-service-post-binding-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether metadata generation process should support SLO service
# REDIRECT binding.
#
# cas.authn.saml-idp.metadata.core.slo-service-redirect-binding-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether metadata generation process should support SSO service POST
# binding.
#
# cas.authn.saml-idp.metadata.core.sso-service-post-binding-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether metadata generation process should support SSO service POST
# SimpleSign binding.
#
# cas.authn.saml-idp.metadata.core.sso-service-post-simple-sign-binding-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether metadata generation process should support SSO service
# REDIRECT binding.
#
# cas.authn.saml-idp.metadata.core.sso-service-redirect-binding-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.CoreSamlMetadataProperties
#
# Whether metadata generation process should support SSO service SOAP
# binding.
#
# cas.authn.saml-idp.metadata.core.sso-service-soap-binding-enabled: true

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.FileSystemSamlMetadataProperties
#
# Directory location of SAML metadata and signing/encryption keys. This
# directory will be used to hold the configuration files.
#
# cas.authn.saml-idp.metadata.file-system.location: file:/etc/cas/saml

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.FileSystemSamlMetadataProperties
#
# Whether metadata generated on disk should be digitally signed. Signing
# operations use the saml2 identity provider's signing certificate and
# signing key.
#
# cas.authn.saml-idp.metadata.file-system.sign-metadata: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# The branch to checkout and activate, defaults to {@code master}.
#
# cas.authn.saml-idp.metadata.git.active-branch: master

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# If the repository is to be cloned, this will allow a select list of
# branches to be fetched. List the branch names separated by commas or
# use {@code *} to clone all branches. Defaults to all branches.
#
# cas.authn.saml-idp.metadata.git.branches-to-clone: *

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# When establishing an ssh session, determine if default identities
# loaded on the machine should be excluded/removed and identity should
# only be limited to those loaded from given keys.
#
# cas.authn.saml-idp.metadata.git.clear-existing-identities: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.saml-idp.metadata.git.clone-directory.location: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.saml-idp.metadata.git.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.saml-idp.metadata.git.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.saml-idp.metadata.git.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.saml-idp.metadata.git.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.saml-idp.metadata.git.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.saml-idp.metadata.git.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.saml-idp.metadata.git.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: org.apereo.cas.configuration.model.support.git.services.BaseGitProperties$HttpClientTypes
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Implementation of HTTP client to use when doing git operations via
# http/https. The jgit library sets the connection factory statically
# (globally) so this property should be set to the same value for all
# git repositories (services, saml, etc). Not doing so might result in
# one connection factory being used for clone and another for subsequent
# fetches.
# Available values are as follows:
# <ul><li>{@code JDK}:
# Built-in JDK http/https client.</li><li>{@code HTTP_CLIENT}: Apache
# HTTP Client http/https client.</li></ul>
#
# cas.authn.saml-idp.metadata.git.http-client-type: JDK

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Whether identity provider metadata artifacts are expected to be found
# in the database.
#
# cas.authn.saml-idp.metadata.git.idp-metadata-enabled: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Password used to access or push to the repository.
#
# cas.authn.saml-idp.metadata.git.password: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Password for the SSH private key.
#
# cas.authn.saml-idp.metadata.git.private-key-passphrase: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Type changed from File to Resource, but still needs to resolve to File.
# Replace with: Type changed from File to Resource, but still needs to resolve to File.
#
# 
#
# cas.authn.saml-idp.metadata.git.private-key-path: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.saml-idp.metadata.git.private-key.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Decide whether changes should be pushed back into the remote
# repository.
#
# cas.authn.saml-idp.metadata.git.push-changes: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Whether to rebase on pulls.
#
# cas.authn.saml-idp.metadata.git.rebase: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# The address of the git repository. Could be a URL or a file-system
# path.
#
# cas.authn.saml-idp.metadata.git.repository-url: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.saml-idp.metadata.git.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.saml-idp.metadata.git.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.saml-idp.metadata.git.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.saml-idp.metadata.git.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.saml-idp.metadata.git.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.saml-idp.metadata.git.schedule.start-delay: PT15S

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Whether commits should be signed.
#
# cas.authn.saml-idp.metadata.git.sign-commits: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# As with using SSH with public keys, an SSH session with {@code
# ssh://user@example.com/repo.git} must be specified to use
# password-secured SSH connections.
#
# cas.authn.saml-idp.metadata.git.ssh-session-password: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Whether on not to turn on strict host key checking. true will be
# "yes", false will be "no", "ask" not supported.
#
# cas.authn.saml-idp.metadata.git.strict-host-key-checking: true

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Timeout for git operations such as push and pull in seconds.
#
# cas.authn.saml-idp.metadata.git.timeout: PT10S

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-git
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.GitSamlMetadataProperties
#
# Username used to access or push to the repository.
#
# cas.authn.saml-idp.metadata.git.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.HttpSamlMetadataProperties
#
# Forcefully download and fetch metadata files form URL sources and
# disregard any cached copies of the metadata.
#
# cas.authn.saml-idp.metadata.http.force-metadata-refresh: true

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.HttpSamlMetadataProperties
#
# Directory location where downloaded SAML metadata is cached as backup
# files. If left undefined, the directory is calculated off of the
# metadata location on disk when specified. The directory location
# should also support and be resolvable via Spring expression language.
#
# cas.authn.saml-idp.metadata.http.metadata-backup-location: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.saml-idp.metadata.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.saml-idp.metadata.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.saml-idp.metadata.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.saml-idp.metadata.jpa.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.saml-idp.metadata.jpa.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.saml-idp.metadata.jpa.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.saml-idp.metadata.jpa.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.saml-idp.metadata.jpa.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.saml-idp.metadata.jpa.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.saml-idp.metadata.jpa.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.saml-idp.metadata.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.saml-idp.metadata.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.saml-idp.metadata.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.saml-idp.metadata.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.saml-idp.metadata.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.saml-idp.metadata.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.saml-idp.metadata.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.saml-idp.metadata.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.saml-idp.metadata.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.saml-idp.metadata.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.saml-idp.metadata.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Whether identity provider metadata artifacts are expected to be found
# in the database.
#
# cas.authn.saml-idp.metadata.jpa.idp-metadata-enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.saml-idp.metadata.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.saml-idp.metadata.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.saml-idp.metadata.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# The database connection password.
#
# cas.authn.saml-idp.metadata.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.saml-idp.metadata.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.saml-idp.metadata.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.saml-idp.metadata.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.saml-idp.metadata.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.saml-idp.metadata.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.saml-idp.metadata.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.saml-idp.metadata.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.saml-idp.metadata.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.saml-idp.metadata.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.saml-idp.metadata.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.saml-idp.metadata.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.saml-idp.metadata.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# The database connection URL.
#
# cas.authn.saml-idp.metadata.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-jpa
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.JpaSamlMetadataProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.saml-idp.metadata.jpa.user: sa

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because location setting is moved into the file-system namespace.
# Replace with: location setting is moved into the file-system namespace.
#
# 
#
# cas.authn.saml-idp.metadata.location: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MDQSamlMetadataProperties
#
# Basic auth password in case the metadata instance is connecting to an
# MDQ server.
#
# cas.authn.saml-idp.metadata.mdq.basic-authn-password: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MDQSamlMetadataProperties
#
# Basic auth username in case the metadata instance is connecting to an
# MDQ server.
#
# cas.authn.saml-idp.metadata.mdq.basic-authn-username: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MDQSamlMetadataProperties
#
# Supported content types in case the metadata instance is connecting to
# an MDQ server. {@link MediaType#TEXT_XML_VALUE} is supported by
# default.
#
# cas.authn.saml-idp.metadata.mdq.supported-content-type: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Name of the database to use for authentication.
#
# cas.authn.saml-idp.metadata.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.authn.saml-idp.metadata.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.authn.saml-idp.metadata.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.saml-idp.metadata.mongo.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.saml-idp.metadata.mongo.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.saml-idp.metadata.mongo.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.saml-idp.metadata.mongo.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.saml-idp.metadata.mongo.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.saml-idp.metadata.mongo.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.saml-idp.metadata.mongo.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# MongoDb database instance name.
#
# cas.authn.saml-idp.metadata.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.authn.saml-idp.metadata.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.authn.saml-idp.metadata.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# The collection name that is responsible to hold the identity provider
# metadata.
#
# cas.authn.saml-idp.metadata.mongo.idp-metadata-collection: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# MongoDb database password for authentication.
#
# cas.authn.saml-idp.metadata.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.authn.saml-idp.metadata.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.authn.saml-idp.metadata.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.authn.saml-idp.metadata.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.authn.saml-idp.metadata.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.authn.saml-idp.metadata.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.authn.saml-idp.metadata.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# MongoDb database port.
#
# cas.authn.saml-idp.metadata.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.authn.saml-idp.metadata.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.authn.saml-idp.metadata.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.authn.saml-idp.metadata.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.authn.saml-idp.metadata.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.authn.saml-idp.metadata.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Whether connections require SSL.
#
# cas.authn.saml-idp.metadata.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# MongoDb database connection timeout.
#
# cas.authn.saml-idp.metadata.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# MongoDb database user for authentication.
#
# cas.authn.saml-idp.metadata.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-mongo
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.MongoDbSamlMetadataProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.authn.saml-idp.metadata.mongo.write-concern: ACKNOWLEDGED

# Type: java.io.File
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.saml-idp.metadata.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.authn.saml-idp.metadata.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.authn.saml-idp.metadata.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.authn.saml-idp.metadata.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.authn.saml-idp.metadata.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.authn.saml-idp.metadata.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.authn.saml-idp.metadata.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.authn.saml-idp.metadata.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.authn.saml-idp.metadata.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.authn.saml-idp.metadata.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.authn.saml-idp.metadata.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.authn.saml-idp.metadata.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.authn.saml-idp.metadata.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.authn.saml-idp.metadata.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Connection timeout.
#
# cas.authn.saml-idp.metadata.redis.connect-timeout: PT10S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.saml-idp.metadata.redis.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.saml-idp.metadata.redis.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.saml-idp.metadata.redis.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.saml-idp.metadata.redis.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.saml-idp.metadata.redis.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.saml-idp.metadata.redis.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.saml-idp.metadata.redis.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Database index used by the connection factory.
#
# cas.authn.saml-idp.metadata.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.authn.saml-idp.metadata.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Redis server host.
#
# cas.authn.saml-idp.metadata.redis.host: localhost

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Whether identity provider metadata artifacts are expected to be found
# in the database.
#
# cas.authn.saml-idp.metadata.redis.idp-metadata-enabled: false

# Type: java.io.File
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.authn.saml-idp.metadata.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.authn.saml-idp.metadata.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.authn.saml-idp.metadata.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Login password of the redis server.
#
# cas.authn.saml-idp.metadata.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.authn.saml-idp.metadata.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.authn.saml-idp.metadata.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.authn.saml-idp.metadata.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.authn.saml-idp.metadata.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.authn.saml-idp.metadata.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.authn.saml-idp.metadata.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.authn.saml-idp.metadata.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.authn.saml-idp.metadata.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.authn.saml-idp.metadata.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.authn.saml-idp.metadata.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.authn.saml-idp.metadata.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.authn.saml-idp.metadata.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.authn.saml-idp.metadata.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.authn.saml-idp.metadata.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Redis server port.
#
# cas.authn.saml-idp.metadata.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Redis protocol version.
#
# cas.authn.saml-idp.metadata.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.authn.saml-idp.metadata.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.authn.saml-idp.metadata.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.authn.saml-idp.metadata.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.authn.saml-idp.metadata.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.authn.saml-idp.metadata.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.authn.saml-idp.metadata.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.authn.saml-idp.metadata.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Command timeout.
#
# cas.authn.saml-idp.metadata.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Database URI.
#
# cas.authn.saml-idp.metadata.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.authn.saml-idp.metadata.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Login username of the redis server.
#
# cas.authn.saml-idp.metadata.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-redis
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RedisSamlMetadataProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.authn.saml-idp.metadata.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-rest
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RestSamlMetadataProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.saml-idp.metadata.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-rest
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RestSamlMetadataProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.saml-idp.metadata.rest.basic-auth-username: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.saml-idp.metadata.rest.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.saml-idp.metadata.rest.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.saml-idp.metadata.rest.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.saml-idp.metadata.rest.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.saml-idp.metadata.rest.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.saml-idp.metadata.rest.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.saml-idp.metadata.rest.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-saml-idp-metadata-rest
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RestSamlMetadataProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.saml-idp.metadata.rest.headers: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp-metadata-rest
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RestSamlMetadataProperties
#
# Whether identity provider metadata artifacts are expected to be found
# in the database.
#
# cas.authn.saml-idp.metadata.rest.idp-metadata-enabled: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-rest
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RestSamlMetadataProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.saml-idp.metadata.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-saml-idp-metadata-rest
# Owner: org.apereo.cas.configuration.model.support.saml.idp.metadata.RestSamlMetadataProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.saml-idp.metadata.rest.url: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because supported-content-types setting is moved into the mdq namespace.
# Replace with: supported-content-types setting is moved into the mdq namespace.
#
# 
#
# cas.authn.saml-idp.metadata.supported-content-types: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.profile.SamlIdPSLOProfileProperties
#
# Whether the initial request should be explicitly url-decoded before
# it's consumed by the decoder.
#
# cas.authn.saml-idp.profile.slo.url-decode-redirect-request: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.profile.SamlIdPSSOSimpleSignProfileProperties
#
# Whether the initial request should be explicitly url-decoded before
# it's consumed by the decoder.
#
# cas.authn.saml-idp.profile.sso-post-simple-sign.url-decode-redirect-request: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.profile.SamlIdPSSOProfileProperties
#
# Whether the initial request should be explicitly url-decoded before
# it's consumed by the decoder.
#
# cas.authn.saml-idp.profile.sso.url-decode-redirect-request: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPResponseProperties
#
# Each individual attribute can be mapped to a particular name-format.
# Example: {@code
# attributeName->basic|uri|unspecified|custom-format-etc,...}.
#
# cas.authn.saml-idp.response.attribute-name-formats: 

# Type: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPResponseProperties$SignatureCredentialTypes
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPResponseProperties
#
# Indicate the encoding type of the credential used when rendering the
# saml response.
# Available values are as follows:
# <ul><li>{@code
# BASIC}: DER-Encoded format.</li><li>{@code X509}: PEM-encoded X509
# format.</li></ul>
#
# cas.authn.saml-idp.response.credential-type: X509

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPResponseProperties
#
# Indicates the default name-format for all attributes in case the
# individual attribute is not individually mapped.
#
# cas.authn.saml-idp.response.default-attribute-name-format: uri

# Type: java.lang.Boolean
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPResponseProperties
#
# Whether error responses should be signed.
#
# cas.authn.saml-idp.response.sign-error: false

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPResponseProperties
#
# Time unit in seconds used to skew authentication dates such as
# valid-from and valid-until elements.
#
# cas.authn.saml-idp.response.skew-allowance: PT30S

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property is moved to cas.server.scope to be applied globally.
# Replace with: Property is moved to cas.server.scope to be applied globally.
#
# 
#
# cas.authn.saml-idp.scope: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPServicesProperties
#
# Control the default, initial values for fields that are part of a SAML
# service definition. This is defined as a map where the key is the
# field name (i.e. {@code signAssertions}) and the value should be the
# default value. If a service definition explicitly defines a value for
# a field, that value will take over and the default defined here will
# be ignored. If a service definition does not define a value for a
# field and no defaults are specified for that field, then the default
# value that is directly assigned to the field in the body of the
# service definition will take over.
#
# cas.authn.saml-idp.services.defaults: 

# Type: java.lang.Long
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.AttributeQueryTicketProperties
#
# Number of seconds after which this ticket becomes invalid.
#
# cas.authn.saml-idp.ticket.attribute-query.time-to-kill-in-seconds: 8

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPTicketProperties
#
# name that should be given to the saml artifact cache storage name.
#
# cas.authn.saml-idp.ticket.saml-artifacts-cache-storage-name: samlArtifactsCache

# Type: java.lang.String
# Module: cas-server-support-saml-idp
# Owner: org.apereo.cas.configuration.model.support.saml.idp.SamlIdPTicketProperties
#
# The name that should be given to the saml attribute query cache
# storage name.
#
# cas.authn.saml-idp.ticket.saml-attribute-query-cache-storage-name: samlAttributeQueryCache

# Type: java.lang.String
# Module: cas-server-support-shibboleth
# Owner: org.apereo.cas.configuration.model.support.saml.shibboleth.ShibbolethIdPProperties
#
# The server url of the shibboleth idp deployment.
#
# cas.authn.shib-idp.server-url: localhost

# Type: java.lang.String
# Module: cas-server-support-soap-authentication
# Owner: org.apereo.cas.configuration.model.support.soap.SoapAuthenticationProperties
#
# The name of the authentication handler.
#
# cas.authn.soap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-soap-authentication
# Owner: org.apereo.cas.configuration.model.support.soap.SoapAuthenticationProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.soap.order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.soap.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.soap.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.soap.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.soap.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.soap.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.soap.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.soap.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.soap.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.soap.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.soap.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.soap.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.soap.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.soap.principal-transformation.suffix: 

# Type: java.lang.String
# Module: cas-server-support-soap-authentication
# Owner: org.apereo.cas.configuration.model.support.soap.SoapAuthenticationProperties
#
# URL of the SOAP endpoint.
#
# cas.authn.soap.url: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# Alternative header name to use in order to find the host address.
#
# cas.authn.spnego.alternative-remote-host-attribute: alternateRemoteHeader

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# When validating clients, specifies the DNS timeout used to look up an
# address.
#
# cas.authn.spnego.dns-timeout: PT2S

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# The bean id of a webflow action whose job is to evaluate the client
# host to see if the request is authorized for spnego. Supported
# strategies include {@code hostnameSpnegoClientAction} where CAS checks
# to see if the request’s remote hostname matches a predefine pattern.
# and {@code ldapSpnegoClientAction} where CAS checks an LDAP instance
# for the remote hostname, to locate a pre-defined attribute whose mere
# existence would allow the webflow to resume to SPNEGO.
#
# cas.authn.spnego.host-name-client-action-strategy: hostnameSpnegoClientAction

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# A regex pattern that indicates whether the client host name is allowed
# for spnego.
#
# cas.authn.spnego.host-name-pattern-string: .+

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# A regex pattern that indicates whether the client IP is allowed for
# spnego.
#
# cas.authn.spnego.ips-to-check-pattern: 127.+

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.spnego.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.spnego.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.spnego.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.spnego.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.spnego.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.spnego.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.spnego.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.spnego.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.spnego.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.spnego.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.spnego.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Set if search referrals should be followed.
#
# cas.authn.spnego.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.spnego.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.spnego.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.spnego.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Keystore password.
#
# cas.authn.spnego.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.spnego.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.spnego.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.spnego.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.spnego.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Name of the LDAP handler.
#
# cas.authn.spnego.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.spnego.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.spnego.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.spnego.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Duration of time to wait for responses.
#
# cas.authn.spnego.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# SASL authorization id.
#
# cas.authn.spnego.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The SASL mechanism.
#
# cas.authn.spnego.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.spnego.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# SASL quality of protected.
#
# cas.authn.spnego.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The SASL realm.
#
# cas.authn.spnego.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# SASL security strength.
#
# cas.authn.spnego.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Search handlers.
#
# cas.authn.spnego.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.spnego.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.spnego.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.spnego.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.spnego.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.spnego.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.spnego.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.spnego.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.spnego.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.spnego.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.spnego.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.spnego.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.spnego.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.spnego.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.spnego.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.spnego.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.spnego.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.spnego.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.spnego.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.spnego.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.spnego.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Password needed to open the truststore.
#
# cas.authn.spnego.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.spnego.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.spnego.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.spnego.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Period at which pool should be validated.
#
# cas.authn.spnego.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.spnego.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoLdapProperties
#
# Period at which validation operations may time out.
#
# cas.authn.spnego.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.spnego.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.spnego.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.spnego.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.spnego.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.spnego.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.spnego.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.spnego.ldap.validator.type: search

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# If true, does not terminate authentication and allows CAS to resume
# and fallback to normal authentication means such as uid/psw via the
# login page. If disallowed, considers spnego authentication to be final
# in the event of failures.
#
# cas.authn.spnego.mixed-mode-authentication: false

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# Name of the authentication handler.
#
# cas.authn.spnego.name: 

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# Allows authentication if spnego credential is marked as NTLM.
#
# cas.authn.spnego.ntlm-allowed: true

# Type: java.lang.Integer
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.spnego.order: 

# Type: java.lang.Integer
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# The size of the pool used to validate SPNEGO tokens. A pool is used to
# provider better performance than what was previously offered by the
# simple Lombok {@code Synchronized} annotation.
#
# cas.authn.spnego.pool-size: 10

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# The timeout of the pool used to validate SPNEGO tokens.
#
# cas.authn.spnego.pool-timeout: PT2S

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.spnego.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.spnego.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.spnego.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.spnego.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.spnego.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.spnego.principal-transformation.suffix: 

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# If specified, will create the principal by ths name on successful
# authentication.
#
# cas.authn.spnego.principal-with-domain-name: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Activated attribute repository identifiers that should be used for
# fetching attributes if attribute resolution is enabled. The list here
# may include identifiers separated by comma.
#
# cas.authn.spnego.principal.active-attribute-repository-ids: *

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Control the behavior of the attribute repository selection by
# authentication method or handler. The map here is keyed by the
# authentication handler name, and the value is the attribute repository
# identifiers separated by comma. When the authentication handler is
# executed, the attribute repositories assigned to this handler will be
# selected to fetch attributes. Note that the resolution engine will
# always favor attribute repositories assigned to the service
# definition, if any and as part of its authentication policy, over this
# global setting.
#
# cas.authn.spnego.principal.attribute-repository-selection: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Whether attribute repositories should be contacted to fetch person
# attributes. Defaults to true if not set.
# Available values are as
# follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.spnego.principal.attribute-resolution-enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Attribute name to use to indicate the identifier of the principal
# constructed. If the attribute is blank or has no values, the default
# principal id will be used determined by the underlying authentication
# engine. The principal id attribute usually is removed from the
# collection of attributes collected, though this behavior depends on
# the schematics of the underlying authentication strategy.
#
# cas.authn.spnego.principal.principal-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# In the event that the principal resolution engine resolves more than
# one principal, (specially if such principals in the chain have
# different identifiers), this setting determines strategy by which the
# principal id would be chosen from the chain. Accepted values are:
# {@code last}, {@code first}.
#
# cas.authn.spnego.principal.principal-resolution-conflict-strategy: last

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# When true, throws an error back indicating that principal resolution
# has failed and no principal can be found based on the authentication
# requirements. Otherwise, logs the condition as an error without
# raising a catastrophic error.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.spnego.principal.principal-resolution-failure-fatal: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.spnego.principal.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.spnego.principal.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.spnego.principal.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.spnego.principal.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.spnego.principal.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.spnego.principal.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Return a null principal object if no attributes can be found for the
# principal.
# Available values are as follows:
# <ul><li>{@code TRUE}:
# Constant to represent the true state.</li><li>{@code FALSE}: Constant
# to represent the false state.</li><li>{@code UNDEFINED}: Constant to
# represent the undefined state.</li></ul>
#
# cas.authn.spnego.principal.return-null: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Uses an existing principal id that may have already been established
# in order to run person directory queries. This is generally useful in
# situations where authentication is delegated to an external identity
# provider and a principal is first established to then query an
# attribute source.
# Available values are as follows:
# <ul><li>{@code
# TRUE}: Constant to represent the true state.</li><li>{@code FALSE}:
# Constant to represent the false state.</li><li>{@code UNDEFINED}:
# Constant to represent the undefined state.</li></ul>
#
# cas.authn.spnego.principal.use-existing-principal-id: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties>
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# Individual authentication settings for spengo that are grouped and fed
# to the spnego authentication object to form a collection.
#
# cas.authn.spnego.properties: 

# Type: long
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# Jcifs Netbios cache policy.
#
# cas.authn.spnego.properties[].cache-policy: 600

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# The Jcifs domain.
#
# cas.authn.spnego.properties[].jcifs-domain: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# The Jcifs domain controller.
#
# cas.authn.spnego.properties[].jcifs-domain-controller: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# The Jcifs netbios wins.
#
# cas.authn.spnego.properties[].jcifs-netbios-wins: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# The Jcifs password.
#
# cas.authn.spnego.properties[].jcifs-password: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# The Jcifs service password.
#
# cas.authn.spnego.properties[].jcifs-service-password: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# The Jcifs service principal.
#
# cas.authn.spnego.properties[].jcifs-service-principal: HTTP/cas.example.com@EXAMPLE.COM

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# The Jcifs username.
#
# cas.authn.spnego.properties[].jcifs-username: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoAuthenticationProperties
#
# Spnego JCIFS timeout.
#
# cas.authn.spnego.properties[].timeout: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# If the authenticated principal cannot be determined from the spegno
# credential, will set the http status code to 401.
#
# cas.authn.spnego.send401-on-authentication-failure: true

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# In case LDAP is used to validate clients, this is the attribute that
# indicates the host.
#
# cas.authn.spnego.spnego-attribute-name: distinguishedName

# Type: java.lang.String
# Module: cas-server-support-spnego-webflow
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoProperties
#
# Begins negotiating spnego if the user-agent is one of the supported
# browsers.
#
# cas.authn.spnego.supported-browsers: MSIE,Trident,Firefox,AppleWebKit

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoSystemProperties
#
# The Kerberos conf. As with all Kerberos installations, a Kerberos Key
# Distribution Center (KDC) is required. It needs to contain the user
# name and password you will use to be authenticated to Kerberos. As
# with most Kerberos installations, a Kerberos configuration file
# krb5.conf is consulted to determine such things as the default realm
# and KDC. Typically, the default realm and the KDC for that realm are
# indicated in the Kerberos krb5.conf configuration file. The path to
# the configuration file must typically be defined as an absolute path.
#
# cas.authn.spnego.system.kerberos-conf: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoSystemProperties
#
# The Kerberos debug.
#
# cas.authn.spnego.system.kerberos-debug: 

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoSystemProperties
#
# The Kerberos kdc.
#
# cas.authn.spnego.system.kerberos-kdc: 172.10.1.10

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoSystemProperties
#
# The Kerberos realm.
#
# cas.authn.spnego.system.kerberos-realm: EXAMPLE.COM

# Type: java.lang.String
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoSystemProperties
#
# The Login conf.Absolute path to the jaas login configuration file.
# This should define the spnego authentication details. Make sure you
# have at least specified the JCIFS Service Principal defined.
#
# cas.authn.spnego.system.login-conf: 

# Type: java.lang.Boolean
# Module: cas-server-support-spnego
# Owner: org.apereo.cas.configuration.model.support.spnego.SpnegoSystemProperties
#
# The Use subject creds only.
#
# cas.authn.spnego.system.use-subject-creds-only: false

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.authn.spnego.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.authn.spnego.webflow.order: 0

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateCoreAuthenticationProperties
#
# Impersonation can be authorized for all primary users/subjects
# carrying specific attributes with a predefined matching value
# specified via {@link #principalAttributeValues}. Needless to say, the
# attributes need to have been resolved for the primary principal prior
# to this step. Matching and comparison operations are case insensitive.
#
# cas.authn.surrogate.core.principal-attribute-names: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateCoreAuthenticationProperties
#
# The regular expression that is cross matched against the principal
# attribute to determine if the account is authorized for impersonation.
# Matching and comparison operations are case insensitive.
#
# cas.authn.surrogate.core.principal-attribute-values: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateCoreAuthenticationProperties
#
# The separator character used to distinguish between the surrogate
# account and the admin/primary account. For example, if you are {@code
# casuser} and you need to switch to {@code jsmith} as the surrogate
# (impersonated) user, the username provided to CAS would be {@code
# jsmith+casuser}.
#
# cas.authn.surrogate.core.separator: +

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateGroovyAuthenticationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.surrogate.groovy.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.surrogate.jdbc.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.surrogate.jdbc.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.surrogate.jdbc.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.surrogate.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.surrogate.jdbc.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.surrogate.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.surrogate.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.surrogate.jdbc.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.surrogate.jdbc.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.surrogate.jdbc.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.surrogate.jdbc.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.surrogate.jdbc.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.surrogate.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.surrogate.jdbc.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.surrogate.jdbc.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.surrogate.jdbc.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.surrogate.jdbc.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# The database connection password.
#
# cas.authn.surrogate.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.surrogate.jdbc.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.surrogate.jdbc.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.surrogate.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.surrogate.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.surrogate.jdbc.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.surrogate.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.surrogate.jdbc.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.surrogate.jdbc.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.surrogate.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.surrogate.jdbc.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.surrogate.jdbc.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.surrogate.jdbc.read-only: false

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# SQL query to use in order to retrieve the list of qualified accounts
# for impersonation for a given admin user.
#
# cas.authn.surrogate.jdbc.surrogate-account-query: SELECT surrogate_user AS surrogateAccount FROM surrogate WHERE username=?

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# Surrogate query to use to determine whether an admin user can
# impersonate another user. The query must return an integer count of
# greater than zero.
#
# cas.authn.surrogate.jdbc.surrogate-search-query: SELECT COUNT(*) FROM surrogate WHERE username=?

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# The database connection URL.
#
# cas.authn.surrogate.jdbc.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-jdbc
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJdbcAuthenticationProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.surrogate.jdbc.user: sa

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateJsonAuthenticationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.surrogate.json.location: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties>
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateAuthenticationProperties
#
# Locate surrogate accounts via an LDAP servers.
#
# cas.authn.surrogate.ldap: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.authn.surrogate.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.surrogate.ldap[].allow-multiple-entries: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Base DN to use.
# There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating
# the LDAP configuration block for each individual
# base-dn, each entry can be specified
# and joined together using a
# special delimiter character. The user DN is retrieved using the
# combination of all base-dn and DN
# resolvers in the order defined. DN
# resolution should fail if multiple DNs are found. Otherwise the first
# DN found is returned.
# Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.surrogate.ldap[].base-dn: 

# Type: java.util.List<String>
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.authn.surrogate.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.surrogate.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.authn.surrogate.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.authn.surrogate.ldap[].block-wait-time: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.surrogate.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.authn.surrogate.ldap[].connection-strategy: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.surrogate.ldap[].disable-pooling: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.authn.surrogate.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Set if search referrals should be followed.
#
# cas.authn.surrogate.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.surrogate.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.surrogate.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.authn.surrogate.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Keystore password.
#
# cas.authn.surrogate.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.surrogate.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.surrogate.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.surrogate.ldap[].max-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Attribute that must be found on the LDAP entry linked to the admin
# user
# that tags the account as authorized for impersonation.
# All
# attribute values are then compared against the pattern you specify in
# {@link #getMemberAttributeValueRegex()}.
#
# cas.authn.surrogate.ldap[].member-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# A pattern that is matched against the attribute value of the admin
# user,
# that allows for further authorization of the admin user and
# accounts qualified for impersonation.
# The regular expression pattern
# is expected to contain at least a single group whose value on a
#
# successful match indicates the qualified impersonated user by admin.
#
# cas.authn.surrogate.ldap[].member-attribute-value-regex: 

# Type: int
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.authn.surrogate.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Name of the LDAP handler.
#
# cas.authn.surrogate.ldap[].name: 

# Type: int
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Request that the server return results in batches of a
# specific
# size. See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>.
# This control is often
# used to work around server result size
# limits.
# A negative/zero value disables paged requests.
#
# cas.authn.surrogate.ldap[].page-size: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.authn.surrogate.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.authn.surrogate.ldap[].prune-period: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Duration of time to wait for responses.
#
# cas.authn.surrogate.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# SASL authorization id.
#
# cas.authn.surrogate.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The SASL mechanism.
#
# cas.authn.surrogate.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.surrogate.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# SASL quality of protected.
#
# cas.authn.surrogate.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The SASL realm.
#
# cas.authn.surrogate.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# SASL security strength.
#
# cas.authn.surrogate.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.surrogate.ldap[].search-entry-handlers.search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.surrogate.ldap[].search-entry-handlers.type: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# User filter to use for searching.
# Syntax is {@code cn={user}} or
# {@code cn={0}}.
# <p>
# You may also provide an external groovy
# script
# in the syntax of {@code file:/path/to/GroovyScript.groovy}
#
# to fully build the final filter template dynamically.
#
# cas.authn.surrogate.ldap[].search-filter: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.surrogate.ldap[].subtree-search: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# LDAP search filter used to locate the surrogate account.
# The query
# is expected to determine whether the primary user is authorized
# to
# impersonate the given account. These fields may be referred to in the
# LDAP search
# query via {@code {user}} and {@code {surrogate}}
# placeholders.
# If the query result yields a value that points to an
# LDAP entry, impersonation is authorized
# for the given accounts.
#
# <p>An example might be
# <pre>(&(uid={user})(xyzMemberOf=actAs:{surrogate}))</pre>
#
# cas.authn.surrogate.ldap[].surrogate-search-filter: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# An optional LDAP validation filter that attempts to look for
# surrogate/impersonatee
# account in LDAP once authorization has been
# granted via {@link #getSurrogateSearchFilter()}.
# You can use this
# validation filter to ensure the surrogate/impersonatee does exist in
# LDAP.
# The LDAP filter may use {@code {surrogate}} as a placeholder
# in the filter to locate the surrogate account.
# <p>An example might
# be: <pre>(&(uid={surrogate})(authorized=TRUE))}</pre>
#
# cas.authn.surrogate.ldap[].surrogate-validation-filter: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.authn.surrogate.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.authn.surrogate.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.surrogate.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Password needed to open the truststore.
#
# cas.authn.surrogate.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.authn.surrogate.ldap[].trust-store-type: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.surrogate.ldap[].use-start-tls: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.surrogate.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Period at which pool should be validated.
#
# cas.authn.surrogate.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.surrogate.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-ldap
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateLdapAuthenticationProperties
#
# Period at which validation operations may time out.
#
# cas.authn.surrogate.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.surrogate.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.surrogate.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.surrogate.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.surrogate.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.surrogate.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.surrogate.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.authn.surrogate.ldap[].validator.type: search

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.authn.surrogate.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.authn.surrogate.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.authn.surrogate.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.authn.surrogate.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.surrogate.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.surrogate.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.authn.surrogate.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.authn.surrogate.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.authn.surrogate.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.authn.surrogate.mail.validate-addresses: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Activated attribute repository identifiers that should be used for
# fetching attributes if attribute resolution is enabled. The list here
# may include identifiers separated by comma.
#
# cas.authn.surrogate.principal.active-attribute-repository-ids: *

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Control the behavior of the attribute repository selection by
# authentication method or handler. The map here is keyed by the
# authentication handler name, and the value is the attribute repository
# identifiers separated by comma. When the authentication handler is
# executed, the attribute repositories assigned to this handler will be
# selected to fetch attributes. Note that the resolution engine will
# always favor attribute repositories assigned to the service
# definition, if any and as part of its authentication policy, over this
# global setting.
#
# cas.authn.surrogate.principal.attribute-repository-selection: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Whether attribute repositories should be contacted to fetch person
# attributes. Defaults to true if not set.
# Available values are as
# follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.surrogate.principal.attribute-resolution-enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Attribute name to use to indicate the identifier of the principal
# constructed. If the attribute is blank or has no values, the default
# principal id will be used determined by the underlying authentication
# engine. The principal id attribute usually is removed from the
# collection of attributes collected, though this behavior depends on
# the schematics of the underlying authentication strategy.
#
# cas.authn.surrogate.principal.principal-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# In the event that the principal resolution engine resolves more than
# one principal, (specially if such principals in the chain have
# different identifiers), this setting determines strategy by which the
# principal id would be chosen from the chain. Accepted values are:
# {@code last}, {@code first}.
#
# cas.authn.surrogate.principal.principal-resolution-conflict-strategy: last

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# When true, throws an error back indicating that principal resolution
# has failed and no principal can be found based on the authentication
# requirements. Otherwise, logs the condition as an error without
# raising a catastrophic error.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.surrogate.principal.principal-resolution-failure-fatal: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.surrogate.principal.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.surrogate.principal.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.surrogate.principal.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.surrogate.principal.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.surrogate.principal.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.surrogate.principal.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Return a null principal object if no attributes can be found for the
# principal.
# Available values are as follows:
# <ul><li>{@code TRUE}:
# Constant to represent the true state.</li><li>{@code FALSE}: Constant
# to represent the false state.</li><li>{@code UNDEFINED}: Constant to
# represent the undefined state.</li></ul>
#
# cas.authn.surrogate.principal.return-null: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Uses an existing principal id that may have already been established
# in order to run person directory queries. This is generally useful in
# situations where authentication is delegated to an external identity
# provider and a principal is first established to then query an
# attribute source.
# Available values are as follows:
# <ul><li>{@code
# TRUE}: Constant to represent the true state.</li><li>{@code FALSE}:
# Constant to represent the false state.</li><li>{@code UNDEFINED}:
# Constant to represent the undefined state.</li></ul>
#
# cas.authn.surrogate.principal.use-existing-principal-id: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-rest
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateRestfulAuthenticationProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.authn.surrogate.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-rest
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateRestfulAuthenticationProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.authn.surrogate.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-surrogate-authentication-rest
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateRestfulAuthenticationProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.surrogate.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-rest
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateRestfulAuthenticationProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.authn.surrogate.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-surrogate-authentication-rest
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateRestfulAuthenticationProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.authn.surrogate.rest.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.surrogate.simple.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.surrogate.simple.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.surrogate.simple.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.surrogate.simple.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.surrogate.simple.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.surrogate.simple.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.surrogate.simple.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.surrogate.simple.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.surrogate.simple.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.surrogate.simple.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.surrogate.simple.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Set if search referrals should be followed.
#
# cas.authn.surrogate.simple.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.surrogate.simple.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.surrogate.simple.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.surrogate.simple.keystore: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Keystore password.
#
# cas.authn.surrogate.simple.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.surrogate.simple.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.surrogate.simple.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.surrogate.simple.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.surrogate.simple.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Name of the LDAP handler.
#
# cas.authn.surrogate.simple.name: 

# Type: java.lang.Integer
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.surrogate.simple.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.surrogate.simple.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.surrogate.simple.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Duration of time to wait for responses.
#
# cas.authn.surrogate.simple.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# SASL authorization id.
#
# cas.authn.surrogate.simple.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The SASL mechanism.
#
# cas.authn.surrogate.simple.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.surrogate.simple.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# SASL quality of protected.
#
# cas.authn.surrogate.simple.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The SASL realm.
#
# cas.authn.surrogate.simple.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# SASL security strength.
#
# cas.authn.surrogate.simple.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Search handlers.
#
# cas.authn.surrogate.simple.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.surrogate.simple.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.surrogate.simple.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.surrogate.simple.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.surrogate.simple.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.surrogate.simple.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.surrogate.simple.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.surrogate.simple.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.surrogate.simple.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.surrogate.simple.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.surrogate.simple.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.surrogate.simple.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.surrogate.simple.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.surrogate.simple.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.surrogate.simple.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.surrogate.simple.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.surrogate.simple.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.surrogate.simple.subtree-search: true

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Define the list of accounts that are allowed to impersonate. This is
# done in a key-value structure where the key is the admin user and the
# value is a comma-separated list of identifiers that can be
# impersonated by the admin-user.
#
# cas.authn.surrogate.simple.surrogates: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.surrogate.simple.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.surrogate.simple.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.surrogate.simple.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Password needed to open the truststore.
#
# cas.authn.surrogate.simple.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.surrogate.simple.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.surrogate.simple.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.surrogate.simple.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Period at which pool should be validated.
#
# cas.authn.surrogate.simple.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.surrogate.simple.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateSimpleAuthenticationProperties
#
# Period at which validation operations may time out.
#
# cas.authn.surrogate.simple.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.surrogate.simple.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.surrogate.simple.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.surrogate.simple.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.surrogate.simple.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.surrogate.simple.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.surrogate.simple.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.surrogate.simple.validator.type: search

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# Principal attribute names that indicates the destination phone number
# for this SMS message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.authn.surrogate.sms.attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The from address for the message.
#
# cas.authn.surrogate.sms.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The body of the SMS message.
#
# cas.authn.surrogate.sms.text: 

# Type: java.lang.Long
# Module: cas-server-support-surrogate-webflow
# Owner: org.apereo.cas.configuration.model.support.surrogate.SurrogateAuthenticationTicketGrantingTicketProperties
#
# Timeout in seconds to kill the surrogate session and consider tickets
# expired.
#
# cas.authn.surrogate.tgt.time-to-kill-in-seconds: 1800

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAuthenticationProperties
#
# Map of attributes that optionally may be used to control the names of
# the collected attributes from Syncope. If an attribute is provided by
# Syncope, it can be listed here as the key of the map with a value that
# should be the name of that attribute as collected and recorded by CAS.
# For example, the convention {@code lastLoginDate->lastDate} will
# process the Syncope attribute {@code lastLoginDate} and will
# internally rename that to {@code lastDate}. If no mapping is
# specified, CAS defaults will be used instead. In other words, this
# settings allows one to virtually rename and remap Syncopen attributes
# during the authentication event.
#
# cas.authn.syncope.attribute-mappings: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase. The credential criteria may be one of the following
# options:<ul> <li>1) A regular expression pattern that is tested
# against the credential identifier.</li> <li>2) A fully qualified class
# name of your own design that implements {@code Predicate}.</li> <li>3)
# Path to an external Groovy script that implements the same
# interface.</li> </ul>
#
# cas.authn.syncope.credential-criteria: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAuthenticationProperties
#
# Syncope domain used for authentication, etc. Multiple domains can be
# separated via comma. Each domain entry results in a separate
# authentication attempt and transaction by CAS.
#
# cas.authn.syncope.domain: Master

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.syncope.name: 

# Type: java.lang.Integer
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAuthenticationProperties
#
# The order of this authentication handler in the chain.
#
# cas.authn.syncope.order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.authn.syncope.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.authn.syncope.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.authn.syncope.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.authn.syncope.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.authn.syncope.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.authn.syncope.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.authn.syncope.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.syncope.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.syncope.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.syncope.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.syncope.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.syncope.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.syncope.principal-transformation.suffix: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Map of attributes that optionally may be used to control the names of
# the collected attributes from Syncope. If an attribute is provided by
# Syncope, it can be listed here as the key of the map with a value that
# should be the name of that attribute as collected and recorded by CAS.
# For example, the convention {@code lastLoginDate->lastDate} will
# process the Syncope attribute {@code lastLoginDate} and will
# internally rename that to {@code lastDate}. If no mapping is
# specified, CAS defaults will be used instead.
#
# cas.authn.syncope.provisioning.attribute-mappings: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Specify the password for REST authentication.
#
# cas.authn.syncope.provisioning.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Specify the username for REST authentication.
#
# cas.authn.syncope.provisioning.basic-auth-username: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Syncope domain used for authentication, etc. Multiple domains can be
# separated via comma. Each domain entry results in a separate
# authentication attempt and transaction by CAS.
#
# cas.authn.syncope.provisioning.domain: Master

# Type: java.lang.Boolean
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Whether or not provisioning should be enabled with Syncope.
#
# cas.authn.syncope.provisioning.enabled: false

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.authn.syncope.provisioning.headers: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Syncope realm used for principal provisioning. Realms define a
# hierarchical security domain tree, primarily meant for containing
# users. The root realm contains everything, and other realms can be
# seen as containers that split up the total number of entities into
# smaller pools.
#
# cas.authn.syncope.provisioning.realm: /

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# User FIQL filter to use for searching. Syntax is {@code
# username=={user}} or {@code username=={0}}.
#
# cas.authn.syncope.provisioning.search-filter: username=={user}

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopePrincipalProvisioningProperties
#
# Syncope instance URL primary used for REST.
#
# cas.authn.syncope.provisioning.url: 

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.syncope.state: 

# Type: java.lang.String
# Module: cas-server-support-syncope-authentication
# Owner: org.apereo.cas.configuration.model.support.syncope.SyncopeAuthenticationProperties
#
# Syncope instance URL primary used for REST.
#
# cas.authn.syncope.url: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the core namespace.
# Replace with: Setting is moved into the core namespace.
#
# 
#
# cas.authn.throttle.app-code: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties>
# Module: cas-server-support-throttle-bucket4j
# Owner: org.apereo.cas.configuration.model.support.throttle.Bucket4jThrottleProperties
#
# Describe the available bandwidth and the overall limitations. Multiple
# bandwidths allow for different policies per unit of measure. (i.e.
# allows 1000 tokens per 1 minute, but not often then 50 tokens per 1
# second).
#
# cas.authn.throttle.bucket4j.bandwidth: 

# Type: long
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Number of tokens/requests that can be used within the time window.
#
# cas.authn.throttle.bucket4j.bandwidth[].capacity: 120

# Type: java.lang.String
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Time window in which capacity can be allowed.
#
# cas.authn.throttle.bucket4j.bandwidth[].duration: PT60S

# Type: long
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# By default initial size of bucket equals to capacity.
# But sometimes,
# you may want to have lesser initial size,
# for example for case of
# cold start in order to prevent denial of service.
#
# cas.authn.throttle.bucket4j.bandwidth[].initial-tokens: 

# Type: long
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# The number of tokens that should be used to refill the bucket
# given
# the specified refill duration.
#
# cas.authn.throttle.bucket4j.bandwidth[].refill-count: 10

# Type: java.lang.String
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Duration to use to refill the bucket.
#
# cas.authn.throttle.bucket4j.bandwidth[].refill-duration: PT30S

# Type: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties.BandwidthRefillStrategies
# Module: cas-server-support-bucket4j-core
# Owner: org.apereo.cas.configuration.model.support.bucket4j.Bucket4jBandwidthLimitProperties
#
# Describes how the bucket should be refilled.
# Specifies the speed of
# tokens regeneration.
# Available values are as follows:
#
# <ul><li>{@code GREEDY}: This type of refill regenerates tokens in a
# greedy manner; it tries to add the
# tokens to bucket as soon as
# possible. For example refill "10 tokens per 1 second"
# adds 1 token
# per each 100 millisecond; in other words refill will
# not wait 1
# second to regenerate 10 tokens.</li><li>{@code INTERVALLY}: This type
# of refill regenerates tokens in intervally manner. "Intervally"
# in
# opposite to "greedy" will wait until whole period would be
# elapsed
# before regenerating tokens.</li></ul>
#
# cas.authn.throttle.bucket4j.bandwidth[].refill-strategy: GREEDY

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-bucket4j
# Owner: org.apereo.cas.configuration.model.support.throttle.Bucket4jThrottleProperties
#
# Whether the request should block until capacity becomes available.
# Consume a token from the token bucket. If a token is not available
# this will block until the refill adds one to the bucket.
#
# cas.authn.throttle.bucket4j.blocking: true

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-bucket4j
# Owner: org.apereo.cas.configuration.model.support.throttle.Bucket4jThrottleProperties
#
# Decide whether bucket4j functionality should be enabled.
#
# cas.authn.throttle.bucket4j.enabled: true

# Type: java.lang.String
# Module: cas-server-support-throttle
# Owner: org.apereo.cas.configuration.model.support.throttle.ThrottleCoreProperties
#
# Application code used to identify this application in the audit logs.
#
# cas.authn.throttle.core.app-code: CAS

# Type: java.lang.String
# Module: cas-server-support-throttle
# Owner: org.apereo.cas.configuration.model.support.throttle.ThrottleCoreProperties
#
# Request header name to use in order to extract a header value from the
# request.
#
# cas.authn.throttle.core.header-name: 

# Type: java.lang.String
# Module: cas-server-support-throttle
# Owner: org.apereo.cas.configuration.model.support.throttle.ThrottleCoreProperties
#
# Username parameter to use in order to extract the username from the
# request.
#
# cas.authn.throttle.core.username-parameter: 

# Type: java.lang.String
# Module: cas-server-support-throttle
# Owner: org.apereo.cas.configuration.model.support.throttle.ThrottleFailureProperties
#
# Failure code to record in the audit log. Generally this indicates an
# authentication failure event.
#
# cas.authn.throttle.failure.code: AUTHENTICATION_FAILED

# Type: java.lang.Integer
# Module: cas-server-support-throttle
# Owner: org.apereo.cas.configuration.model.support.throttle.ThrottleFailureProperties
#
# Period of time in seconds for the threshold rate.
#
# cas.authn.throttle.failure.range-seconds: -1

# Type: java.lang.Integer
# Module: cas-server-support-throttle
# Owner: org.apereo.cas.configuration.model.support.throttle.ThrottleFailureProperties
#
# Number of failed login attempts for the threshold rate.
#
# cas.authn.throttle.failure.threshold: -1

# Type: java.lang.String
# Module: cas-server-support-throttle
# Owner: org.apereo.cas.configuration.model.support.throttle.ThrottleFailureProperties
#
# Indicate the number of seconds the account should remain in a
# locked/throttled state before it can be released to continue again. If
# no value is specified, the failure threshold and rate that is
# calculated would hold.
#
# cas.authn.throttle.failure.throttle-window-seconds: 0

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports both synchronous and asynchronous backups. By
# default, backup operations are synchronous. In this case, backup
# operations block operations until backups are successfully copied to
# backup members (or deleted from backup members in case of remove) and
# acknowledgements are received. Therefore, backups are updated before a
# put operation is completed, provided that the cluster is stable.
# Asynchronous backups, on the other hand, do not block operations. They
# are fire and forget and do not require acknowledgements; the backup
# operations are performed at some point in time.
#
# cas.authn.throttle.hazelcast.cluster.core.async-backup-count: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Used when replication is turned on with {@link #isReplicated()}. <p>
# If a new member joins the cluster, there are two ways you can handle
# the initial provisioning that is executed to replicate all existing
# values to the new member. Each involves how you configure the async
# fill up. <ul> <li>First, you can configure async fill up to true,
# which does not block reads while the fill up operation is underway.
# That way, you have immediate access on the new member, but it will
# take time until all the values are eventually accessible. Not yet
# replicated values are returned as non-existing (null). </li>
# <li>Second, you can configure for a synchronous initial fill up (by
# configuring the async fill up to false), which blocks every read or
# write access to the map until the fill up operation is finished. Use
# this with caution since it might block your application from
# operating.</li> </ul>
#
# cas.authn.throttle.hazelcast.cluster.core.async-fillup: true

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# To provide data safety, Hazelcast allows you to specify the number of
# backup copies you want to have. That way, data on a cluster member
# will be copied onto other member(s). To create synchronous backups,
# select the number of backup copies. When this count is 1, a map entry
# will have its backup on one other member in the cluster. If you set it
# to 2, then a map entry will have its backup on two other members. You
# can set it to 0 if you do not want your entries to be backed up, e.g.,
# if performance is more important than backing up. The maximum value
# for the backup count is 6. Sync backup operations have a blocking cost
# which may lead to latency issues.
#
# cas.authn.throttle.hazelcast.cluster.core.backup-count: 1

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# CP Subsystem is a component of a Hazelcast cluster that builds a
# strongly consistent layer for a set of distributed data structures.
# Its data structures are CP with respect to the CAP principle, i.e.,
# they always maintain linearizability and prefer consistency over
# availability during network partitions. Besides network partitions, CP
# Subsystem withstands server and client failures. All members of a
# Hazelcast cluster do not necessarily take part in CP Subsystem. The
# number of Hazelcast members that take part in CP Subsystem is
# specified here. CP Subsystem must have at least 3 CP members.
#
# cas.authn.throttle.hazelcast.cluster.core.cp-member-count: 0

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports policy-based eviction for distributed maps.
# Currently supported policies are LRU (Least Recently Used) and LFU
# (Least Frequently Used) and NONE. See <a
# href="http://docs.hazelcast.org/docs/latest-development/manual/html/Di
# stributed_Data_Structures/Map/Map_Eviction.html">this</a> for more
# info.
#
# cas.authn.throttle.hazelcast.cluster.core.eviction-policy: LRU

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# The instance name.
#
# cas.authn.throttle.hazelcast.cluster.core.instance-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast has a flexible logging configuration and doesn't depend on
# any logging framework except JDK logging. It has in-built adaptors for
# a number of logging frameworks and also supports custom loggers by
# providing logging interfaces. To use built-in adaptors you should set
# this setting to one of predefined types below. <ul> <li>{@code jdk}:
# JDK logging</li> <li>{@code log4j}: Log4j</li> <li>{@code slf4j}:
# Slf4j</li> <li>{@code none}: Disable logging</li> </ul>
#
# cas.authn.throttle.hazelcast.cluster.core.logging-type: slf4j

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Define how data items in Hazelcast maps are merged together from
# source to destination. By default, merges map entries from source to
# destination if they don't exist in the destination map. Accepted
# values are: <ul> <li>{@code PUT_IF_ABSENT}: Merges data structure
# entries from source to destination if they don't exist in the
# destination data structure.</li> <li>{@code HIGHER_HITS}: * Merges
# data structure entries from source to destination data structure if
# the source entry has more hits than the destination one.</li>
# <li>{@code DISCARD}: Merges only entries from the destination data
# structure and discards all entries from the source data structure.
# </li> <li>{@code PASS_THROUGH}: Merges data structure entries from
# source to destination directly unless the merging entry is null</li>
# <li>{@code EXPIRATION_TIME}: Merges data structure entries from source
# to destination data structure if the source entry will expire later
# than the destination entry. This policy can only be used if the clocks
# of the nodes are in sync. </li> <li>{@code LATEST_UPDATE}: Merges data
# structure entries from source to destination data structure if the
# source entry was updated more frequently than the destination entry.
# This policy can only be used if the clocks of the nodes are in sync.
# </li> <li>{@code LATEST_ACCESS}: Merges data structure entries from
# source to destination data structure if the source entry has been
# accessed more recently than the destination entry. This policy can
# only be used if the clocks of the nodes are in sync.</li> </ul>
#
# cas.authn.throttle.hazelcast.cluster.core.map-merge-policy: PUT_IF_ABSENT

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Max timeout of heartbeat in seconds for a node to assume it is dead.
#
# cas.authn.throttle.hazelcast.cluster.core.max-no-heartbeat-seconds: 300

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Sets the maximum size of the map.
#
# cas.authn.throttle.hazelcast.cluster.core.max-size: 85

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# <ul> <li>{@code FREE_HEAP_PERCENTAGE}: Policy based on minimum free
# JVM heap memory percentage per JVM.</li> <li>{@code FREE_HEAP_SIZE}:
# Policy based on minimum free JVM heap memory in megabytes per
# JVM.</li> <li>{@code FREE_NATIVE_MEMORY_PERCENTAGE}: Policy based on
# minimum free native memory percentage per Hazelcast instance.</li>
# <li>{@code FREE_NATIVE_MEMORY_SIZE}: Policy based on minimum free
# native memory in megabytes per Hazelcast instance.</li> <li>{@code
# PER_NODE}: Policy based on maximum number of entries stored per data
# structure (map, cache etc) on each Hazelcast instance.</li> <li>{@code
# PER_PARTITION}: Policy based on maximum number of entries stored per
# data structure (map, cache etc) on each partition.</li> <li>{@code
# USED_HEAP_PERCENTAGE}: Policy based on maximum used JVM heap memory
# percentage per data structure (map, cache etc) on each Hazelcast
# instance .</li> <li>{@code USED_HEAP_SIZE}: Policy based on maximum
# used JVM heap memory in megabytes per data structure (map, cache etc)
# on each Hazelcast instance.</li> <li>{@code
# USED_NATIVE_MEMORY_PERCENTAGE}: Policy based on maximum used native
# memory percentage per data structure (map, cache etc) on each
# Hazelcast instance.</li> <li>{@code USED_NATIVE_MEMORY_SIZE}: Policy
# based on maximum used native memory in megabytes per data structure
# (map, cache etc) on each Hazelcast instance .</li> </ul>
#
# cas.authn.throttle.hazelcast.cluster.core.max-size-policy: USED_HEAP_PERCENTAGE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# With {@code PartitionGroupConfig}, you can control how primary and
# backup partitions are mapped to physical Members. Hazelcast will
# always place partitions on different partition groups so as to provide
# redundancy. Accepted value are: {@code PER_MEMBER, HOST_AWARE, CUSTOM,
# ZONE_AWARE, SPI}. In all cases a partition will never be created on
# the same group. If there are more partitions defined than there are
# partition groups, then only those partitions, up to the number of
# partition groups, will be created. For example, if you define 2
# backups, then with the primary, that makes 3. If you have only two
# partition groups only two will be created. <ul> <li>{@code}PER_MEMBER
# Partition Groups}: This is the default partition scheme and is used if
# no other scheme is defined. Each Member is in a group of its own.</li>
# <li>{@code}HOST_AWARE Partition Groups}: In this scheme, a group
# corresponds to a host, based on its IP address. Partitions will not be
# written to any other members on the same host. This scheme provides
# good redundancy when multiple instances are being run on the same
# host.</li> <li>{@code}CUSTOM Partition Groups}: In this scheme, IP
# addresses, or IP address ranges, are allocated to groups. Partitions
# are not written to the same group. This is very useful for ensuring
# partitions are written to different racks or even availability
# zones.</li> <li>{@code}ZONE_AWARE Partition Groups}: In this scheme,
# groups are allocated according to the metadata provided by Discovery
# SPI Partitions are not written to the same group. This is very useful
# for ensuring partitions are written to availability zones or different
# racks without providing the IP addresses to the config ahead.</li>
# <li>{@code}SPI Partition Groups}: In this scheme, groups are allocated
# according to the implementation provided by Discovery SPI.</li> </ul>
#
# cas.authn.throttle.hazelcast.cluster.core.partition-member-group-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# A Replicated Map is a distributed key-value data structure where the
# data is replicated to all members in the cluster. It provides full
# replication of entries to all members for high speed access. A
# Replicated Map does not partition data (it does not spread data to
# different cluster members); instead, it replicates the data to all
# members. Replication leads to higher memory consumption. However, a
# Replicated Map has faster read and write access since the data is
# available on all members. Writes could take place on local/remote
# members in order to provide write-order, eventually being replicated
# to all other members. <br><p> If you have a large cluster or very high
# occurrences of updates, the Replicated Map may not scale linearly as
# expected since it has to replicate update operations to all members in
# the cluster. Since the replication of updates is performed in an
# asynchronous manner, Hazelcast recommends you enable back pressure in
# case your system has high occurrences of updates. <p> Note that
# Replicated Map does not guarantee eventual consistency because there
# are some edge cases that fail to provide consistency. <br><p>
# Replicated Map uses the internal partition system of Hazelcast in
# order to serialize updates happening on the same key at the same time.
# This happens by sending updates of the same key to the same Hazelcast
# member in the cluster. <br><p> Due to the asynchronous nature of
# replication, a Hazelcast member could die before successfully
# replicating a "write" operation to other members after sending the
# "write completed" response to its caller during the write process. In
# this scenario, Hazelcast’s internal partition system promotes one of
# the replicas of the partition as the primary one. The new primary
# partition does not have the latest "write" since the dead member could
# not successfully replicate the update.
#
# cas.authn.throttle.hazelcast.cluster.core.replicated: false

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Connection timeout in seconds for the TCP/IP config and members
# joining the cluster.
#
# cas.authn.throttle.hazelcast.cluster.core.timeout: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS access key.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.access-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# ECS cluster short name or ARN; default is the current cluster.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.cluster: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# The maximum amount of time Hazelcast will try to connect to a well
# known member before giving up. Setting this value too low could mean
# that a member is not able to connect to a cluster. Setting the value
# too high means that member startup could slow down because of longer
# timeouts (for example, when a well known member is not up). Increasing
# this value is recommended if you have many IPs listed and the members
# cannot properly build up the cluster. Its default value is 5.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.connection-timeout-seconds: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks with the given family name; mutually
# exclusive with {@link #getServiceName()}.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.family: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Host header. i.e. {@code ec2.amazonaws.com}. The URL that is the entry
# point for a web service.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.host-header: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If you do not want to use access key and secret key, you can specify
# iam-role. Hazelcast fetches your credentials by using your IAM role.
# This setting only affects deployments on Amazon EC2. If you are
# deploying CAS in an Amazon ECS environment, the role should not be
# specified. The role is fetched from the task definition that is
# assigned to run CAS.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.iam-role: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Hazelcast port. Typically may be set to {@code 5701}. You can set
# searching for other ports rather than 5701 if you've members on
# different ports.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS region. i.e. {@code us-east-1}. The region where your members are
# running.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.region: us-east-1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS secret key.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.secret-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a security group is configured, only instances within that security
# group are selected.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.security-group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks from the given service; mutually
# exclusive with {@link #getFamily()}.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.service-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.tag-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.authn.throttle.hazelcast.cluster.discovery.aws.tag-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client ID.
#
# cas.authn.throttle.hazelcast.cluster.discovery.azure.client-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client secret.
#
# cas.authn.throttle.hazelcast.cluster.discovery.azure.client-secret: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The name of the tag on the hazelcast vm resources. With every
# Hazelcast Virtual Machine you deploy in your resource group, you need
# to ensure that each VM is tagged with the value of cluster-id defined
# in your Hazelcast configuration. The only requirement is that every VM
# can access each other either by private or public IP address.
#
# cas.authn.throttle.hazelcast.cluster.discovery.azure.cluster-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure resource group name of the cluster. You can find this in the
# Azure portal or CLI.
#
# cas.authn.throttle.hazelcast.cluster.discovery.azure.group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure subscription ID.
#
# cas.authn.throttle.hazelcast.cluster.discovery.azure.subscription-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory tenant ID.
#
# cas.authn.throttle.hazelcast.cluster.discovery.azure.tenant-id: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastDiscoveryProperties
#
# Whether discovery should be enabled via the configured strategies
# below.
#
# cas.authn.throttle.hazelcast.cluster.discovery.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A range of ports where the plugin looks for Hazelcast members.
#
# cas.authn.throttle.hazelcast.cluster.discovery.gcp.hz-port: 5701-5708

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filter to look only for instances labeled as specified; property
# format: {@code key=value}.
#
# cas.authn.throttle.hazelcast.cluster.discovery.gcp.label: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filesystem path to the private key for GCP service account in the
# JSON format; if not set, the access token is fetched from the GCP VM
# instance.
#
# cas.authn.throttle.hazelcast.cluster.discovery.gcp.private-key-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of projects where the plugin looks for instances; if not set,
# the current project is used.
#
# cas.authn.throttle.hazelcast.cluster.discovery.gcp.projects: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A region where the plugin looks for instances; if not set, the {@link
# #getZones()} property is used; if it and {@link #getZones()} property
# not set, all zones of the current region are used.
#
# cas.authn.throttle.hazelcast.cluster.discovery.gcp.region: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of zones where the plugin looks for instances; if not set, all
# zones of the current region are used.
#
# cas.authn.throttle.hazelcast.cluster.discovery.gcp.zones: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider credential, can be thought of as a password for cloud
# services.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.credential: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for cloud providers which require an extra JSON or P12 key file.
# This denotes the path of that file. Only tested with Google Compute
# Engine. (Required if Google Compute Engine is used.)
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.credential-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines the endpoint for a generic API such as OpenStack or CloudStack
# (optional).
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters instance groups (optional). When used with AWS it maps to
# security group.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider identity, can be thought of as a user name for cloud
# services.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.identity: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Port which the hazelcast instance service uses on the cluster member.
# Default value is 5701. (optional)
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# String value that is used to identify ComputeService provider. For
# example, "google-compute-engine" is used for Google Cloud services.
# See <a
# href="https://jclouds.apache.org/reference/providers/#compute">here</a
# > for more info.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.provider: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines region for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.regions: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for IAM role support specific to AWS (optional, but if defined,
# no identity or credential should be defined in the configuration).
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.role-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional). Can be used with comma
# separated values for multiple values.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.tag-keys: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional) Can be used with comma
# separated values for multiple values.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.tag-values: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines zone for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.authn.throttle.hazelcast.cluster.discovery.jclouds.zones: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the number of retries to Kubernetes API. Defaults to: 3.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.api-retries: 3

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an oauth token for the kubernetes client to access the
# kubernetes REST API. Defaults to reading the token from the
# auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/token}.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.api-token: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# CA Authority certificate from Kubernetes Master. Defaults to reading
# the certificate from the auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/ca.crt}.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.ca-certificate: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an alternative address for the kubernetes master. Defaults to:
# {@code https://kubernetes.default.svc}
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.kubernetes-master: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the namespace of the application POD through the Service
# Discovery REST API of Kubernetes.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.namespace: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label to lookup through the Service Discovery REST API
# of Kubernetes.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.pod-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label value to lookup through the Service Discovery
# REST API of Kubernetes.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.pod-label-value: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if not ready addresses should be evaluated to be discovered on
# startup.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.resolve-not-ready-addresses: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup domain. This is defined as something
# similar to {@code my-svc.my-namespace.svc.cluster.local}.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.service-dns: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup timeout in seconds. Defaults to 5 secs.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.service-dns-timeout: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label to lookup through the Service Discovery REST
# API of Kubernetes.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.service-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label value to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.service-label-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service name of the POD to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.service-name: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# If specified with a value greater than 0, its value defines the
# endpoint port of the service (overriding the default).
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.service-port: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if the node name should be used as external address, instead
# of looking up the external IP using the {@code /nodes} resource.
# Default is false.
#
# cas.authn.throttle.hazelcast.cluster.discovery.kubernetes.use-node-name-as-external-address: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Enables a multicast configuration using a group address and port.
# Contains the configuration for the multicast discovery mechanism. With
# the multicast discovery mechanism Hazelcast allows Hazelcast members
# to find each other using multicast. So Hazelcast members do not need
# to know concrete addresses of members, they just multicast to everyone
# listening. It depends on your environment if multicast is possible or
# allowed; otherwise you need to have a look at the tcp/ip cluster
#
# cas.authn.throttle.hazelcast.cluster.discovery.multicast.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast group address used for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.authn.throttle.hazelcast.cluster.discovery.multicast.group: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast port used for discovery.
#
# cas.authn.throttle.hazelcast.cluster.discovery.multicast.port: 0

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Gets the time to live for the multicast package in seconds. This is
# the default time-to-live for multicast packets sent out on the socket
#
# cas.authn.throttle.hazelcast.cluster.discovery.multicast.time-to-live: 32

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# specifies the time in seconds that a member should wait for a valid
# multicast response from another member running in the network before
# declaring itself the leader member (the first member joined to the
# cluster) and creating its own cluster. This only applies to the
# startup of members where no leader has been assigned yet. If you
# specify a high value, such as 60 seconds, it means that until a leader
# is selected, each member will wait 60 seconds before moving on. Be
# careful when providing a high value. Also, be careful not to set the
# value too low, or the members might give up too early and create their
# own cluster.
#
# cas.authn.throttle.hazelcast.cluster.discovery.multicast.timeout: 2

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Multicast trusted interfaces for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.authn.throttle.hazelcast.cluster.discovery.multicast.trusted-interfaces: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Name of this Hazelcast cluster. You can have multiple distinct
# clusters to use the same ZooKeeper installation
#
# cas.authn.throttle.hazelcast.cluster.discovery.zookeeper.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Path in zookeeper to be used for auto-discovery of members where
# members are tracked.
#
# cas.authn.throttle.hazelcast.cluster.discovery.zookeeper.path: /discovery/hazelcast

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Zookeeper url address typically in the format of {@code
# ip-address:port}.
#
# cas.authn.throttle.hazelcast.cluster.discovery.zookeeper.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# IPv6 support has been switched off by default, since some platforms
# have issues in use of IPv6 stack. And some other platforms such as
# Amazon AWS have no support at all. To enable IPv6 support set this
# setting to false.
#
# cas.authn.throttle.hazelcast.cluster.network.ipv4-enabled: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# If this property is set, then this is the address where the server
# socket is bound to.
#
# cas.authn.throttle.hazelcast.cluster.network.local-address: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Sets the well known members. If members is empty, calling this method
# will have the same effect as calling {@code clear()}. A member can be
# a comma separated string, e..g {@code 10.11.12.1,10.11.12.2} which
# indicates multiple members are going to be added. The list of members
# must include ALL CAS server node, including the current node that owns
# this configuration.
#
# cas.authn.throttle.hazelcast.cluster.network.members: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify which network interfaces that Hazelcast should use.
# Servers mostly have more than one network interface, so you may want
# to list the valid IPs. Range characters ('*' and '-') can be used for
# simplicity. For instance, 10.3.10.* refers to IPs between 10.3.10.0
# and 10.3.10.255. Interface 10.3.10.4-18 refers to IPs between
# 10.3.10.4 and 10.3.10.18 (4 and 18 included). If network interface
# configuration is enabled (it is disabled by default) and if Hazelcast
# cannot find an matching interface, then it will print a message on the
# console and will not start on that node. <p> Interfaces can be
# separated by a comma.
#
# cas.authn.throttle.hazelcast.cluster.network.network-interfaces: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The outbound ports for the Hazelcast configuration.
#
# cas.authn.throttle.hazelcast.cluster.network.outbound-ports: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify the ports which Hazelcast will use to communicate
# between cluster members. The name of the parameter for this is port
# and its default value is 5701. By default, Hazelcast will try 100
# ports to bind. Meaning that, if you set the value of port as 5701, as
# members are joining to the cluster, Hazelcast tries to find ports
# between 5701 and 5801.
#
# cas.authn.throttle.hazelcast.cluster.network.port: 5701

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You may also want to choose to use only one port. In that case, you
# can disable the auto-increment feature of port.
#
# cas.authn.throttle.hazelcast.cluster.network.port-auto-increment: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The default public address to be advertised to other cluster members
# and clients.
#
# cas.authn.throttle.hazelcast.cluster.network.public-address: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Comma-separated list of cipher suite names allowed to be used. Its
# default value are all supported suites in your Java runtime.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.cipher-suites: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the authentication keys are
# provided.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.key-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the keystore. Its default value is JKS. Another commonly used
# type is the PKCS12. Available keystore/truststore types depend on your
# Operating system and the Java runtime. Only needed when the mutual
# authentication is used.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.key-store-type: JKS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your keystore file. Only needed when the mutual authentication
# is used.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.keystore: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to access the key from your keystore file. Only needed when
# the mutual authentication is used.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Mutual authentication configuration. It’s empty by default which means
# the client side of connection is not authenticated. Available values
# are: <ul> <li>{@code REQUIRED} - server forces usage of a trusted
# client certificate</li> <li>{@code OPTIONAL} - server asks for a
# client certificate, but it doesn't require it</li> </ul>
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.mutual-authentication: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm which is used in your TLS/SSL. For the protocol
# property, we recommend you to provide TLS with its version
# information, e.g., TLSv1.2. Note that if you write only TLS, your
# application chooses the TLS version according to your Java version.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.protocol: TLS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the trust managers are provided.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.trust-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your truststore file. The file truststore is a keystore file
# that contains a collection of certificates trusted by your
# application.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to unlock the truststore file.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the truststore. Its default value is JKS. Another commonly
# used type is the PKCS12. Available keystore/truststore types depend on
# your Operating system and the Java runtime.
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.trust-store-type: JKS

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Flag which allows enabling endpoint identity validation. It means,
# during the TLS handshake client verifies if the server’s hostname (or
# IP address) matches the information in X.509 certificate (Subject
# Alternative Name extension).
#
# cas.authn.throttle.hazelcast.cluster.network.ssl.validate-identity: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Enable TCP/IP config. Contains the configuration for the Tcp/Ip join
# mechanism. The Tcp/Ip join mechanism relies on one or more well known
# members. So when a new member wants to join a cluster, it will try to
# connect to one of the well known members. If it is able to connect, it
# will now about all members in the cluster and doesn't rely on these
# well known members anymore.
#
# cas.authn.throttle.hazelcast.cluster.network.tcpip-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Whether WAN should be enabled.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Name of this replication group.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.replication-name: apereo-cas

# Type: java.util.List<org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# List of target clusters to be used for synchronization and
# replication.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
#     <li>{@code ACK_ON_RECEIPT}: ACK
# after WAN operation is received by the target cluster (without waiting
# the result of actual operation invocation).</li>
#     <li>{@code
# ACK_ON_OPERATION_COMPLETE}: Wait till the operation is complete on
# target cluster.</li>
# </ul>
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].acknowledge-type: ACK_ON_OPERATION_COMPLETE

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum amount of time, in milliseconds, to be waited before
# sending
# a batch of events in case batch.size is not reached.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].batch-maximum-delay-milliseconds: 1000

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum size of events that are sent to the target cluster in a single
# batch.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].batch-size: 500

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Sets the cluster name used as an endpoint group password for
# authentication
# on the target endpoint.
# If there is no separate
# publisher ID property defined, this cluster name
# will also be used
# as a WAN publisher ID. This ID is then used for
# identifying the
# publisher.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].cluster-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Strategy for checking the consistency of data between replicas.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].consistency-check-strategy: NONE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Comma separated list of endpoints in this replication group.
# IP
# addresses and ports of the cluster members for which the WAN
# replication is implemented. These endpoints are not necessarily
# the
# entire target cluster and WAN does not perform the discovery of other
# members in the target cluster. It only expects
# that these IP
# addresses (or at least some of them) are available.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].endpoints: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The number of threads that the replication executor will have. The
# executor is used to send WAN
# events to the endpoints and ideally you
# want to have one thread per endpoint. If this property is omitted
#
# and you have specified the endpoints property, this will be the case.
# If necessary you can manually define
# the number of threads that the
# executor will use. Once the executor has been initialized there is
# thread
# affinity between the discovered endpoints and the executor
# threads - all events for a single endpoint will
# go through a single
# executor thread, preserving event order. It is important to determine
# which number of
# executor threads is a good value. Failure to do so
# can lead to performance issues - either contention on a
# too small
# number of threads or wasted threads that will not be performing any
# work.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].executor-thread-count: 2

# Type: java.util.Map<String,Comparable>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The WAN publisher properties.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].properties: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Publisher class name for WAN replication.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].publisher-class-name: com.hazelcast.enterprise.wan.replication.WanBatchReplication

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Returns the publisher ID used for identifying the publisher.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].publisher-id: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# For huge clusters or high data mutation rates, you might need to
# increase the replication queue size.
# The default queue size for
# replication queues is 10,000. This means, if you have heavy
# put/update/remove
# rates, you might exceed the queue size so that the
# oldest, not yet replicated, updates might get
# lost.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].queue-capacity: 10000

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
# <li>{@code THROW_EXCEPTION}: Instruct
# WAN replication implementation to throw an exception and doesn't allow
# further processing.</li>
# <li>{@code DISCARD_AFTER_MUTATION}:
# Instruct WAN replication implementation to drop new events when WAN
# event queues are full.</li>
# <li>{@code
# THROW_EXCEPTION_ONLY_IF_REPLICATION_ACTIVE}: Similar to {@code
# THROW_EXCEPTION} but only throws exception when WAN replication is
# active.
# * Discards the new events if WAN replication is
# stopped.</li>
# </ul>
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].queue-full-behavior: THROW_EXCEPTION

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Time, in milliseconds, to be waited for the acknowledgment of a sent
# WAN event to target cluster.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].response-timeout-milliseconds: 60000

# Type: boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# When set to true, only the latest events (based on key) are selected
# and sent in a batch.
#
# cas.authn.throttle.hazelcast.cluster.wan-replication.targets[].snapshot-enabled: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables compression when default java serialization is used.
#
# cas.authn.throttle.hazelcast.core.enable-compression: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enable Jet configuration/service on the hazelcast instance. Hazelcast
# Jet is a distributed batch and stream processing system that can do
# stateful computations over massive amounts of data with consistent low
# latency. Jet service is required when executing SQL queries with the
# SQL service.
#
# cas.authn.throttle.hazelcast.core.enable-jet: true

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables scripting from Management Center.
#
# cas.authn.throttle.hazelcast.core.enable-management-center-scripting: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Hazelcast enterprise license key.
#
# cas.authn.throttle.hazelcast.core.license-key: 

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Audit query to execute against the database to locate audit records
# based on IP, user, date and an application code along with the
# relevant audit action.
#
# cas.authn.throttle.jdbc.audit-query: SELECT * FROM COM_AUDIT_TRAIL WHERE AUD_CLIENT_IP = ? AND AUD_USER = ? AND AUD_ACTION = ? AND APPLIC_CD = ? AND AUD_DATE >= ? ORDER BY AUD_DATE DESC

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.authn.throttle.jdbc.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.authn.throttle.jdbc.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.authn.throttle.jdbc.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.authn.throttle.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.authn.throttle.jdbc.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.authn.throttle.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.authn.throttle.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.authn.throttle.jdbc.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# The JDBC driver used to connect to the database.
#
# cas.authn.throttle.jdbc.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Decide whether JDBC audits should be enabled.
#
# cas.authn.throttle.jdbc.enabled: true

# Type: java.lang.Long
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.authn.throttle.jdbc.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.authn.throttle.jdbc.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Allow hibernate to generate query statistics.
#
# cas.authn.throttle.jdbc.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.authn.throttle.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.authn.throttle.jdbc.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.authn.throttle.jdbc.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.throttle.jdbc.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.authn.throttle.jdbc.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# The database connection password.
#
# cas.authn.throttle.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.authn.throttle.jdbc.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.authn.throttle.jdbc.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.authn.throttle.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.authn.throttle.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.authn.throttle.jdbc.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.authn.throttle.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.authn.throttle.jdbc.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.authn.throttle.jdbc.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.authn.throttle.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.authn.throttle.jdbc.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.authn.throttle.jdbc.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.authn.throttle.jdbc.read-only: false

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# The database connection URL.
#
# cas.authn.throttle.jdbc.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-throttle-jdbc
# Owner: org.apereo.cas.configuration.model.support.throttle.JdbcThrottleProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.authn.throttle.jdbc.user: sa

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Name of LDAP attribute that represents the account locked status. The
# value of the attribute is set to {@code "true"} if the account is ever
# updated to indicated a locked status.
#
# cas.authn.throttle.ldap.account-locked-attribute: pwdLockout

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.throttle.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.throttle.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.throttle.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.throttle.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.throttle.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.throttle.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.throttle.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.throttle.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.throttle.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.throttle.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.throttle.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Set if search referrals should be followed.
#
# cas.authn.throttle.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.throttle.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.throttle.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.throttle.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Keystore password.
#
# cas.authn.throttle.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.throttle.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.throttle.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.throttle.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.throttle.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Name of the LDAP handler.
#
# cas.authn.throttle.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.throttle.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.throttle.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.throttle.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Duration of time to wait for responses.
#
# cas.authn.throttle.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# SASL authorization id.
#
# cas.authn.throttle.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The SASL mechanism.
#
# cas.authn.throttle.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.throttle.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# SASL quality of protected.
#
# cas.authn.throttle.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The SASL realm.
#
# cas.authn.throttle.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# SASL security strength.
#
# cas.authn.throttle.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Search handlers.
#
# cas.authn.throttle.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.throttle.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.throttle.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.throttle.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.throttle.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.throttle.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.throttle.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.throttle.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.throttle.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.throttle.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.throttle.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.throttle.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.throttle.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.throttle.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.throttle.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.throttle.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.throttle.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.throttle.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.throttle.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.throttle.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.throttle.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Password needed to open the truststore.
#
# cas.authn.throttle.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.throttle.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.throttle.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.throttle.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Period at which pool should be validated.
#
# cas.authn.throttle.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.throttle.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-throttle-ldap
# Owner: org.apereo.cas.configuration.model.support.throttle.LdapThrottleProperties
#
# Period at which validation operations may time out.
#
# cas.authn.throttle.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.throttle.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.throttle.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.throttle.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.throttle.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.throttle.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.throttle.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.throttle.ldap.validator.type: search

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.authn.throttle.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.authn.throttle.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.authn.throttle.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.authn.throttle.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.authn.throttle.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.authn.throttle.schedule.start-delay: PT15S

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the core namespace.
# Replace with: Setting is moved into the core namespace.
#
# 
#
# cas.authn.throttle.username-parameter: 

# Type: java.lang.String
# Module: cas-server-support-token-webflow
# Owner: org.apereo.cas.configuration.model.support.token.TokenAuthenticationProperties
#
# A number of authentication handlers are allowed to determine whether
# they can operate on the provided credential and as such lend
# themselves to be tried and tested during the authentication handler
# selection phase. The credential criteria may be one of the following
# options:<ul> <li>1) A regular expression pattern that is tested
# against the credential identifier.</li> <li>2) A fully qualified class
# name of your own design that implements {@code Predicate}.</li> <li>3)
# Path to an external Groovy script that implements the same
# interface.</li> </ul>
#
# cas.authn.token.credential-criteria: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.token.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.token.crypto.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto encryption operations are enabled.
#
# cas.authn.token.crypto.encryption-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.token.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.token.crypto.encryption.key-size: 512

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Whether crypto signing operations are enabled.
#
# cas.authn.token.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.token.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.token.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionOptionalSigningOptionalJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.token.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-token-webflow
# Owner: org.apereo.cas.configuration.model.support.token.TokenAuthenticationProperties
#
# Name of the authentication handler.
#
# cas.authn.token.name: 

# Type: java.lang.Integer
# Module: cas-server-support-token-webflow
# Owner: org.apereo.cas.configuration.model.support.token.TokenAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.token.order: 

# Type: java.lang.Boolean
# Module: cas-server-support-token-webflow
# Owner: org.apereo.cas.configuration.model.support.token.TokenAuthenticationProperties
#
# When set to true, will generate a token and store it as an
# authentication attribute into the single sign-on session. This token
# can be used later on for token-based authentication attempts, and
# should allow SSO access to the server.
#
# cas.authn.token.sso-token-enabled: false

# Type: org.apereo.cas.configuration.model.core.authentication.AuthenticationHandlerStates
# Module: cas-server-support-token-webflow
# Owner: org.apereo.cas.configuration.model.support.token.TokenAuthenticationProperties
#
# Define the scope and state of this authentication handler and the
# lifecycle in which it can be invoked or activated.
# Available values
# are as follows:
# <ul><li>{@code ACTIVE}: Active authentication
# handler,
# and is invoked by default automatically to verify
# credentials globally.</li><li>{@code STANDBY}: Authentication handler
# is in a semi-enabled state,
# waiting to be called only on-demand when
# explicitly
# asked for.</li></ul>
#
# cas.authn.token.state: 

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.authn.token.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.authn.token.webflow.order: 0

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-trusted-webflow
# Owner: org.apereo.cas.configuration.model.support.trusted.TrustedAuthenticationProperties
#
# Regular expression that is applied to all request headers to extract
# them as principal attributes. The comparison is case insensitive. The
# pattern should use regular expression groups to extract inner matches
# from a header value.
#
# cas.authn.trusted.attribute-header-patterns: 

# Type: java.lang.String
# Module: cas-server-support-trusted-webflow
# Owner: org.apereo.cas.configuration.model.support.trusted.TrustedAuthenticationProperties
#
# Indicates the name of the authentication handler.
#
# cas.authn.trusted.name: 

# Type: java.lang.Integer
# Module: cas-server-support-trusted-webflow
# Owner: org.apereo.cas.configuration.model.support.trusted.TrustedAuthenticationProperties
#
# Order of the authentication handler in the chain.
#
# cas.authn.trusted.order: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Activated attribute repository identifiers that should be used for
# fetching attributes if attribute resolution is enabled. The list here
# may include identifiers separated by comma.
#
# cas.authn.trusted.person-directory.active-attribute-repository-ids: *

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Control the behavior of the attribute repository selection by
# authentication method or handler. The map here is keyed by the
# authentication handler name, and the value is the attribute repository
# identifiers separated by comma. When the authentication handler is
# executed, the attribute repositories assigned to this handler will be
# selected to fetch attributes. Note that the resolution engine will
# always favor attribute repositories assigned to the service
# definition, if any and as part of its authentication policy, over this
# global setting.
#
# cas.authn.trusted.person-directory.attribute-repository-selection: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Whether attribute repositories should be contacted to fetch person
# attributes. Defaults to true if not set.
# Available values are as
# follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.trusted.person-directory.attribute-resolution-enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Attribute name to use to indicate the identifier of the principal
# constructed. If the attribute is blank or has no values, the default
# principal id will be used determined by the underlying authentication
# engine. The principal id attribute usually is removed from the
# collection of attributes collected, though this behavior depends on
# the schematics of the underlying authentication strategy.
#
# cas.authn.trusted.person-directory.principal-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# In the event that the principal resolution engine resolves more than
# one principal, (specially if such principals in the chain have
# different identifiers), this setting determines strategy by which the
# principal id would be chosen from the chain. Accepted values are:
# {@code last}, {@code first}.
#
# cas.authn.trusted.person-directory.principal-resolution-conflict-strategy: last

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# When true, throws an error back indicating that principal resolution
# has failed and no principal can be found based on the authentication
# requirements. Otherwise, logs the condition as an error without
# raising a catastrophic error.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.trusted.person-directory.principal-resolution-failure-fatal: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.trusted.person-directory.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.trusted.person-directory.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.trusted.person-directory.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.trusted.person-directory.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.trusted.person-directory.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.trusted.person-directory.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Return a null principal object if no attributes can be found for the
# principal.
# Available values are as follows:
# <ul><li>{@code TRUE}:
# Constant to represent the true state.</li><li>{@code FALSE}: Constant
# to represent the false state.</li><li>{@code UNDEFINED}: Constant to
# represent the undefined state.</li></ul>
#
# cas.authn.trusted.person-directory.return-null: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Uses an existing principal id that may have already been established
# in order to run person directory queries. This is generally useful in
# situations where authentication is delegated to an external identity
# provider and a principal is first established to then query an
# attribute source.
# Available values are as follows:
# <ul><li>{@code
# TRUE}: Constant to represent the true state.</li><li>{@code FALSE}:
# Constant to represent the false state.</li><li>{@code UNDEFINED}:
# Constant to represent the undefined state.</li></ul>
#
# cas.authn.trusted.person-directory.use-existing-principal-id: 

# Type: java.lang.String
# Module: cas-server-support-trusted-webflow
# Owner: org.apereo.cas.configuration.model.support.trusted.TrustedAuthenticationProperties
#
# Indicates the name of the request header that may be extracted from
# the request as the indicated authenticated userid from the remote
# authn system.
#
# cas.authn.trusted.remote-principal-header: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.AuthenticationProperties
#
# Collection of settings related to WsFed delegated authentication.
# These settings are required to be indexed (i.e. wsfed[0].xyz).
#
# cas.authn.wsfed: 

# Type: java.lang.String
# Module: cas-server-support-ws-idp
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationIdentityProviderProperties
#
# At this point, by default security token service’s endpoint operate
# using a single realm configuration and identity provider configuration
# is only able to recognize and request tokens for a single realm.
# Registration of clients need to ensure this value is matched.
#
# cas.authn.wsfed-idp.idp.realm: urn:org:apereo:cas:ws:idp:realm-CAS

# Type: java.lang.String
# Module: cas-server-support-ws-idp
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationIdentityProviderProperties
#
# Realm name.
#
# cas.authn.wsfed-idp.idp.realm-name: CAS

# Type: java.lang.Boolean
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Set whether client lifetime is accepted.
#
# cas.authn.wsfed-idp.sts.conditions-accept-client-lifetime: true

# Type: java.lang.Boolean
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# If requested lifetime exceeds shall it fail (default) or overwrite
# with maximum lifetime.
#
# cas.authn.wsfed-idp.sts.conditions-fail-lifetime-exceedance: false

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Get how long (in seconds) a client-supplied Created Element is allowed
# to be in the future. The default is 60 seconds to avoid common
# problems relating to clock skew.
#
# cas.authn.wsfed-idp.sts.conditions-future-time-to-live: PT60S

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Set the default lifetime in seconds for issued SAML tokens.
#
# cas.authn.wsfed-idp.sts.conditions-lifetime: PT30M

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Set the maximum lifetime in seconds for issued SAML tokens.
#
# cas.authn.wsfed-idp.sts.conditions-max-lifetime: PT12H

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.wsfed-idp.sts.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.wsfed-idp.sts.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.wsfed-idp.sts.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.wsfed-idp.sts.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.wsfed-idp.sts.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.wsfed-idp.sts.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.authn.wsfed-idp.sts.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Collection of fully-qualified claims prefixed with the appropriate
# namespace that are expected to be released via attribute release
# policy.
#
# cas.authn.wsfed-idp.sts.custom-claims: 

# Type: java.lang.Boolean
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Whether tokens generated by STS should encrypted.
#
# cas.authn.wsfed-idp.sts.encrypt-tokens: true

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Keystore path used to encrypt tokens.
#
# cas.authn.wsfed-idp.sts.encryption-keystore-file: 

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Keystore password used to encrypt tokens.
#
# cas.authn.wsfed-idp.sts.encryption-keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceRealmProperties
#
# Issuer/name of the realm identified and registered with STS.
#
# cas.authn.wsfed-idp.sts.realm.issuer: CAS

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceRealmProperties
#
# Key alias associated with the this realm.
#
# cas.authn.wsfed-idp.sts.realm.key-password: 

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceRealmProperties
#
# Key alias associated with the this realm.
#
# cas.authn.wsfed-idp.sts.realm.keystore-alias: 

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceRealmProperties
#
# Keystore path associated with the this realm.
#
# cas.authn.wsfed-idp.sts.realm.keystore-file: 

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceRealmProperties
#
# Keystore password associated with the this realm.
#
# cas.authn.wsfed-idp.sts.realm.keystore-password: 

# Type: java.lang.Boolean
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Set whether the provided token will be signed or not. Default is true.
#
# cas.authn.wsfed-idp.sts.sign-tokens: true

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Keystore path used to sign tokens.
#
# cas.authn.wsfed-idp.sts.signing-keystore-file: 

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# Keystore password used to sign tokens.
#
# cas.authn.wsfed-idp.sts.signing-keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# When generating a SAML token, indicates the subject name-id format to
# use. Accepted values are: <ul> <li>unspecified</li> <li>email</li>
# <li>transient</li> <li>persistent</li> <li>entity</li> </ul>
#
# cas.authn.wsfed-idp.sts.subject-name-id-format: unspecified

# Type: java.lang.String
# Module: cas-server-support-ws-sts
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationSecurityTokenServiceProperties
#
# When generating a SAML token, indicates the subject name-id qualifier
# to use.
#
# cas.authn.wsfed-idp.sts.subject-name-qualifier: http://cxf.apache.org/sts

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Path to attribute mutator groovy script
# that allows one to modify
# wsfed attributes before
# establishing a final principal.
# The
# location of the resource. Resources can be URLs, or
# files found
# either on the classpath or outside somewhere
# in the file system.
#
# <p>
# In the event the configured resource is a Groovy script,
# specially if the script set to reload on changes,
# you may need to
# adjust the total number of {@code inotify} instances.
# On Linux, you
# may need to add the following line to {@code /etc/sysctl.conf}:
#
# {@code fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.wsfed[].attribute-mutator-script.location: 

# Type: boolean
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Whether CAS should enable its own attribute resolution machinery
#
# after having received a response from wsfed.
#
# cas.authn.wsfed[].attribute-resolver-enabled: true

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Indicates how attributes should be recorded into the principal
# object.
# Useful if you wish to additionally resolve attributes on top
# of what wsfed provides.
# Accepted values are {@code CAS,WSFED,BOTH}.
#
# cas.authn.wsfed[].attributes-type: WSFED

# Type: DelegationAutoRedirectTypes
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Whether CAS should auto redirect to this wsfed instance.
# Available
# values are as follows:
# <ul><li>{@code SERVER}: Redirect on the
# server side, typically making CAS invisible.</li><li>{@code CLIENT}:
# Redirect on the client side using browser redirects,
# etc.</li><li>{@code NONE}: Do nothing and let the selection take place
# manually.</li></ul>
#
# cas.authn.wsfed[].auto-redirect-type: SERVER

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# A regular expression pattern that indicates the set of allowed IP
# addresses,
# when {@link #isPinToSession()} is configured. In the
# event that there is a mismatch
# between the cookie IP address and the
# current request-provided IP address (i.e. network switches, VPN,
# etc),
# the cookie can still be considered valid if the new IP address
# matches the pattern
# specified here.
#
# cas.authn.wsfed[].cookie.allowed-ip-addresses-pattern: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.authn.wsfed[].cookie.crypto.alg: A256CBC-HS512

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.authn.wsfed[].cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.authn.wsfed[].cookie.crypto.encryption.key: 

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.authn.wsfed[].cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.authn.wsfed[].cookie.crypto.signing.key: 

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.authn.wsfed[].cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations.
# The accepted values
# are:
# <ul>
#     <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value
# first, and then sign.</li>
#     <li>{@code SIGN_AND_ENCRYPT}: Sign
# the value first, and then encrypt.</li>
# </ul>
#
# cas.authn.wsfed[].cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented.
# The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com)
# and means that the cookie
# is visible to servers in a
# specified Domain Name System (DNS) zone
# (for example, www.foo.com, but not a.b.foo.com).
# By default, cookies
# are only returned to the server that sent them.
#
# cas.authn.wsfed[].cookie.domain: 

# Type: boolean
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# When set to {@code true} and assuming {@link #isPinToSession()} is
# also {@code true},
# client sessions (using the client IP address) are
# geo-located using a geolocation service when/if configured.
# The
# resulting session is either pinned to the client geolocation, or the
# default client address.
#
# cas.authn.wsfed[].cookie.geo-locate-client-session: 

# Type: boolean
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should
# not be accessible to scripting engines, like
# javascript.
#
# cas.authn.wsfed[].cookie.http-only: true

# Type: int
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating
# the cookie will persist until browser
# shutdown.
# A positive value indicates that the cookie will expire
# after that many seconds have passed. Note that the value is
# the
# maximum age when the cookie will expire, not the cookie's current
# age.
# A negative value means that the cookie is not stored
# persistently and will be deleted when the Web browser exits.
# A zero
# value causes the cookie to be deleted.
#
# cas.authn.wsfed[].cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value.
#
# The name must conform to RFC 2965. That means it can contain only
# ASCII alphanumeric characters and
# cannot contain commas, semicolons,
# or white space or begin with a {@code $} character.
# The cookie's
# name cannot be changed after creation.
# By default, cookies are
# created according to the RFC 2965 cookie specification.
# Cookie names
# are automatically calculated assigned by CAS at runtime, and there is
# usually
# no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.authn.wsfed[].cookie.name: 

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# Cookie path.
# Specifies a path for the cookie to which the client
# should return the cookie.
# The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
#
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog,
# which makes the cookie visible to all
# directories on the server under /catalog.
# Consult RFC 2965
# (available on the Internet) for more information on setting path names
# for cookies.
#
# cas.authn.wsfed[].cookie.path: 

# Type: boolean
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# When generating cookie values, determine whether the value
# should be
# compounded and signed with the properties of
# the current session,
# such as IP address, user-agent, etc.
#
# cas.authn.wsfed[].cookie.pin-to-session: true

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the
# developer has the option to apply one of settings
# {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access.
# <p>
# To safeguard more websites and their
# users, the new secure-by-default model
# assumes all cookies should be
# protected from external access unless otherwise
# specified.
# Developers must use a new cookie setting, {@code SameSite=None}, to
# designate
# cookies for cross-site access. When the {@code
# SameSite=None} attribute is present, an additional
# {@code Secure}
# attribute is used so cross-site cookies can only be accessed over
# HTTPS
# connections.
# </p>
# Accepted values are:
# <ul>
#    
# <li>{@code Lax}</li>
#     <li>{@code Strict}</li>
#     <li>{@code
# None}</li>
#     <li>{@code Off}: Disable the generation of the
# SameSite cookie attribute altogether.</li>
#     <li>Path to a Groovy
# script that is able to generate the SameSite cookie attribute
# dynamically.</li>
#     <li>Fully qualified name of a class that
# implements {@code
# org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.authn.wsfed[].cookie.same-site-policy: 

# Type: boolean
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegatedCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or
# false if the it can be sent using any protocol.
#
# cas.authn.wsfed[].cookie.secure: true

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# The path to the public key/certificate used to handle and verify
# encrypted assertions.
#
# cas.authn.wsfed[].encryption-certificate: classpath:certificate.crt

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# The path to the private key used to handle and verify encrypted
# assertions.
#
# cas.authn.wsfed[].encryption-private-key: classpath:private.key

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# The private key password.
#
# cas.authn.wsfed[].encryption-private-key-password: NONE

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Internal identifier for this wsfed configuration.
# If undefined, the
# identifier would be auto-generated by CAS itself.
# In the event that
# there is more than on CAS server defined in a clustered
# deployment,
# this identifier must be statically defined in the configuration.
#
# cas.authn.wsfed[].id: 

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# The attribute extracted from the assertion and used to construct the
# CAS principal id.
#
# cas.authn.wsfed[].identity-attribute: upn

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# The entity id or the identifier of the Wsfed instance.
#
# cas.authn.wsfed[].identity-provider-identifier: http://adfs.example.org/adfs/services/trust

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Wsfed identity provider url.
#
# cas.authn.wsfed[].identity-provider-url: https://adfs.example.org/adfs/ls/

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Name of the authentication handler.
#
# cas.authn.wsfed[].name: 

# Type: int
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# The order of the authentication handler in the chain.
#
# cas.authn.wsfed[].order: 2147483647

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Activated attribute repository identifiers
# that should be used for
# fetching attributes
# if attribute resolution is enabled.
# The list
# here may include identifiers separated by comma.
#
# cas.authn.wsfed[].principal.active-attribute-repository-ids: *

# Type: java.util.Map<String,String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Control the behavior of the attribute repository selection by
# authentication method or handler.
# The map here is keyed by the
# authentication handler name, and the value is the attribute
# repository
# identifiers separated by comma. When the authentication
# handler is executed, the attribute repositories
# assigned to this
# handler will be selected to fetch attributes.
# Note that the
# resolution engine will always favor attribute repositories assigned to
# the
# service definition, if any and as part of its authentication
# policy, over this global setting.
#
# cas.authn.wsfed[].principal.attribute-repository-selection: 

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Whether attribute repositories should be contacted
# to fetch person
# attributes. Defaults to true if not set.
# Available values are as
# follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.wsfed[].principal.attribute-resolution-enabled: UNDEFINED

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Attribute name to use to indicate the identifier of the principal
# constructed.
# If the attribute is blank or has no values, the default
# principal id will be used
# determined by the underlying
# authentication engine. The principal id attribute
# usually is removed
# from the collection of attributes collected, though this behavior
#
# depends on the schematics of the underlying authentication strategy.
#
# cas.authn.wsfed[].principal.principal-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# In the event that the principal resolution engine resolves
# more than
# one principal, (specially if such principals in the chain
# have
# different identifiers), this setting determines strategy by which
#
# the principal id would be chosen from the chain.
# Accepted values
# are: {@code last}, {@code first}.
#
# cas.authn.wsfed[].principal.principal-resolution-conflict-strategy: last

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# When true, throws an error back indicating that principal resolution
#
# has failed and no principal can be found based on the authentication
# requirements.
# Otherwise, logs the condition as an error without
# raising a catastrophic error.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.wsfed[].principal.principal-resolution-failure-fatal: UNDEFINED

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username
# to match
# for blocking/forbidden values.
# If a match is found, an exception
# will be thrown
# and principal transformation will fail.
#
# cas.authn.wsfed[].principal.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties.CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed
# into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.wsfed[].principal.principal-transformation.case-conversion: NONE

# Type: Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# Transform usernames using a Groovy resource.
# The location of the
# resource. Resources can be URLs, or
# files found either on the
# classpath or outside somewhere
# in the file system.
# <p>
# In the
# event the configured resource is a Groovy script, specially if the
# script set to reload on changes,
# you may need to adjust the total
# number of {@code inotify} instances.
# On Linux, you may need to add
# the following line to {@code /etc/sysctl.conf}:
# {@code
# fs.inotify.max_user_instances = 256}.
# <p>
# You can check the
# current value via {@code cat
# /proc/sys/fs/inotify/max_user_instances}.
# <p>
# In situations and
# scenarios where CAS is able to automatically watch the underlying
# resource
# for changes and detect updates and modifications
# dynamically, you may be able to specify the following
# setting as
# either an environment variable or system property with a value of
# {@code false} to disable
# the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.wsfed[].principal.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
#
# for username extractions. On a successful match, the first matched
# group
# in the pattern will be used as the extracted username.
#
# cas.authn.wsfed[].principal.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.wsfed[].principal.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.wsfed[].principal.principal-transformation.suffix: 

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Return a null principal object if no attributes can be found for the
# principal.
# Available values are as follows:
# <ul><li>{@code TRUE}:
# Constant to represent the true state.</li><li>{@code FALSE}: Constant
# to represent the false state.</li><li>{@code UNDEFINED}: Constant to
# represent the undefined state.</li></ul>
#
# cas.authn.wsfed[].principal.return-null: UNDEFINED

# Type: TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Uses an existing principal id that may have already
# been established
# in order to run person directory queries.
# This is generally useful
# in situations where
# authentication is delegated to an external
# identity provider
# and a principal is first established to then query
# an attribute source.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.wsfed[].principal.use-existing-principal-id: UNDEFINED

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# The identifier for CAS (RP) registered with wsfed.
#
# cas.authn.wsfed[].relying-party-identifier: urn:cas:localhost

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Locations of signing certificates used to verify assertions.
#
# Locations could be specified as static file-system
# resources(certificates)
# or they could also be federation XML
# metadata, either as a URL or an XML file.
# If federation metadata XML
# is provided, the signing certificate is extracted
# from the {@code
# IDPSSODescriptor}'s key descriptor that is marked for signing.
#
# cas.authn.wsfed[].signing-certificate-resources: classpath:adfs-signing.crt

# Type: java.lang.String
# Module: cas-server-support-wsfederation-webflow
# Owner: org.apereo.cas.configuration.model.support.wsfed.WsFederationDelegationProperties
#
# Tolerance value used to skew assertions to support clock drift.
#
# cas.authn.wsfed[].tolerance: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# When CRLs are cached, indicate maximum number of elements kept in
# memory.
#
# cas.authn.x509.cache-max-elements-in-memory: 1000

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# When CRLs are cached, indicate the time-to-live of cache items.
#
# cas.authn.x509.cache-time-to-live-seconds: PT4H

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Whether revocation checking should check all resources, or stop at
# first one.
#
# cas.authn.x509.check-all: false

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Deployer supplied setting to check the KeyUsage extension.
#
# cas.authn.x509.check-key-usage: false

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.CnEdipiPrincipalResolverProperties
#
# Attribute name that will be used by X509 principal resolvers if the
# main attribute in the certificate is not present. This only applies to
# principal resolvers that are looking for attributes in the certificate
# that are not common to all certificates. (e.g. {@code
# SUBJECT_ALT_NAME}, {@code CN_EDIPI}) <p> This assumes you would rather
# get something like the {@code subjectDn} rather than {@code null}
# where {@code null} would allow falling through to another
# authentication mechanism. <p> Currently supported values are: {@code
# subjectDn}, {@code sigAlgOid}, {@code subjectX500Principal}.
#
# cas.authn.x509.cn-edipi.alternate-principal-attribute: 

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.CnEdipiPrincipalResolverProperties
#
# Whether to extract EDIPI as an attribute, regardless of principal
# resolver type.
#
# cas.authn.x509.cn-edipi.extract-edipi-as-attribute: false

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# If the CRL has expired, activate the this policy. Activated if {@link
# #revocationChecker} is {@code CRL}. Accepted values are: <ul>
# <li>{@code ALLOW}: Allow authentication to proceed.</li> <li>{@code
# DENY}: Deny authentication and block.</li> <li>{@code THRESHOLD}:
# Applicable to CRL expiration, throttle the request whereby expired
# data is permitted up to a threshold period of time but not
# afterward.</li> </ul>
#
# cas.authn.x509.crl-expired-policy: DENY

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Options to describe how to fetch CRL resources. <p> To fetch CRLs, the
# following options are available: <ul> <li>{@code RESOURCE}: By
# default, all revocation checks use fixed resources to fetch the CRL
# resource from the specified location.</li> <li>{@code LDAP}: A CRL
# resource may be fetched from a pre-configured attribute, in the event
# that the CRL resource location is an LDAP URI.</li> </ul>
#
# cas.authn.x509.crl-fetcher: RESOURCE

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# If the CRL resource has expired, activate the this policy. Activated
# if {@link #revocationChecker} is {@code RESOURCE}. Accepted values
# are: <ul> <li>{@code ALLOW}: Allow authentication to proceed.</li>
# <li>{@code DENY}: Deny authentication and block.</li> <li>{@code
# THRESHOLD}: Applicable to CRL expiration, throttle the request whereby
# expired data is permitted up to a threshold period of time but not
# afterward.</li> </ul>
#
# cas.authn.x509.crl-resource-expired-policy: DENY

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# If the CRL resource is unavailable, activate the this policy.
# Activated if {@link #revocationChecker} is {@code RESOURCE}. Accepted
# values are: <ul> <li>{@code ALLOW}: Allow authentication to
# proceed.</li> <li>{@code DENY}: Deny authentication and block.</li>
# <li>{@code THRESHOLD}: Applicable to CRL expiration, throttle the
# request whereby expired data is permitted up to a threshold period of
# time but not afterward.</li> </ul>
#
# cas.authn.x509.crl-resource-unavailable-policy: DENY

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# List of CRL resources to use for fetching.
#
# cas.authn.x509.crl-resources: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# If the CRL is unavailable, activate the this policy. Activated if
# {@link #revocationChecker} is {@code CRL}. Accepted values are: <ul>
# <li>{@code ALLOW}: Allow authentication to proceed.</li> <li>{@code
# DENY}: Deny authentication and block.</li> <li>{@code THRESHOLD}:
# Applicable to CRL expiration, throttle the request whereby expired
# data is permitted up to a threshold period of time but not
# afterward.</li> </ul>
#
# cas.authn.x509.crl-unavailable-policy: DENY

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Whether to extract certificate from request. The default
# implementation extracts certificate from header via Tomcat SSLValve
# parsing logic and using the {@link #DEFAULT_CERT_HEADER_NAME} header.
# Must be false by default because if someone enables it they need to
# make sure they are behind proxy that won't let the header arrive
# directly from the browser.
#
# cas.authn.x509.extract-cert: false

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.authn.x509.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Set if multiple Entries are allowed.
#
# cas.authn.x509.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.authn.x509.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.authn.x509.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.authn.x509.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.authn.x509.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.authn.x509.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The LDAP attribute that holds the certificate revocation list.
#
# cas.authn.x509.ldap.certificate-attribute: certificateRevocationList

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.authn.x509.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.authn.x509.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.authn.x509.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.authn.x509.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Set if search referrals should be followed.
#
# cas.authn.x509.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.authn.x509.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.authn.x509.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.authn.x509.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Keystore password.
#
# cas.authn.x509.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.x509.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.authn.x509.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.authn.x509.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.authn.x509.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Name of the LDAP handler.
#
# cas.authn.x509.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.authn.x509.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.authn.x509.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.authn.x509.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Duration of time to wait for responses.
#
# cas.authn.x509.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# SASL authorization id.
#
# cas.authn.x509.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The SASL mechanism.
#
# cas.authn.x509.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# SASL mutual auth is enabled?
#
# cas.authn.x509.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# SASL quality of protected.
#
# cas.authn.x509.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The SASL realm.
#
# cas.authn.x509.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# SASL security strength.
#
# cas.authn.x509.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Search handlers.
#
# cas.authn.x509.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.authn.x509.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.x509.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.authn.x509.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.authn.x509.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.authn.x509.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.authn.x509.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.authn.x509.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.authn.x509.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.authn.x509.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.authn.x509.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.authn.x509.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.authn.x509.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.x509.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.authn.x509.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.authn.x509.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.authn.x509.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Whether subtree searching is allowed.
#
# cas.authn.x509.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.authn.x509.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.authn.x509.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.authn.x509.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Password needed to open the truststore.
#
# cas.authn.x509.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.authn.x509.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.authn.x509.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.authn.x509.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Period at which pool should be validated.
#
# cas.authn.x509.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.authn.x509.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509LdapProperties
#
# Period at which validation operations may time out.
#
# cas.authn.x509.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.authn.x509.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.authn.x509.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.authn.x509.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.authn.x509.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.authn.x509.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.authn.x509.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.authn.x509.ldap.validator.type: search

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Deployer supplied setting for maximum pathLength in a SUPPLIED
# certificate.
#
# cas.authn.x509.max-path-length: 1

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Deployer supplied setting to allow unlimited pathLength in a SUPPLIED
# certificate.
#
# cas.authn.x509.max-path-length-allow-unspecified: false

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Determine whether X509 authentication should allow other forms of
# authentication such as username/password. If this setting is turned
# off, typically the ability to view the login form as the primary form
# of authentication is turned off.
#
# cas.authn.x509.mixed-mode: true

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# The authentication handler name.
#
# cas.authn.x509.name: 

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# The order of the authentication handler in the chain.
#
# cas.authn.x509.order: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# The principal descriptor used for principal resolution when type is
# set to {@link PrincipalTypes#SUBJECT}.
#
# cas.authn.x509.principal-descriptor: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property renamed due to x509 settings reorganization.
# Replace with: Property renamed due to x509 settings reorganization.
#
# 
#
# cas.authn.x509.principal-hex-sn-zero-padding: 

# Type: java.lang.Integer
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property renamed due to x509 settings reorganization.
# Replace with: Property renamed due to x509 settings reorganization.
#
# 
#
# cas.authn.x509.principal-sn-radix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.x509.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.x509.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.x509.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.x509.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.x509.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.x509.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.model.support.x509.X509Properties$PrincipalTypes
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Indicates the type of principal resolution for X509.
# Available
# values are as follows:
# <ul><li>{@code CN_EDIPI}: Create principal by
# common name and EDIPI.</li><li>{@code RFC822_EMAIL}: Create principal
# from the RFC822 type name (aka email address) in the subject
# alternative name field.
# The subject alternative name field contains
# a list of various types of names, one type is RFC822 e-mail
# address.
# This will return the first e-mail address that is found (if there are
# more than one).</li><li>{@code SERIAL_NO}: Create principal by serial
# no.
# Resolve the principal by the serial number with a configurable
# <strong>radix</strong>, ranging from 2 to 36.
# If {@code radix} is
# {@code 16}, then the serial number could be filled with leading zeros
# to even the number of digits.</li><li>{@code SERIAL_NO_DN}: Create
# principal by serial no and DN.</li><li>{@code SUBJECT}: Create
# principal by subject.
# Resolve the principal by extracting one or
# more attribute values from the
# certificate subject DN and combining
# them with intervening delimiters.</li><li>{@code SUBJECT_ALT_NAME}:
# Create principal by subject alternative name.
# Resolve the principal
# by the subject alternative name extension. (type:
# otherName).</li><li>{@code SUBJECT_DN}: Create principal by subject
# DN.</li></ul>
#
# cas.authn.x509.principal-type: SUBJECT_DN

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Activated attribute repository identifiers that should be used for
# fetching attributes if attribute resolution is enabled. The list here
# may include identifiers separated by comma.
#
# cas.authn.x509.principal.active-attribute-repository-ids: *

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Control the behavior of the attribute repository selection by
# authentication method or handler. The map here is keyed by the
# authentication handler name, and the value is the attribute repository
# identifiers separated by comma. When the authentication handler is
# executed, the attribute repositories assigned to this handler will be
# selected to fetch attributes. Note that the resolution engine will
# always favor attribute repositories assigned to the service
# definition, if any and as part of its authentication policy, over this
# global setting.
#
# cas.authn.x509.principal.attribute-repository-selection: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Whether attribute repositories should be contacted to fetch person
# attributes. Defaults to true if not set.
# Available values are as
# follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.x509.principal.attribute-resolution-enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Attribute name to use to indicate the identifier of the principal
# constructed. If the attribute is blank or has no values, the default
# principal id will be used determined by the underlying authentication
# engine. The principal id attribute usually is removed from the
# collection of attributes collected, though this behavior depends on
# the schematics of the underlying authentication strategy.
#
# cas.authn.x509.principal.principal-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# In the event that the principal resolution engine resolves more than
# one principal, (specially if such principals in the chain have
# different identifiers), this setting determines strategy by which the
# principal id would be chosen from the chain. Accepted values are:
# {@code last}, {@code first}.
#
# cas.authn.x509.principal.principal-resolution-conflict-strategy: last

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# When true, throws an error back indicating that principal resolution
# has failed and no principal can be found based on the authentication
# requirements. Otherwise, logs the condition as an error without
# raising a catastrophic error.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.authn.x509.principal.principal-resolution-failure-fatal: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.authn.x509.principal.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.authn.x509.principal.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.authn.x509.principal.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.authn.x509.principal.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.authn.x509.principal.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.authn.x509.principal.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Return a null principal object if no attributes can be found for the
# principal.
# Available values are as follows:
# <ul><li>{@code TRUE}:
# Constant to represent the true state.</li><li>{@code FALSE}: Constant
# to represent the false state.</li><li>{@code UNDEFINED}: Constant to
# represent the undefined state.</li></ul>
#
# cas.authn.x509.principal.return-null: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Uses an existing principal id that may have already been established
# in order to run person directory queries. This is generally useful in
# situations where authentication is delegated to an external identity
# provider and a principal is first established to then query an
# attribute source.
# Available values are as follows:
# <ul><li>{@code
# TRUE}: Constant to represent the true state.</li><li>{@code FALSE}:
# Constant to represent the false state.</li><li>{@code UNDEFINED}:
# Constant to represent the undefined state.</li></ul>
#
# cas.authn.x509.principal.use-existing-principal-id: 

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# The refresh interval of the internal scheduler in cases where CRL
# revocation checking is done via resources.
#
# cas.authn.x509.refresh-interval-seconds: 3600

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# The pattern that authorizes an acceptable certificate by its subject
# dn.
#
# cas.authn.x509.reg-ex-subject-dn-pattern: .+

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# The compiled pattern supplied by the deployer.
#
# cas.authn.x509.reg-ex-trusted-issuer-dn-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Deployer supplied setting to force require the correct KeyUsage
# extension.
#
# cas.authn.x509.require-key-usage: false

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Revocation certificate checking can be carried out in one of the
# following ways: <ul> <li>{@code NONE}: No revocation is
# performed.</li> <li>{@code CRL}: The CRL URI(s) mentioned in the
# certificate cRLDistributionPoints extension field. Caches are
# available to prevent excessive IO against CRL endpoints. CRL data is
# fetched if does not exist in the cache or if it is expired.</li>
# <li>{@code RESOURCE}: A CRL hosted at a fixed location. The CRL is
# fetched at periodic intervals and cached.</li> </ul>
#
# cas.authn.x509.revocation-checker: NONE

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# Threshold value if expired CRL revocation policy is to be handled via
# threshold.
#
# cas.authn.x509.revocation-policy-threshold: 172800

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.Rfc822EmailPrincipalResolverProperties
#
# Attribute name that will be used by X509 principal resolvers if the
# main attribute in the certificate is not present. This only applies to
# principal resolvers that are looking for attributes in the certificate
# that are not common to all certificates. (e.g. {@code
# SUBJECT_ALT_NAME}, {@code CN_EDIPI}) <p> This assumes you would rather
# get something like the {@code subjectDn} rather than {@code null}
# where {@code null} would allow falling through to another
# authentication mechanism. <p> Currently supported values are: {@code
# subjectDn}, {@code sigAlgOid}, {@code subjectX500Principal}.
#
# cas.authn.x509.rfc822-email.alternate-principal-attribute: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.SerialNoDnPrincipalResolverProperties
#
# The serial number prefix used for principal resolution when type is
# set to {@link X509Properties.PrincipalTypes#SERIAL_NO_DN}.
#
# cas.authn.x509.serial-no-dn.serial-number-prefix: SERIALNUMBER=

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.SerialNoDnPrincipalResolverProperties
#
# Value delimiter used for principal resolution when type is set to
# {@link X509Properties.PrincipalTypes#SERIAL_NO_DN}.
#
# cas.authn.x509.serial-no-dn.value-delimiter: , 

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.SerialNoPrincipalResolverProperties
#
# If radix hex padding should be used when {@link
# X509Properties#getPrincipalType()} is {@link
# X509Properties.PrincipalTypes#SERIAL_NO}.
#
# cas.authn.x509.serial-no.principal-hex-s-n-zero-padding: false

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.SerialNoPrincipalResolverProperties
#
# Radix used when {@link X509Properties#getPrincipalType()} is {@link
# X509Properties.PrincipalTypes#SERIAL_NO}.
#
# cas.authn.x509.serial-no.principal-s-n-radix: 0

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property renamed due to x509 settings reorganization.
# Replace with: Property renamed due to x509 settings reorganization.
#
# 
#
# cas.authn.x509.serial-number-prefix: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# The name of the header to consult for an X509 cert (e.g. when behind
# proxy).
#
# cas.authn.x509.ssl-header-name: ssl_client_cert

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.SubjectAltNamePrincipalResolverProperties
#
# Attribute name that will be used by X509 principal resolvers if the
# main attribute in the certificate is not present. This only applies to
# principal resolvers that are looking for attributes in the certificate
# that are not common to all certificates. (e.g. {@code
# SUBJECT_ALT_NAME}, {@code CN_EDIPI}) <p> This assumes you would rather
# get something like the {@code subjectDn} rather than {@code null}
# where {@code null} would allow falling through to another
# authentication mechanism. <p> Currently supported values are: {@code
# subjectDn}, {@code sigAlgOid}, {@code subjectX500Principal}.
#
# cas.authn.x509.subject-alt-name.alternate-principal-attribute: 

# Type: org.apereo.cas.configuration.model.support.x509.SubjectDnPrincipalResolverProperties$SubjectDnFormat
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.SubjectDnPrincipalResolverProperties
#
# Format of subject DN to use.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Denigrated result of calling
# certificate.getSubjectDN() method.
# Javadocs designate this method as
# "denigrated" for not being portable and/or not being well defined.
#
# It is what has been used by CAS for a long time so it remains the
# default.</li><li>{@code RFC1779}: RFC 1779 String format of
# Distinguished Names.
# Calls {@code X500Principal.getName("RFC1779")}
# which emits a subject DN with the attribute keywords defined
# in RFC
# 1779 (CN, L, ST, O, OU, C, STREET). Any other attribute type is
# emitted as an OID.</li><li>{@code RFC2253}: RFC 2253 String format of
# Distinguished Names.
# Calls {@code X500Principal.getName("RFC2253")}
# which emits a subject DN with the attribute keywords defined in
# RFC
# 2253 (CN, L, ST, O, OU, C, STREET, DC, UID). Any other attribute type
# is emitted as an OID.</li><li>{@code CANONICAL}: Canonical String
# format of Distinguished Names.
# Calls
# X500Principal.getName("CANONICAL" which emits a subject DN that starts
# with RFC 2253 and applies
# additional canonicalizations described in
# the javadoc.</li></ul>
#
# cas.authn.x509.subject-dn.format: DEFAULT

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509Properties
#
# When CRL revocation checking is done via distribution points, decide
# if fetch failures should throw errors.
#
# cas.authn.x509.throw-on-fetch-failure: false

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property renamed due to x509 settings reorganization.
# Replace with: Property renamed due to x509 settings reorganization.
#
# 
#
# cas.authn.x509.value-delimiter: 

# Type: java.lang.String
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509WebflowAutoConfigurationProperties
#
# Indicate the strategy that should be used to enforce client x509
# authentication. Accepted values are {@code true, false, want}.
#
# cas.authn.x509.webflow.client-auth: want

# Type: java.lang.Boolean
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.authn.x509.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.authn.x509.webflow.order: 0

# Type: java.lang.Integer
# Module: cas-server-support-x509-webflow
# Owner: org.apereo.cas.configuration.model.support.x509.X509WebflowAutoConfigurationProperties
#
# Port that is used to enact x509 client authentication as a separate
# connector. Configuration of a separate server connector and port
# allows the separation of client-auth functionality from the rest of
# the server, allowing for opt-in behavior. <p> To activate, a non-zero
# port must be specified.
#
# cas.authn.x509.webflow.port: 0

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.support.clearpass.ClearpassProperties
#
# Enable clearpass and allow CAS to cache credentials.
#
# cas.clearpass.cache-credential: false

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.clearpass.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.clearpass.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.clearpass.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.clearpass.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.clearpass.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.clearpass.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.clearpass.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.consent.activation-strategy-groovy-script.location: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into a core sub namespace.
# Replace with: Setting is moved into a core sub namespace.
#
# 
#
# cas.consent.active: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-webflow
# Owner: org.apereo.cas.configuration.model.support.consent.ConsentCoreProperties
#
# Whether consent functionality should be globally applicable to all
# applications and requests.
#
# cas.consent.core.active: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.consent.core.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.consent.core.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.consent.core.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.consent.core.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.consent.core.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.consent.core.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.consent.core.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.Boolean
# Module: cas-server-support-consent-webflow
# Owner: org.apereo.cas.configuration.model.support.consent.ConsentCoreProperties
#
# Whether consent functionality should be enabled.
#
# cas.consent.core.enabled: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-consent-webflow
# Owner: org.apereo.cas.configuration.model.support.consent.ConsentCoreProperties
#
# Attributes that should always and globally be excluded from the list
# of consentable attributes. Such attributes are always ignored during
# consent rule calculations and users will not be prompted to consent to
# their release..
#
# cas.consent.core.excluded-attributes: 

# Type: java.lang.Long
# Module: cas-server-support-consent-webflow
# Owner: org.apereo.cas.configuration.model.support.consent.ConsentCoreProperties
#
# Global reminder time unit, to reconfirm consent in cases no changes
# are detected.
#
# cas.consent.core.reminder: 30

# Type: java.time.temporal.ChronoUnit
# Module: cas-server-support-consent-webflow
# Owner: org.apereo.cas.configuration.model.support.consent.ConsentCoreProperties
#
# Global reminder time unit of measure, to reconfirm consent in cases no
# changes are detected.
#
# cas.consent.core.reminder-time-unit: 

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.consent.core.webflow.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.consent.core.webflow.order: 0

# Type: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into a core sub namespace.
# Replace with: Setting is moved into a core sub namespace.
#
# 
#
# cas.consent.crypto.encryption.key: 

# Type: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into a core sub namespace.
# Replace with: Setting is moved into a core sub namespace.
#
# 
#
# cas.consent.crypto.signing.key: 

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.consent.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Client execution timeout.
#
# cas.consent.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Connection timeout.
#
# cas.consent.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.consent.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.consent.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.consent.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.consent.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.consent.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.consent.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.consent.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.consent.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.consent.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.consent.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.consent.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# AWS custom endpoint.
#
# cas.consent.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Local address.
#
# cas.consent.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.consent.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Maximum connections setting.
#
# cas.consent.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.consent.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Profile name to use.
#
# cas.consent.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Profile path.
#
# cas.consent.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.consent.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.consent.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.consent.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Read capacity.
#
# cas.consent.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# AWS region used.
#
# cas.consent.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.consent.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Socket timeout.
#
# cas.consent.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# The table name used and created by CAS to hold consent records in
# DynamoDb.
#
# cas.consent.dynamo-db.table-name: DynamoDbConsentRecords

# Type: java.lang.Integer
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Time offset.
#
# cas.consent.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Flag that indicates whether to use reaper.
#
# cas.consent.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-consent-dynamodb
# Owner: org.apereo.cas.configuration.model.support.consent.DynamoDbConsentProperties
#
# Write capacity.
#
# cas.consent.dynamo-db.write-capacity: 10

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into a core sub namespace.
# Replace with: Setting is moved into a core sub namespace.
#
# 
#
# cas.consent.enabled: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-consent-webflow
# Owner: org.apereo.cas.configuration.model.support.consent.GroovyConsentProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.consent.groovy.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.consent.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.consent.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.consent.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.consent.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.consent.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.consent.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.consent.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.consent.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# The JDBC driver used to connect to the database.
#
# cas.consent.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.consent.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.consent.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Allow hibernate to generate query statistics.
#
# cas.consent.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.consent.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.consent.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.consent.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.consent.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.consent.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# The database connection password.
#
# cas.consent.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.consent.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.consent.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.consent.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.consent.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.consent.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.consent.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.consent.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.consent.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.consent.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.consent.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.consent.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.consent.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# The database connection URL.
#
# cas.consent.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-consent-jdbc
# Owner: org.apereo.cas.configuration.model.support.consent.JpaConsentProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.consent.jpa.user: sa

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-consent-webflow
# Owner: org.apereo.cas.configuration.model.support.consent.JsonConsentProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.consent.json.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.consent.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Set if multiple Entries are allowed.
#
# cas.consent.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.consent.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.consent.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.consent.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.consent.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.consent.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.consent.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.consent.ldap.connection-strategy: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Name of LDAP attribute that holds consent decisions as JSON.
#
# cas.consent.ldap.consent-attribute-name: casConsentDecision

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.consent.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.consent.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Set if search referrals should be followed.
#
# cas.consent.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.consent.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.consent.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.consent.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Keystore password.
#
# cas.consent.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.consent.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.consent.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.consent.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.consent.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Name of the LDAP handler.
#
# cas.consent.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.consent.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.consent.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.consent.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Duration of time to wait for responses.
#
# cas.consent.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# SASL authorization id.
#
# cas.consent.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The SASL mechanism.
#
# cas.consent.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# SASL mutual auth is enabled?
#
# cas.consent.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# SASL quality of protected.
#
# cas.consent.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The SASL realm.
#
# cas.consent.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# SASL security strength.
#
# cas.consent.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Search handlers.
#
# cas.consent.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.consent.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.consent.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.consent.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.consent.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.consent.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.consent.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.consent.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.consent.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.consent.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.consent.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.consent.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.consent.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.consent.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.consent.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.consent.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.consent.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Whether subtree searching is allowed.
#
# cas.consent.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.consent.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.consent.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.consent.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Password needed to open the truststore.
#
# cas.consent.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.consent.ldap.trust-store-type: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapType
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Type of LDAP directory.
# Available values are as follows:
#
# <ul><li>{@code GENERIC}: Generic ldap type (OpenLDAP, 389ds,
# etc).</li><li>{@code AD}: Active directory.</li><li>{@code FreeIPA}:
# FreeIPA directory.</li><li>{@code EDirectory}: EDirectory.</li></ul>
#
# cas.consent.ldap.type: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.consent.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.consent.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Period at which pool should be validated.
#
# cas.consent.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.consent.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-consent-ldap
# Owner: org.apereo.cas.configuration.model.support.consent.LdapConsentProperties
#
# Period at which validation operations may time out.
#
# cas.consent.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.consent.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.consent.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.consent.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.consent.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.consent.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.consent.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.consent.ldap.validator.type: search

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Name of the database to use for authentication.
#
# cas.consent.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.consent.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.consent.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# MongoDb database instance name.
#
# cas.consent.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.consent.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.consent.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# MongoDb database password for authentication.
#
# cas.consent.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.consent.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.consent.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.consent.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.consent.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.consent.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.consent.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# MongoDb database port.
#
# cas.consent.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.consent.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.consent.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.consent.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.consent.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.consent.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Whether connections require SSL.
#
# cas.consent.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# MongoDb database connection timeout.
#
# cas.consent.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# MongoDb database user for authentication.
#
# cas.consent.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-consent-mongo
# Owner: org.apereo.cas.configuration.model.support.consent.MongoDbConsentProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.consent.mongo.write-concern: ACKNOWLEDGED

# Type: java.io.File
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.consent.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.consent.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.consent.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.consent.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.consent.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.consent.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.consent.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.consent.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.consent.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.consent.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.consent.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.consent.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.consent.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.consent.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Connection timeout.
#
# cas.consent.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Database index used by the connection factory.
#
# cas.consent.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.consent.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Redis server host.
#
# cas.consent.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.consent.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.consent.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.consent.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Login password of the redis server.
#
# cas.consent.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.consent.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.consent.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.consent.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.consent.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.consent.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.consent.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.consent.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.consent.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.consent.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.consent.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.consent.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.consent.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.consent.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.consent.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Redis server port.
#
# cas.consent.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Redis protocol version.
#
# cas.consent.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.consent.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.consent.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.consent.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.consent.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.consent.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.consent.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.consent.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Command timeout.
#
# cas.consent.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Database URI.
#
# cas.consent.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.consent.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Login username of the redis server.
#
# cas.consent.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-consent-redis
# Owner: org.apereo.cas.configuration.model.support.consent.RedisConsentProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.consent.redis.verify-peer: true

# Type: java.time.temporal.ChronoUnit
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into a core sub namespace.
# Replace with: Setting is moved into a core sub namespace.
#
# 
#
# cas.consent.reminder-time-unit: 

# Type: java.lang.String
# Module: cas-server-support-consent-rest
# Owner: org.apereo.cas.configuration.model.support.consent.RestfulConsentProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.consent.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-consent-rest
# Owner: org.apereo.cas.configuration.model.support.consent.RestfulConsentProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.consent.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-consent-rest
# Owner: org.apereo.cas.configuration.model.support.consent.RestfulConsentProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.consent.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-consent-rest
# Owner: org.apereo.cas.configuration.model.support.consent.RestfulConsentProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.consent.rest.url: 

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.ExpiringSimpleCacheProperties
#
# This cache size specifies the maximum number of entries the cache may
# contain. Note that the cache may evict an entry before this limit is
# exceeded or temporarily exceed the threshold while evicting. As the
# cache size grows close to the maximum, the cache evicts entries that
# are less likely to be used again. For example, the cache may evict an
# entry because it hasn't been used recently or very often. Note: to
# disable the cache, you may choose a cache size of {@code 0}.
#
# cas.core.groovy-cache-manager.cache-size: 10000

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.ExpiringSimpleCacheProperties
#
# Cache duration specifies the fixed duration for an entry to be
# automatically removed from the cache after its creation.
#
# cas.core.groovy-cache-manager.duration: PT15M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.ExpiringSimpleCacheProperties
#
# This cache capacity sets the minimum total size for the internal data
# structures. Providing a large enough estimate at construction time
# avoids the need for expensive resizing operations later, but setting
# this value unnecessarily high wastes memory.
#
# cas.core.groovy-cache-manager.initial-capacity: 1000

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.support.custom.CasCustomProperties
#
# Collection of custom settings that can be utilized for a local
# deployment. The settings should be available to CAS views and webflows
# for altering UI and/or introducing custom behavior to any extended
# customized component without introducing a new property namespace.
# This is defined as a map, where the key should be the setting name and
# the value should be the setting value.
#
# cas.custom.properties: 

# Type: java.lang.String
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# API key used to authenticate to the mailjet service.
#
# cas.email-provider.mailjet.api-key: 

# Type: java.lang.String
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# Bearer access token used to authenticate to the mailjet service.
# Mainly requires for the SMS integration.
#
# cas.email-provider.mailjet.bearer-access-token: 

# Type: java.lang.Boolean
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# Indicates whether the mailjet integration should be run in sandbox
# mode. By setting this property to a {@code true} value, you will turn
# off the delivery of the message while still getting back the full
# range of error messages that could be related to your message
# processing. If the message is processed without error, the response
# will follow the normal response payload format, omitting only the
# {@code MessageID} and {@code MessageUUID}.
#
# cas.email-provider.mailjet.sandbox-mode: false

# Type: java.lang.String
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# Secret key used to authenticate to the mailjet service.
#
# cas.email-provider.mailjet.secret-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Client execution timeout.
#
# cas.email-provider.ses.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Configures configuration set name. Configuration sets let you create
# groups of rules that you can apply to the emails you send using Amazon
# SES.
#
# cas.email-provider.ses.configuration-set-name: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Connection timeout.
#
# cas.email-provider.ses.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.email-provider.ses.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.email-provider.ses.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# AWS custom endpoint.
#
# cas.email-provider.ses.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Local address.
#
# cas.email-provider.ses.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Maximum connections setting.
#
# cas.email-provider.ses.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Profile name to use.
#
# cas.email-provider.ses.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Profile path.
#
# cas.email-provider.ses.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.email-provider.ses.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.email-provider.ses.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.email-provider.ses.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# AWS region used.
#
# cas.email-provider.ses.region: 

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.email-provider.ses.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Socket timeout.
#
# cas.email-provider.ses.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Configures source ARN. Used only for sending authorization. The ARN of
# the identity that is associated with the sending authorization policy
# that permits you to send for the email address specified.
#
# cas.email-provider.ses.source-arn: 

# Type: java.lang.Boolean
# Module: cas-server-support-aws-ses
# Owner: org.apereo.cas.configuration.model.support.email.AmazonSesProperties
#
# Flag that indicates whether to use reaper.
#
# cas.email-provider.ses.use-reaper: false

# Type: java.lang.Boolean
# Module: cas-server-core-events
# Owner: org.apereo.cas.configuration.model.core.events.CoreEventsProperties
#
# Whether event tracking and recording functionality should be enabled.
#
# cas.events.core.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-events
# Owner: org.apereo.cas.configuration.model.core.events.CoreEventsProperties
#
# Whether CAS should track the underlying configuration store for
# changes. This depends on whether the store provides that sort of
# functionality. When running in standalone mode, this typically
# translates to CAS monitoring configuration files and reloading context
# conditionally if there are any changes.
#
# cas.events.core.track-configuration-modifications: false

# Type: java.lang.Boolean
# Module: cas-server-core-events
# Owner: org.apereo.cas.configuration.model.core.events.CoreEventsProperties
#
# Whether geolocation should be tracked as part of collected
# authentication events. This of course requires consent from the user's
# browser to collect stats on location. Turning on this setting would
# prompt the browser to ask for user's consent to collect geo location
# directly. If geo location information is not available using this
# strategy, it may still be extracted and determined based on the client
# IP address at the time the event is being recorded and captured by
# CAS.
#
# cas.events.core.track-geolocation: false

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.events.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Client execution timeout.
#
# cas.events.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Connection timeout.
#
# cas.events.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.events.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.events.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.events.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.events.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.events.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.events.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.events.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.events.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.events.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.events.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.events.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# AWS custom endpoint.
#
# cas.events.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Local address.
#
# cas.events.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.events.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Maximum connections setting.
#
# cas.events.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.events.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Profile name to use.
#
# cas.events.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Profile path.
#
# cas.events.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.events.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.events.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.events.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Read capacity.
#
# cas.events.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# AWS region used.
#
# cas.events.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.events.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Socket timeout.
#
# cas.events.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# The table name used and created by CAS to hold events in DynamoDb.
#
# cas.events.dynamo-db.table-name: DynamoDbCasEvents

# Type: java.lang.Integer
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Time offset.
#
# cas.events.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Flag that indicates whether to use reaper.
#
# cas.events.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-events-dynamodb
# Owner: org.apereo.cas.configuration.model.core.events.DynamoDbEventsProperties
#
# Write capacity.
#
# cas.events.dynamo-db.write-capacity: 10

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because enabled setting is moved into the core namespace.
# Replace with: enabled setting is moved into the core namespace.
#
# 
#
# cas.events.enabled: 

# Type: java.lang.String
# Module: cas-server-support-events-influxdb
# Owner: org.apereo.cas.configuration.model.core.events.InfluxDbEventsProperties
#
# Database name.
#
# cas.events.influx-db.database: 

# Type: java.lang.String
# Module: cas-server-support-events-influxdb
# Owner: org.apereo.cas.configuration.model.core.events.InfluxDbEventsProperties
#
# Organization name.
#
# cas.events.influx-db.organization: CAS

# Type: java.lang.String
# Module: cas-server-support-events-influxdb
# Owner: org.apereo.cas.configuration.model.core.events.InfluxDbEventsProperties
#
# InfluxDb connection password.
#
# cas.events.influx-db.password: password

# Type: java.lang.String
# Module: cas-server-support-events-influxdb
# Owner: org.apereo.cas.configuration.model.core.events.InfluxDbEventsProperties
#
# InfluxDb connection url.
#
# cas.events.influx-db.url: http://localhost:8086

# Type: java.lang.String
# Module: cas-server-support-events-influxdb
# Owner: org.apereo.cas.configuration.model.core.events.InfluxDbEventsProperties
#
# InfluxDb connection username.
#
# cas.events.influx-db.username: root

# Type: java.lang.Boolean
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.events.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.events.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.events.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.events.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.events.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.events.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.events.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.events.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# The JDBC driver used to connect to the database.
#
# cas.events.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Boolean
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Whether capturing events via JPA is enabled.
#
# cas.events.jpa.enabled: true

# Type: java.lang.Long
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.events.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.events.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Allow hibernate to generate query statistics.
#
# cas.events.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.events.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.events.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.events.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.events.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.events.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# The database connection password.
#
# cas.events.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.events.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.events.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.events.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.events.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.events.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.events.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.events.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.events.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.events.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.events.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.events.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.events.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# The database connection URL.
#
# cas.events.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-events-jpa
# Owner: org.apereo.cas.configuration.model.core.events.JpaEventsProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.events.jpa.user: sa

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Name of the database to use for authentication.
#
# cas.events.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.events.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.events.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# MongoDb database instance name.
#
# cas.events.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.events.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.events.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# MongoDb database password for authentication.
#
# cas.events.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.events.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.events.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.events.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.events.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.events.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.events.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# MongoDb database port.
#
# cas.events.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.events.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.events.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.events.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.events.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.events.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Whether connections require SSL.
#
# cas.events.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# MongoDb database connection timeout.
#
# cas.events.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# MongoDb database user for authentication.
#
# cas.events.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-events-mongo
# Owner: org.apereo.cas.configuration.model.core.events.MongoDbEventsProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.events.mongo.write-concern: ACKNOWLEDGED

# Type: java.io.File
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.events.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.events.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.events.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.events.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.events.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.events.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.events.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.events.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.events.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.events.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.events.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.events.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.events.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.events.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Connection timeout.
#
# cas.events.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Database index used by the connection factory.
#
# cas.events.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.events.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Redis server host.
#
# cas.events.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.events.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.events.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.events.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Login password of the redis server.
#
# cas.events.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.events.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.events.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.events.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.events.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.events.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.events.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.events.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.events.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.events.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.events.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.events.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.events.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.events.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.events.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Redis server port.
#
# cas.events.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Redis protocol version.
#
# cas.events.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.events.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.events.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.events.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.events.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.events.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.events.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.events.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Command timeout.
#
# cas.events.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Database URI.
#
# cas.events.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.events.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Login username of the redis server.
#
# cas.events.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-events-redis
# Owner: org.apereo.cas.configuration.model.core.events.RedisEventsProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.events.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-geolocation-azure
# Owner: org.apereo.cas.configuration.model.support.geo.azure.AzureMapsProperties
#
# Azure maps client id.
#
# cas.geo-location.azure.client-id: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-azure
# Owner: org.apereo.cas.configuration.model.support.geo.azure.AzureMapsProperties
#
# Azure maps subscription id.
#
# cas.geo-location.azure.subscription-id: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-azure
# Owner: org.apereo.cas.configuration.model.support.geo.azure.AzureMapsProperties
#
# Directory (tenant) ID.
#
# cas.geo-location.azure.tenant-id: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-googlemaps
# Owner: org.apereo.cas.configuration.model.support.geo.googlemaps.GoogleMapsProperties
#
# Authenticate into google maps via an API key.
#
# cas.geo-location.google-maps.api-key: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-googlemaps
# Owner: org.apereo.cas.configuration.model.support.geo.googlemaps.GoogleMapsProperties
#
# Authenticate into google maps via a client id.
#
# cas.geo-location.google-maps.client-id: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-googlemaps
# Owner: org.apereo.cas.configuration.model.support.geo.googlemaps.GoogleMapsProperties
#
# Authenticate into google maps via a client secret.
#
# cas.geo-location.google-maps.client-secret: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-googlemaps
# Owner: org.apereo.cas.configuration.model.support.geo.googlemaps.GoogleMapsProperties
#
# The connection timeout when reaching out to google maps.
#
# cas.geo-location.google-maps.connect-timeout: PT3S

# Type: java.lang.Boolean
# Module: cas-server-support-geolocation-googlemaps
# Owner: org.apereo.cas.configuration.model.support.geo.googlemaps.GoogleMapsProperties
#
# When true, a strategy for handling URL requests using Google App
# Engine's URL Fetch API.
#
# cas.geo-location.google-maps.google-apps-engine: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.geo-location.groovy.location: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-ip
# Owner: org.apereo.cas.configuration.model.support.geo.ip.IPGeoLocationProperties
#
# API key required for this integration.
#
# cas.geo-location.ip-geo-location.api-key: 

# Type: java.lang.Integer
# Module: cas-server-support-geolocation-maxmind
# Owner: org.apereo.cas.configuration.model.support.geo.maxmind.MaxmindProperties
#
# Geolocating an IP address using Maxmind web services will need your
# MaxMind account ID and license key. A zero or negative value will
# deactivate the web services integration.
#
# cas.geo-location.maxmind.account-id: 0

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-geolocation-maxmind
# Owner: org.apereo.cas.configuration.model.support.geo.maxmind.MaxmindProperties
#
# Path to the location of the database file containing cities.
#
# cas.geo-location.maxmind.city-database: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-geolocation-maxmind
# Owner: org.apereo.cas.configuration.model.support.geo.maxmind.MaxmindProperties
#
# Path to the location of the database file containing countries.
#
# cas.geo-location.maxmind.country-database: 

# Type: java.lang.String
# Module: cas-server-support-geolocation-maxmind
# Owner: org.apereo.cas.configuration.model.support.geo.maxmind.MaxmindProperties
#
# Geolocating an IP address using Maxmind web services will need your
# MaxMind account ID and license key. A blank, undefined value will
# deactivate the web services integration.
#
# cas.geo-location.maxmind.license-key: 

# Type: java.lang.String
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# Attribute name to collect from the authentication event to serve as
# the cookie value.
#
# cas.google-analytics.cookie.attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# A regular expression pattern that is tested against attribute values
# to only release and allow those that produce a successful match.
#
# cas.google-analytics.cookie.attribute-value-pattern: .+

# Type: java.lang.String
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.google-analytics.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.google-analytics.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.google-analytics.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.google-analytics.cookie.name: 

# Type: java.lang.String
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.google-analytics.cookie.path: 

# Type: java.lang.String
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.google-analytics.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.google-analytics.cookie.secure: true

# Type: java.lang.String
# Module: cas-server-support-google-analytics
# Owner: org.apereo.cas.configuration.model.support.analytics.GoogleAnalyticsProperties
#
# The tracking id. Configuring the tracking activated google analytics
# in CAS on UI views, etc.
#
# cas.google-analytics.google-analytics-tracking-id: 

# Type: java.lang.String
# Module: cas-server-support-notifications-fcm
# Owner: org.apereo.cas.configuration.model.support.firebase.GoogleFirebaseCloudMessagingProperties
#
# Firebase database url.
#
# cas.google-firebase-messaging.database-url: 

# Type: java.lang.String
# Module: cas-server-support-notifications-fcm
# Owner: org.apereo.cas.configuration.model.support.firebase.GoogleFirebaseCloudMessagingProperties
#
# The principal attribute name that contains the registration token for
# the user. Registration tokens that are provided by clients during the
# handshake process should be stored on the server, and made available
# to CAS as a principal attribute.
#
# cas.google-firebase-messaging.registration-token-attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-notifications-fcm
# Owner: org.apereo.cas.configuration.model.support.firebase.GoogleFirebaseCloudMessagingProperties
#
# Required scopes to properly communicate with the firebase cloud.
#
# cas.google-firebase-messaging.scopes: 

# Type: org.apereo.cas.configuration.model.SpringResourceProperties
# Module: cas-server-support-notifications-fcm
# Owner: org.apereo.cas.configuration.model.support.firebase.GoogleFirebaseCloudMessagingProperties
#
# Path to the service account key json file. This can optional if you
# set the environment variable {@code GOOGLE_APPLICATION_CREDENTIALS} to
# the file path of the JSON file that contains your service account key.
# If this is undefined, the property value will be used instead.
#
# cas.google-firebase-messaging.service-account-key: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# A regular expression pattern to indicate that captcha should be
# activated when the remote IP address matches this pattern, and
# otherwise skipped and disabled.
#
# cas.google-recaptcha.activate-for-ip-address-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether reCAPTCHA should be enabled.
#
# cas.google-recaptcha.enabled: true

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Headers, defined as a {@link Map}, to include in the request when
# making the verification call to the recaptcha API.
#
# cas.google-recaptcha.headers: 

# Type: java.lang.Boolean
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Whether google reCAPTCHA invisible should be enabled.
#
# cas.google-recaptcha.invisible: false

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The google reCAPTCHA badge position (only if invisible is enabled).
# Accepted values are: <ul> <li>{@code bottomright}: bottom right
# corner, default value.</li> <li>{@code bottomleft}: bottom left
# corner</li> <li>{@code inline}: allows to control the CSS.</li> </ul>
#
# cas.google-recaptcha.position: bottomright

# Type: java.lang.Double
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Google reCAPTCHA v3 returns a score (1.0 is very likely a good
# interaction, 0.0 is very likely a bot). reCAPTCHA learns by seeing
# real traffic on your site. For this reason, scores in a staging
# environment or soon after implementing may differ from production. As
# reCAPTCHA v3 doesn't ever interrupt the user flow, you can first run
# reCAPTCHA without taking action and then decide on thresholds by
# looking at your traffic in the admin console. By default, you can use
# a threshold of 0.5.
#
# cas.google-recaptcha.score: 0.5

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site secret.
#
# cas.google-recaptcha.secret: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA site key.
#
# cas.google-recaptcha.site-key: 

# Type: java.lang.String
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# The reCAPTCHA endpoint for verification of the reCAPTCHA response. The
# endpoint is specific to the reCAPTCHA provider: <ul> <li>For Google
# reCAPTCHA, the endpoint is {@code
# https://www.google.com/recaptcha/api/siteverify}.</li> <li>For
# hCaptcha, the endpoint is {@code
# https://hcaptcha.com/siteverify}.</li> <li>For Turnstile, the endpoint
# is {@code
# https://challenges.cloudflare.com/turnstile/v0/siteverify}.</li> </ul>
#
# cas.google-recaptcha.verify-url: https://www.google.com/recaptcha/api/siteverify

# Type: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties$RecaptchaVersions
# Module: cas-server-support-captcha
# Owner: org.apereo.cas.configuration.model.support.captcha.GoogleRecaptchaProperties
#
# Indicate the version of the recaptcha api.
# Available values are as
# follows:
# <ul><li>{@code GOOGLE_RECAPTCHA_V2}: V2 version of the
# recaptcha API.</li><li>{@code GOOGLE_RECAPTCHA_V3}: V3 version of the
# recaptcha API.</li><li>{@code HCAPTCHA}: hCaptcha is an alternative to
# reCAPTCHA that requires website visitors
# to label images as part of
# its business model.
# The provider is more focused on manual image
# recognition challenges. It is a image classification
# task based
# CAPTCHA provider employing visual challenges like identifying
# objects.</li><li>{@code TURNSTILE}: Offers a CAPTCHA alternative by
# Cloudflare that prioritizes user experience and privacy.
# Turnstile
# delivers frustration-free, CAPTCHA-free web experiences to website
# visitors -
# with just a simple snippet of free code. Moreover,
# Turnstile stops abuse and confirms
# visitors are real without the
# data privacy concerns or awful user experience of CAPTCHAs.</li></ul>
#
# cas.google-recaptcha.version: GOOGLE_RECAPTCHA_V2

# Type: java.lang.String
# Module: cas-server-core
# Owner: org.apereo.cas.configuration.model.core.CasServerHostProperties
#
# Name of the networking host configured to run CAS server. A CAS host
# is automatically appended to the ticket ids generated by CAS. If none
# is specified, one is automatically detected and used by CAS.
#
# cas.host.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Whether CAS should accept local URLs. For example {@code
# http(s)://localhost/logout}.
#
# cas.http-client.allow-local-urls: false

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Indicates timeout for async operations.
#
# cas.http-client.async-timeout: PT5S

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Whether the regular expression specified with {@link
# #authorityValidationRegex} should be handled as case-sensitive ({@code
# true}) or case-insensitive ({@code false}). If no {@link
# #authorityValidationRegex} is set, this value does not have any
# effect.
#
# cas.http-client.authority-validation-reg-ex-case-sensitive: true

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# If specified the regular expression will be used to validate the url's
# authority.
#
# cas.http-client.authority-validation-regex: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Connection timeout for all operations that reach out to URL endpoints.
#
# cas.http-client.connection-timeout: PT5S

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# The default headers to use for any HTTP connection. This is defined as
# map, where the key is the header name and the value is the header
# value that should be sent along with request.
#
# cas.http-client.default-headers: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Enable hostname verification when attempting to contact URL endpoints.
# May also be set to {@code none} to disable verification.
#
# cas.http-client.host-name-verifier: default

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Send requests via a proxy; define the hostname.
#
# cas.http-client.proxy-host: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Send requests via a proxy; define the proxy port. Negative/zero values
# should deactivate the proxy configuration for the http client.
#
# cas.http-client.proxy-port: 0

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Determines the timeout until arrival of a response from the opposite
# endpoint. A timeout value of zero is interpreted as an infinite
# timeout. Please note that response timeout may be unsupported by HTTP
# transports with message multiplexing.
#
# cas.http-client.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientProperties
#
# Determines the default socket timeout value for I/O operations.
#
# cas.http-client.socket-timeout: PT5S

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientTrustStoreProperties
#
# The CAS local truststore resource to contain certificates to the CAS
# deployment. In the event that local certificates are to be imported
# into the CAS running environment, a local truststore is provided by
# CAS to improve portability of configuration across environments.
#
# cas.http-client.truststore.file: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientTrustStoreProperties
#
# The truststore password.
#
# cas.http-client.truststore.psw: changeit

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.HttpClientTrustStoreProperties
#
# Truststore type used to create a SSL context for http client.
#
# cas.http-client.truststore.type: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpRequestProperties
#
# Whether CAS should accept multi-valued parameters in incoming
# requests. Example block would to prevent requests where more than one
# {@code service} parameter is specified.
#
# cas.http-web-request.allow-multi-value-parameters: false

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpRequestProperties
#
# Characters to block in incoming requests. {@code none} is a special
# value. Separate characters by a space.
#
# cas.http-web-request.characters-to-forbid: none

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# The Access-Control-Allow-Credentials header Indicates whether or not
# the response to the request can be exposed when the credentials flag
# is true. When used as part of a response to a preflight request, this
# indicates whether or not the actual request can be made using
# credentials. Note that simple GET requests are not preflighted, and so
# if a request is made for a resource with credentials, if this header
# is not returned with the resource, the response is ignored by the
# browser and not returned to web content.
#
# cas.http-web-request.cors.allow-credentials: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# The Access-Control-Allow-Headers header is used in response to a
# preflight request to indicate which HTTP headers can be used when
# making the actual request. Default is everything.
#
# cas.http-web-request.cors.allow-headers: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# The Access-Control-Allow-Methods header specifies the method or
# methods allowed when accessing the resource. This is used in response
# to a pre-flight request. The conditions under which a request is
# pre-flighted are discussed above. Default is everything.
#
# cas.http-web-request.cors.allow-methods: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# Comma-separated list of origin patterns to allow. Unlike allowed
# origins which only supports {@code *}, origin patterns are more
# flexible (for example {@code https://*.example.com}) and can be used
# when credentials are allowed. When no allowed origin patterns or
# allowed origins are set, CORS support is disabled.
#
# cas.http-web-request.cors.allow-origin-patterns: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# The Origin header indicates the origin of the cross-site access
# request or preflight request. The origin is a URI indicating the
# server from which the request initiated. When credentials are allowed,
# '*' cannot be used and origin patterns should be configured instead.
# It does not include any path information, but only the server name.
#
# cas.http-web-request.cors.allow-origins: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# Whether CORS should be enabled for http requests.
#
# cas.http-web-request.cors.enabled: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# The Access-Control-Expose-Headers header lets a server accept headers
# that browsers are allowed to access.
#
# cas.http-web-request.cors.exposed-headers: 

# Type: java.lang.Long
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpCorsRequestProperties
#
# The Access-Control-Max-Age header indicates how long the results of a
# preflight request can be cached.
#
# cas.http-web-request.cors.max-age: 3600

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpRequestProperties
#
# Custom response headers to inject into the response as needed.
#
# cas.http-web-request.custom-headers: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# When true, will inject the following headers into the response for
# non-static resources. &lt;pre&gt; Cache-Control: no-cache, no-store,
# max-age=0, must-revalidate Pragma: no-cache Expires: 0 &lt;/pre&gt;
#
# cas.http-web-request.header.cache: true

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# Files with these extensions are considered static, so they will be
# cached by browsers. The value is part of a RegEx.
#
# cas.http-web-request.header.cache-control-static-resources: css|js|png|txt|jpg|ico|jpeg|bmp|gif

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# Helps you reduce XSS risks on modern browsers by declaring what
# dynamic resources are allowed to load via a HTTP Header. Header value
# is made up of one or more directives. Multiple directives are
# separated with a semicolon.
#
# cas.http-web-request.header.content-security-policy: script-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'none'; worker-src 'self' blob: 'unsafe-inline';

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# Allow CAS to inject and enforce http security headers via an http
# filter that are outlined here for caching, HSTS, etc.
#
# cas.http-web-request.header.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# When true, will inject the following headers into the response: {@code
# Strict-Transport-Security: ...}.
#
# cas.http-web-request.header.hsts: true

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# Control the value of the {@code Strict-Transport-Security} header.
#
# cas.http-web-request.header.hsts-options: max-age=15768000 ; includeSubDomains

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# When true, will inject the following headers into the response: {@code
# X-Content-Type-Options: nosniff}.
#
# cas.http-web-request.header.xcontent: true

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# When true, will inject the following headers into the response: {@code
# X-Frame-Options: DENY}.
#
# cas.http-web-request.header.xframe: true

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# Will inject values into the {@code X-Frame-Options} header into the
# response.
#
# cas.http-web-request.header.xframe-options: DENY

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# When true, will inject the following headers into the response: {@code
# X-XSS-Protection: 1; mode=block}.
#
# cas.http-web-request.header.xss: true

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpHeadersRequestProperties
#
# Will inject values into the {@code X-XSS-Protection} header into the
# response.
#
# cas.http-web-request.header.xss-options: 1; mode=block

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpRequestProperties
#
# Parameters that are only allowed and accepted during posts.
#
# cas.http-web-request.only-post-params: password

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpRequestProperties
#
# Parameters to sanitize and cross-check in incoming requests. Separate
# parameter names by a comma. The special value * instructs the Filter
# to check all parameters.
#
# cas.http-web-request.params-to-check: ticket,service,renew,gateway,warn,method,target,SAMLart,pgtUrl,pgt,pgtId,pgtIou,targetService,entityId,token

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpRequestProperties
#
# Specify a regular expression that would be checked against the request
# URL. If a successful match is found, the request would be blocked.
#
# cas.http-web-request.pattern-to-block: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpWebRequestProperties
#
# Control and specify the encoding for all http requests.
#
# cas.http-web-request.web.encoding: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.security.HttpWebRequestProperties
#
# Whether specified encoding should be forced for every request. Whether
# the specified encoding is supposed to override existing request and
# response encodings
#
# cas.http-web-request.web.force-encoding: true

# Type: java.lang.Long
# Module: cas-server-core-api
# Owner: org.apereo.cas.configuration.CasConfigurationProperties
#
# Timestamp that indicates the initialization time.
#
# cas.initialization-time: 0

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the regex namespace.
# Replace with: Setting is moved into the regex namespace.
#
# 
#
# cas.interrupt.attribute-name: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the regex namespace.
# Replace with: Setting is moved into the regex namespace.
#
# 
#
# cas.interrupt.attribute-value: 

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# A regular expression pattern that indicates the set of allowed IP
# addresses, when {@link #isPinToSession()} is configured. In the event
# that there is a mismatch between the cookie IP address and the current
# request-provided IP address (i.e. network switches, VPN, etc), the
# cookie can still be considered valid if the new IP address matches the
# pattern specified here.
#
# cas.interrupt.cookie.allowed-ip-addresses-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.interrupt.cookie.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.interrupt.cookie.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.interrupt.cookie.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.interrupt.cookie.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.interrupt.cookie.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.interrupt.cookie.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.interrupt.cookie.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.interrupt.cookie.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.interrupt.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# When set to {@code true} and assuming {@link #isPinToSession()} is
# also {@code true}, client sessions (using the client IP address) are
# geo-located using a geolocation service when/if configured. The
# resulting session is either pinned to the client geolocation, or the
# default client address.
#
# cas.interrupt.cookie.geo-locate-client-session: false

# Type: java.lang.Boolean
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.interrupt.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.interrupt.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.interrupt.cookie.name: 

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.interrupt.cookie.path: 

# Type: java.lang.Boolean
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# When generating cookie values, determine whether the value should be
# compounded and signed with the properties of the current session, such
# as IP address, user-agent, etc.
#
# cas.interrupt.cookie.pin-to-session: true

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.interrupt.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.interrupt.cookie.secure: true

# Type: java.lang.Boolean
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCoreProperties
#
# Whether execution of the interrupt inquiry query should be always
# forced, and the status of interrupt check should be ignored. This is a
# global setting that can optionally be overruled for each application
# policy.
#
# cas.interrupt.core.force-execution: false

# Type: org.apereo.cas.configuration.model.support.interrupt.InterruptCoreProperties$InterruptTriggerModes
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.InterruptCoreProperties
#
# Define how interrupt notifications should be triggered in the
# authentication flow.
# Available values are as follows:
#
# <ul><li>{@code AFTER_AUTHENTICATION}: Trigger interrupt notifications
# and inquiry
# after authentication events and before
# single sign-on
# has been established.</li><li>{@code AFTER_SSO}: Trigger interrupt
# notifications and inquiry
# after single sign-on has been
# established.
# Interrupt queries that execute after single sign-on
#
# cannot control the creation of the
# SSO session
# conditionally.</li></ul>
#
# cas.interrupt.core.trigger-mode: AFTER_AUTHENTICATION

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.GroovyInterruptProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.interrupt.groovy.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.JsonInterruptProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.interrupt.json.location: 

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.RegexInterruptProperties
#
# A regex pattern on the attribute name that if matches will
# successfully complete the first condition for the interrupt
# notifications trigger.
#
# cas.interrupt.regex.attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.RegexInterruptProperties
#
# A regex pattern on the attribute value that if matches will
# successfully complete the first condition for the interrupt
# notifications trigger.
#
# cas.interrupt.regex.attribute-value: 

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.RestfulInterruptProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.interrupt.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.RestfulInterruptProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.interrupt.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.RestfulInterruptProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.interrupt.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.RestfulInterruptProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.interrupt.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-interrupt-webflow
# Owner: org.apereo.cas.configuration.model.support.interrupt.RestfulInterruptProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.interrupt.rest.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-jdbc-drivers
# Owner: org.apereo.cas.configuration.model.support.jpa.DatabaseProperties
#
# When choosing physical table names, determine whether names should be
# considered case-insensitive.
#
# cas.jdbc.case-insensitive: false

# Type: java.lang.Boolean
# Module: cas-server-support-jdbc-drivers
# Owner: org.apereo.cas.configuration.model.support.jpa.DatabaseProperties
#
# Whether to generate DDL after the EntityManagerFactory has been
# initialized creating/updating all relevant tables.
#
# cas.jdbc.gen-ddl: true

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-jdbc-drivers
# Owner: org.apereo.cas.configuration.model.support.jpa.DatabaseProperties
#
# Indicate a physical table name to be used by the hibernate naming
# strategy in case table names need to be customized for the specific
# type of database. The key here indicates the CAS-provided table name
# and the value is the translate physical name for the database. If a
# match is not found for the CAS-provided table name, then that name
# will be used by default.
#
# cas.jdbc.physical-table-names: 

# Type: java.lang.Boolean
# Module: cas-server-support-jdbc-drivers
# Owner: org.apereo.cas.configuration.model.support.jpa.DatabaseProperties
#
# Whether SQL queries should be displayed in the console/logs.
#
# cas.jdbc.show-sql: false

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.locale.cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.locale.cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.locale.cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.locale.cookie.name: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.locale.cookie.path: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.locale.cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.locale.cookie.secure: true

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleProperties
#
# Default locale.
#
# cas.locale.default-value: en

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleProperties
#
# When set to true, locale resolution via request parameters and such is
# ignored and the locale default value is always enforced.
#
# cas.locale.force-default-locale: false

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.LocaleProperties
#
# Parameter name to use when switching locales.
#
# cas.locale.param-name: locale

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Client execution timeout.
#
# cas.logging.cloudwatch.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Connection timeout.
#
# cas.logging.cloudwatch.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.logging.cloudwatch.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.logging.cloudwatch.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# AWS custom endpoint.
#
# cas.logging.cloudwatch.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Local address.
#
# cas.logging.cloudwatch.local-address: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# A log group is a container that organizes and stores log streams that
# share the same retention, monitoring, and access control settings.
# Each log group can have a unique name, and you can think of it as a
# logical grouping of logs that relate to a specific application,
# service, or environment.
#
# cas.logging.cloudwatch.log-group-name: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# A log stream is a sequence of log events that share the same source.
# Each log stream belongs to a log group, and you can have multiple log
# streams within a single log group. Log streams are typically used to
# separate log data from different sources within the same application
# or service.
#
# cas.logging.cloudwatch.log-stream-name: 

# Type: java.lang.Integer
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Maximum connections setting.
#
# cas.logging.cloudwatch.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Profile name to use.
#
# cas.logging.cloudwatch.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Profile path.
#
# cas.logging.cloudwatch.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.logging.cloudwatch.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.logging.cloudwatch.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.logging.cloudwatch.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# AWS region used.
#
# cas.logging.cloudwatch.region: 

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.logging.cloudwatch.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Socket timeout.
#
# cas.logging.cloudwatch.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-aws-cloudwatch
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonCloudWatchLogsProperties
#
# Flag that indicates whether to use reaper.
#
# cas.logging.cloudwatch.use-reaper: false

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-gcp-logging
# Owner: org.apereo.cas.configuration.model.support.aws.GoogleCloudLogsProperties
#
# Map of resource labels to filter log entries. Key is the resource
# label name, and value is the actual label itself.
#
# cas.logging.gcp.labels: 

# Type: java.lang.String
# Module: cas-server-support-gcp-logging
# Owner: org.apereo.cas.configuration.model.support.aws.GoogleCloudLogsProperties
#
# In Google Cloud Logging, the log name is an identifier that specifies
# the particular log to which log entries are written or from which they
# are retrieved. It is an essential component when interacting with logs
# using the Google Cloud Logging API, as it allows you to target
# specific logs for querying or analysis. <p> It typically has the
# following syntax: {@code projects/[PROJECT_ID]/logs/[LOG_ID]}
#
# cas.logging.gcp.log-name: 

# Type: java.lang.String
# Module: cas-server-support-gcp-logging
# Owner: org.apereo.cas.configuration.model.support.aws.GoogleCloudLogsProperties
#
# A Project ID is a unique identifier assigned to a specific project
# within your GCP environment. The Project ID is globally unique across
# all GCP projects, meaning no two projects can have the same Project
# ID. The Project ID is used in various API calls, configurations, and
# URLs to uniquely identify your CAS project.
#
# cas.logging.gcp.project-id: 

# Type: java.lang.Boolean
# Module: cas-server-core-logging
# Owner: org.apereo.cas.configuration.model.core.logging.MdcLoggingProperties
#
# Allow CAS to add http request details into the logging's MDC filter.
# Mapped Diagnostic Context is essentially a map maintained by the
# logging framework where the application code provides key-value pairs
# which can then be inserted by the logging framework in log messages.
# MDC data can also be highly helpful in filtering messages or
# triggering certain actions.
#
# cas.logging.mdc.enabled: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-logging
# Owner: org.apereo.cas.configuration.model.core.logging.MdcLoggingProperties
#
# A list of headers to exclude. This list is used to specify parameters
# that should be excluded from MDC logging. The parameter names can be
# specified as regular expressions.
#
# cas.logging.mdc.headers-to-exclude: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-logging
# Owner: org.apereo.cas.configuration.model.core.logging.MdcLoggingProperties
#
# A list of parameters to exclude. This list is used to specify
# parameters that should be excluded from MDC logging. The parameter
# names can be specified as regular expressions.
#
# cas.logging.mdc.parameters-to-exclude: 

# Type: java.lang.Boolean
# Module: cas-server-core-logout
# Owner: org.apereo.cas.configuration.model.core.logout.LogoutProperties
#
# Before logout, allow the option to confirm on the web interface.
#
# cas.logout.confirm-logout: false

# Type: java.lang.Boolean
# Module: cas-server-core-logout
# Owner: org.apereo.cas.configuration.model.core.logout.LogoutProperties
#
# Whether CAS should be allowed to redirect to an alternative location
# after logout.
#
# cas.logout.follow-service-redirects: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-logout
# Owner: org.apereo.cas.configuration.model.core.logout.LogoutProperties
#
# The target destination to which CAS should redirect after logout is
# indicated and extracted by a parameter name of your choosing here. If
# none specified, the default will be used as {@code service}.
#
# cas.logout.redirect-parameter: 

# Type: java.lang.String
# Module: cas-server-core-logout
# Owner: org.apereo.cas.configuration.model.core.logout.LogoutProperties
#
# A url to which CAS must immediately redirect after all logout
# operations have completed. Typically useful in scenarios where CAS is
# acting as a proxy and needs to redirect to an external identity
# provider's logout endpoint in order to remove a session, etc.
#
# cas.logout.redirect-url: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is renamed and moved to the ticket namespace.
# Replace with: This setting is renamed and moved to the ticket namespace.
#
# 
#
# cas.logout.remove-descendant-tickets: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.MessageBundleProperties
#
# A list of strings representing base names for this message bundle. Set
# an array of basenames, each following the basic ResourceBundle
# convention of not specifying file extension or language codes. The
# resource location format is up to the specific MessageSource
# implementation. Regular and XMl properties files are supported: e.g.
# "messages" will find a "messages.properties", "messages_en.properties"
# etc arrangement as well as "messages.xml", "messages_en.xml" etc. The
# associated resource bundles will be checked sequentially when
# resolving a message code. Note that message definitions in a previous
# resource bundle will override ones in a later bundle, due to the
# sequential lookup.
#
# cas.message-bundle.base-names: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.MessageBundleProperties
#
# Cache size.
#
# cas.message-bundle.cache-seconds: PT180S

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.MessageBundleProperties
#
# A list of strings representing common names for this message bundle.
# Specify locale-independent common messages, with the message code as
# key and the full message String (may contain argument placeholders) as
# value. <p> Entries in last common names override first values (as
# opposed to baseNames used in message bundles).
#
# cas.message-bundle.common-names: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.MessageBundleProperties
#
# Message bundle character encoding.
#
# cas.message-bundle.encoding: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.MessageBundleProperties
#
# Flag that controls whether to fallback to the default system locale if
# no locale is specified explicitly. Set whether to fall back to the
# system Locale if no files for a specific Locale have been found. If
# this is turned off, the only fallback will be the default file (e.g.
# "messages.properties" for basename "messages"). Falling back to the
# system Locale is the default behavior of {@link
# java.util.ResourceBundle}. However, this is often not desirable in an
# application server environment, where the system Locale is not
# relevant to the application at all: set this flag to {@code false} in
# such a scenario.
#
# cas.message-bundle.fallback-system-locale: false

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.MessageBundleProperties
#
# Flag that controls whether to use code message. Set whether to use the
# message code as default message instead of throwing a {@code
# NoSuchMessageException}. Useful for development and debugging. Note:
# In case of a {@code MessageSourceResolvable} with multiple codes (like
# a FieldError) and a MessageSource that has a parent MessageSource, do
# not activate "useCodeAsDefaultMessage" in the parent: Else, you'll get
# the first code returned as message by the parent, without attempts to
# check further codes.
#
# cas.message-bundle.use-code-message: true

# Type: java.util.List<EndpointAccessLevel>
# Module: cas-server-support-reports
# Owner: org.apereo.cas.configuration.model.core.monitor.ActuatorEndpointProperties
#
# Define the security access level of the endpoint.
# Available values
# are as follows:
# <ul><li>{@code PERMIT}: Allow open access to the
# endpoint.</li><li>{@code ANONYMOUS}: Allow anonymous access to the
# endpoint.</li><li>{@code DENY}: Block access to the
# endpoint.</li><li>{@code AUTHENTICATED}: Require authenticated access
# to the endpoint.</li><li>{@code ROLE}: Require authenticated access to
# the endpoint along with a role requirement.</li><li>{@code AUTHORITY}:
# Require authenticated access to the endpoint along with an authority
# requirement.</li><li>{@code IP_ADDRESS}: Require authenticated access
# to the endpoint using a collection of IP addresses.</li></ul>
#
# cas.monitor.endpoints.endpoint.[key].access: DENY

# Type: java.util.List<String>
# Module: cas-server-support-reports
# Owner: org.apereo.cas.configuration.model.core.monitor.ActuatorEndpointProperties
#
# Required user authorities.
#
# cas.monitor.endpoints.endpoint.[key].required-authorities: 

# Type: java.util.List<String>
# Module: cas-server-support-reports
# Owner: org.apereo.cas.configuration.model.core.monitor.ActuatorEndpointProperties
#
# Required IP addresses. CIDR ranges are accepted.
#
# cas.monitor.endpoints.endpoint.[key].required-ip-addresses: 

# Type: java.util.List<String>
# Module: cas-server-support-reports
# Owner: org.apereo.cas.configuration.model.core.monitor.ActuatorEndpointProperties
#
# Required user roles.
#
# cas.monitor.endpoints.endpoint.[key].required-roles: 

# Type: java.lang.Boolean
# Module: cas-server-support-reports
# Owner: org.apereo.cas.configuration.model.core.monitor.ActuatorEndpointsMonitorProperties
#
# Control whether access to endpoints can be controlled via form-based
# login over the web via a special admin login endpoint.
#
# cas.monitor.endpoints.form-login-enabled: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JaasSecurityActuatorEndpointsMonitorProperties
#
# JAAS login resource file.
#
# cas.monitor.endpoints.jaas.login-config: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JaasSecurityActuatorEndpointsMonitorProperties
#
# The login context name should coincide with a given index in the login
# config specified. This name is used as the index to the configuration
# specified in the login config property. <p> &lt;pre&gt; JAASTest {
# org.springframework.security.authentication.jaas.TestLoginModule
# required; }; &lt;/pre&gt; In the above example, {@code JAASTest}
# should be set as the context name.
#
# cas.monitor.endpoints.jaas.login-context-name: 

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JaasSecurityActuatorEndpointsMonitorProperties
#
# If set, a call to {@code Configuration#refresh()} will be made by
# {@code #configureJaas(Resource)} method.
#
# cas.monitor.endpoints.jaas.refresh-configuration-on-startup: true

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.monitor.endpoints.jdbc.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.monitor.endpoints.jdbc.batch-size: 100

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.monitor.endpoints.jdbc.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.monitor.endpoints.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.monitor.endpoints.jdbc.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.monitor.endpoints.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.monitor.endpoints.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.monitor.endpoints.jdbc.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# The JDBC driver used to connect to the database.
#
# cas.monitor.endpoints.jdbc.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.monitor.endpoints.jdbc.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.monitor.endpoints.jdbc.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Allow hibernate to generate query statistics.
#
# cas.monitor.endpoints.jdbc.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.monitor.endpoints.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.monitor.endpoints.jdbc.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.monitor.endpoints.jdbc.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.monitor.endpoints.jdbc.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.monitor.endpoints.jdbc.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# The database connection password.
#
# cas.monitor.endpoints.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as 'UTF-8'. Relevant when the type
# used is {@code DEFAULT}.
#
# cas.monitor.endpoints.jdbc.password-encoder.character-encoding: UTF-8

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# The encoding algorithm to use such as {@code MD5}. Relevant when the
# type used is {@code DEFAULT} or {@code GLIBC_CRYPT}. When used with
# {@link PasswordEncoderTypes#PBKDF2}, it should be one of {@code
# PBKDF2WithHmacSHA1}, {@code PBKDF2WithHmacSHA256} or {@code
# PBKDF2WithHmacSHA512}.
#
# cas.monitor.endpoints.jdbc.password-encoder.encoding-algorithm: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#ARGON2}, it indicates the
# hash strength/length.
#
# cas.monitor.endpoints.jdbc.password-encoder.hash-length: 16

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# When used by {@link PasswordEncoderTypes#PBKDF2}, it indicates the
# required number of iterations.
#
# cas.monitor.endpoints.jdbc.password-encoder.iterations: 310000

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Secret to use with {@link PasswordEncoderTypes#STANDARD}, {@link
# PasswordEncoderTypes#PBKDF2}, {@link PasswordEncoderTypes#BCRYPT},
# {@link PasswordEncoderTypes#GLIBC_CRYPT} password encoders. Secret
# usually is an optional setting.
#
# cas.monitor.endpoints.jdbc.password-encoder.secret: 

# Type: java.lang.Integer
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Strength or number of iterations to use for password hashing. Usually
# relevant when dealing with {@link PasswordEncoderTypes#BCRYPT}, {@link
# PasswordEncoderTypes#PBKDF2} or {@link
# PasswordEncoderTypes#GLIBC_CRYPT}. When used by {@link
# PasswordEncoderTypes#ARGON2} or {@link PasswordEncoderTypes#PBKDF2},
# it indicates the salt strength.
#
# cas.monitor.endpoints.jdbc.password-encoder.strength: 16

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PasswordEncoderProperties
#
# Define the password encoder type to use. Type may be specified as
# blank or {@code NONE} to disable password encoding. It may also refer
# to a fully-qualified class name that implements the Spring Security's
# {@code PasswordEncoder} interface if you wish you define your own
# encoder. <p> The following types may be used: <ul> <li>{@code NONE}:
# No password encoding (i.e. plain-text) takes place.</li> <li>{@code
# DEFAULT}: Use the {@code DefaultPasswordEncoder} of CAS. For
# message-digest algorithms via {@code character-encoding} and {@code
# encoding-algorithm}.</li> <li>{@code BCRYPT}: Use the {@code
# BCryptPasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code SCRYPT}: Use the {@code
# SCryptPasswordEncoder}.</li> <li>{@code PBKDF2}: Use the {@code
# Pbkdf2PasswordEncoder} based on the strength provided and an optional
# secret.</li> <li>{@code STANDARD}: Use the {@code
# StandardPasswordEncoder} based on the secret provided.</li> <li>{@code
# SSHA}: Use the {@code LdapShaPasswordEncoder} supports Ldap SHA and
# SSHA (salted-SHA). The values are base-64 encoded and have the label
# {SHA} or {SSHA} prepended to the encoded hash.</li> <li>{@code
# GLIBC_CRYPT}: Use the {@code GlibcCryptPasswordEncoder} based on the
# {@code encoding-algorithm}, strength provided and an optional
# secret.</li> <li>{@code org.example.MyEncoder}: An implementation of
# {@code PasswordEncoder} of your own choosing.</li> <li>{@code
# file:///path/to/script.groovy}: Path to a Groovy script charged with
# handling password encoding operations.</li> </ul>
#
# cas.monitor.endpoints.jdbc.password-encoder.type: NONE

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.monitor.endpoints.jdbc.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.monitor.endpoints.jdbc.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.monitor.endpoints.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.monitor.endpoints.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.monitor.endpoints.jdbc.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.monitor.endpoints.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.monitor.endpoints.jdbc.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.monitor.endpoints.jdbc.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.monitor.endpoints.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.monitor.endpoints.jdbc.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.monitor.endpoints.jdbc.properties: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Query to execute in order to authenticate users via JDBC. Example:
# {@code SELECT username,password,enabled FROM users WHERE username=?}
#
# cas.monitor.endpoints.jdbc.query: 

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.monitor.endpoints.jdbc.read-only: false

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# Prefix to add to the role.
#
# cas.monitor.endpoints.jdbc.role-prefix: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# The database connection URL.
#
# cas.monitor.endpoints.jdbc.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcSecurityActuatorEndpointsMonitorProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.monitor.endpoints.jdbc.user: sa

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.monitor.endpoints.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Set if multiple Entries are allowed.
#
# cas.monitor.endpoints.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.monitor.endpoints.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.monitor.endpoints.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.monitor.endpoints.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.monitor.endpoints.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.monitor.endpoints.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.monitor.endpoints.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.monitor.endpoints.ldap.connection-strategy: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Define how aliases are de-referenced. Accepted values are: <ul>
# <li>{@code NEVER}</li> <li>{@code SEARCHING}: dereference when
# searching the entries beneath the starting point but not when
# searching for the starting entry.</li> <li>{@code FINDING}:
# dereference when searching for the starting entry but not when
# searching the entries beneath the starting point.</li> <li>{@code
# ALWAYS}: dereference when searching for the starting entry and when
# searching the entries beneath the starting point.</li> </ul>
#
# cas.monitor.endpoints.ldap.deref-aliases: 

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.monitor.endpoints.ldap.disable-pooling: false

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Specify the dn format accepted by the AD authenticator, etc. Example
# format might be {@code uid=%s,ou=people,dc=example,dc=org}.
#
# cas.monitor.endpoints.ldap.dn-format: 

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Whether specific search entry resolvers need to be set on the
# authenticator, or the default should be used.
#
# cas.monitor.endpoints.ldap.enhance-with-entry-resolver: true

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.monitor.endpoints.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Set if search referrals should be followed.
#
# cas.monitor.endpoints.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.monitor.endpoints.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.monitor.endpoints.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.monitor.endpoints.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Keystore password.
#
# cas.monitor.endpoints.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.monitor.endpoints.ldap.keystore-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# Indicate whether the LDAP search query is allowed to return multiple
# entries.
#
# cas.monitor.endpoints.ldap.ldap-authz.allow-multiple-results: false

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# Base DN to start the search.
#
# cas.monitor.endpoints.ldap.ldap-authz.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# Attribute expected to be found on the entry resulting from the group
# search whose value is going to be used to construct roles. The final
# value is always prefixed with {@link #groupPrefix}. This is useful in
# scenarios where you wish to grant access to a resource to all users
# who a member of a given group.
#
# cas.monitor.endpoints.ldap.ldap-authz.group-attribute: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# Base DN to start the search looking for groups.
#
# cas.monitor.endpoints.ldap.ldap-authz.group-base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# Search filter to begin looking for groups.
#
# cas.monitor.endpoints.ldap.ldap-authz.group-filter: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# A prefix that is prepended to the group attribute value to construct
# an authorized role.
#
# cas.monitor.endpoints.ldap.ldap-authz.group-prefix: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# Attribute expected to be found on the entry whose value is going to be
# used to construct roles. The final value is always prefixed with
# {@link #rolePrefix}. This is useful in scenarios where you wish to
# grant access to a resource to all users who carry a special attribute.
#
# cas.monitor.endpoints.ldap.ldap-authz.role-attribute: uugid

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# Prefix for the role.
#
# cas.monitor.endpoints.ldap.ldap-authz.role-prefix: ROLE_

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapAuthorizationProperties
#
# LDAP search filter to locate accounts.
#
# cas.monitor.endpoints.ldap.ldap-authz.search-filter: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.monitor.endpoints.ldap.ldap-url: 

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.monitor.endpoints.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.monitor.endpoints.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Name of the LDAP handler.
#
# cas.monitor.endpoints.ldap.name: 

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.monitor.endpoints.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.monitor.endpoints.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# If principalAttributePassword is empty then a user simple bind is done
# to validate credentials otherwise the given attribute is compared with
# the given principalAttributePassword using the SHA encrypted value of
# it. <p> For the anonymous authentication type, if
# principalAttributePassword is empty then a user simple bind is done to
# validate credentials otherwise the given attribute is compared with
# the given principalAttributePassword using the SHA encrypted value of
# it. </p>
#
# cas.monitor.endpoints.ldap.principal-attribute-password: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.monitor.endpoints.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# If this attribute is set, the value found in the first attribute value
# will be used in place of the DN.
#
# cas.monitor.endpoints.ldap.resolve-from-attribute: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Duration of time to wait for responses.
#
# cas.monitor.endpoints.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# SASL authorization id.
#
# cas.monitor.endpoints.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The SASL mechanism.
#
# cas.monitor.endpoints.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# SASL mutual auth is enabled?
#
# cas.monitor.endpoints.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# SASL quality of protected.
#
# cas.monitor.endpoints.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The SASL realm.
#
# cas.monitor.endpoints.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# SASL security strength.
#
# cas.monitor.endpoints.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Search handlers.
#
# cas.monitor.endpoints.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.monitor.endpoints.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.monitor.endpoints.ldap.search-filter: 

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Whether subtree searching is allowed.
#
# cas.monitor.endpoints.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.monitor.endpoints.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.monitor.endpoints.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.monitor.endpoints.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Password needed to open the truststore.
#
# cas.monitor.endpoints.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.monitor.endpoints.ldap.trust-store-type: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapAuthenticationProperties$AuthenticationTypes
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# The authentication type. <ul> <li>{@code AD} - Users authenticate with
# {@code sAMAccountName}. </li> <li>{@code AUTHENTICATED} - Manager
# bind/search type of authentication. If {@code}
# principalAttributePassword} is empty then a user simple bind is done
# to validate credentials. Otherwise the given attribute is compared
# with the given {@code principalAttributePassword} using the {@code
# SHA} encrypted value of it.</li> <li>{@code ANONYMOUS}: Similar
# semantics as {@code AUTHENTICATED} except no {@code bindDn} and {@code
# bindCredential} may be specified to initialize the connection. If
# {@code principalAttributePassword} is empty then a user simple bind is
# done to validate credentials. Otherwise the given attribute is
# compared with the given {@code principalAttributePassword} using the
# {@code SHA} encrypted value of it.</li> <li>DIRECT: Direct Bind -
# Compute user DN from format string and perform simple bind. This is
# relevant when no search is required to compute the DN needed for a
# bind operation. Use cases for this type are: 1) All users are under a
# single branch in the directory, {@code e.g.
# ou=Users,dc=example,dc=org.} 2) The username provided on the CAS login
# form is part of the DN, e.g. {@code
# uid=%s,ou=Users,dc=example,dc=org}.</li> </ul>
# Available values are
# as follows:
# <ul><li>{@code AD}: Active Directory.</li><li>{@code
# AUTHENTICATED}: Authenticated Search.</li><li>{@code DIRECT}: Direct
# Bind.</li><li>{@code ANONYMOUS}: Anonymous Search.</li></ul>
#
# cas.monitor.endpoints.ldap.type: AUTHENTICATED

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.monitor.endpoints.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.monitor.endpoints.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Period at which pool should be validated.
#
# cas.monitor.endpoints.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.monitor.endpoints.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapSecurityActuatorEndpointsMonitorProperties
#
# Period at which validation operations may time out.
#
# cas.monitor.endpoints.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.monitor.endpoints.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.monitor.endpoints.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.monitor.endpoints.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.monitor.endpoints.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.monitor.endpoints.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.monitor.endpoints.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.monitor.endpoints.ldap.validator.type: search

# Type: java.lang.Boolean
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.monitor.jdbc.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.monitor.jdbc.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.monitor.jdbc.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.monitor.jdbc.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.monitor.jdbc.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.monitor.jdbc.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.monitor.jdbc.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.monitor.jdbc.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The JDBC driver used to connect to the database.
#
# cas.monitor.jdbc.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Long
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.monitor.jdbc.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.monitor.jdbc.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Allow hibernate to generate query statistics.
#
# cas.monitor.jdbc.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.monitor.jdbc.health-query: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.monitor.jdbc.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.monitor.jdbc.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.monitor.jdbc.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.monitor.jdbc.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# When monitoring the JDBC connection pool, indicates the amount of time
# the operation must wait before it times outs and considers the pool in
# bad shape.
#
# cas.monitor.jdbc.max-wait: PT5S

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The database connection password.
#
# cas.monitor.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.monitor.jdbc.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.monitor.jdbc.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.monitor.jdbc.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.monitor.jdbc.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.monitor.jdbc.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.monitor.jdbc.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.monitor.jdbc.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.monitor.jdbc.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.monitor.jdbc.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.monitor.jdbc.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.monitor.jdbc.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.monitor.jdbc.read-only: false

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The database connection URL.
#
# cas.monitor.jdbc.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.monitor.jdbc.user: sa

# Type: java.lang.String
# Module: cas-server-support-jdbc-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.JdbcMonitorProperties
#
# The query to execute against the database to monitor status.
#
# cas.monitor.jdbc.validation-query: SELECT 1

# Type: java.util.List<org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties>
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MonitorProperties
#
# Options for monitoring LDAP resources.
#
# cas.monitor.ldap: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Whether search/query results are allowed to match on multiple DNs,
#
# or whether a single unique DN is expected for the result.
#
# cas.monitor.ldap[].allow-multiple-dns: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Set if multiple Entries are allowed.
#
# cas.monitor.ldap[].allow-multiple-entries: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary
# attributes by the underlying search resolver.
#
# cas.monitor.ldap[].binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.monitor.ldap[].bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The bind DN to use when connecting to LDAP.
# LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters:
# <ul>
# <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li>
# <li>{@code
# bindDn/bindCredential}  set to {@code *} - Use a fast-bind strategy to
# initialize the pool.</li>
# <li>{@code bindDn/bindCredential}  set to
# blank - Skip connection initializing; perform operations anonymously.
# </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to
# bind when initializing connections. </li>
# </ul>
#
# cas.monitor.ldap[].bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The length of time the pool will block.
# By default the pool will
# block indefinitely and there is no guarantee that
# waiting threads
# will be serviced in the order in which they made their request.
# This
# option should be used with a blocking connection pool when you need to
# control the exact
# number of connections that can be created
#
# cas.monitor.ldap[].block-wait-time: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.monitor.ldap[].connect-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed.
# <ul>
# <li>{@code ACTIVE_PASSIVE} First LDAP
# will be used for every request unless it fails and then the next shall
# be used.</li>
# <li>{@code ROUND_ROBIN} For each new connection the
# next url in the list will be used.</li>
# <li>{@code RANDOM} For each
# new connection a random LDAP url will be selected.</li>
# <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li>
# </ul>
#
# cas.monitor.ldap[].connection-strategy: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.monitor.ldap[].disable-pooling: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Whether LDAP monitoring should be enabled.
#
# cas.monitor.ldap[].enabled: true

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Attempt to populate the connection pool early on startup
# and fail
# quickly if something goes wrong.
#
# cas.monitor.ldap[].fail-fast: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Set if search referrals should be followed.
#
# cas.monitor.ldap[].follow-referrals: 

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties.LdapHostnameVerifierOptions
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.monitor.ldap[].hostname-verifier: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.monitor.ldap[].idle-time: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Path to the keystore used for SSL connections.
# Typically contains
# SSL certificates for the LDAP server.
#
# cas.monitor.ldap[].keystore: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Keystore password.
#
# cas.monitor.ldap[].keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.monitor.ldap[].keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.monitor.ldap[].ldap-url: 

# Type: int
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.monitor.ldap[].max-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# When monitoring the LDAP connection pool, indicates the amount of time
# the operation must wait
# before it times outs and considers the pool
# in bad shape.
#
# cas.monitor.ldap[].max-wait: PT5S

# Type: int
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Minimum LDAP connection pool size.
# Size the pool should be
# initialized to and pruned to
#
# cas.monitor.ldap[].min-pool-size: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Name of the LDAP handler.
#
# cas.monitor.ldap[].name: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate
# using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches.
# Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on
# the same connection as a failed login attempt, and the
# regular connection validator would
# similarly fail. When a connection
# is returned back to a pool,
# it still may contain the principal and
# credentials from the previous attempt.
# Before the next bind attempt
# using that connection, the validator tries to
# validate the
# connection again but fails because it’s no longer trying with the
#
# configured bind credentials but with whatever user DN was used in the
# previous step.
# Given the validation failure, the connection is
# closed and CAS would deny
# access by default. Passivators attempt to
# reconnect
# to LDAP with the configured bind credentials, effectively
# resetting the connection
# to what it should be after each bind
# request.
# Furthermore if you are seeing errors in the logs that
# resemble
# a 'Operation exception encountered, reopening connection'
# type of message, this
# usually is an indication that the connection
# pool’s validation timeout
# established and created by CAS is greater
# than the timeout configured
# in the LDAP server, or more likely, in
# the load balancer in front of
# the LDAP servers. You can adjust the
# LDAP server session’s timeout
# for connections, or you can teach CAS
# to use a validity period that
# is equal or less than the LDAP server
# session’s timeout.
# Accepted values are:
# <ul>
# <li>{@code NONE}:
# No passivation takes place.</li>
# <li>{@code BIND}: The default
# behavior which passivates a connection by performing a
# bind
# operation on it. This option requires the availability of bind
# credentials when establishing connections to LDAP.</li>
# </ul>
#
# cas.monitor.ldap[].pool-passivator: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection
# will never be tested by the keepalive
# thread, only when it is idle will it be tested.
# Default is zero,
# which disables this feature.
#
# cas.monitor.ldap[].pool.keep-alive-time: 0

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep
# in the pool,
# including both idle and in-use connections.
#
# cas.monitor.ldap[].pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait
#
# while attempting to connect to a database.
# <p>
# A value of zero
# specifies that the timeout is the default system timeout
# if there is
# one; otherwise, it specifies that there is no timeout.
#
# cas.monitor.ldap[].pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection
# reaches this timeout, even if recently
# used,
# it will be retired from the pool. An in-use connection will
# never be retired, only when it is idle will it be removed.
#
# cas.monitor.ldap[].pool.maximum-lifetime: PT10M

# Type: int
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed
# to reach,
# including both idle and in-use connections.
#
# cas.monitor.ldap[].pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for
# the
# MBean to uniquely identify the pool configuration.
#
# cas.monitor.ldap[].pool.name: 

# Type: boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed.
# <p>
# There is a
# performance impact when pool suspension is enabled.
# Unless you need
# it (for a redundancy system for example) do not enable it.
#
# cas.monitor.ldap[].pool.suspension: 

# Type: long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the
# pool will wait for a
# connection to be validated as alive.
#
# cas.monitor.ldap[].pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue.
# Run the pruning process at the
# indicated interval.
#
# cas.monitor.ldap[].prune-period: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Duration of time to wait for responses.
#
# cas.monitor.ldap[].response-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# SASL authorization id.
#
# cas.monitor.ldap[].sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The SASL mechanism.
#
# cas.monitor.ldap[].sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# SASL mutual auth is enabled?
#
# cas.monitor.ldap[].sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# SASL quality of protected.
#
# cas.monitor.ldap[].sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The SASL realm.
#
# cas.monitor.ldap[].sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# SASL security strength.
#
# cas.monitor.ldap[].sasl-security-strength: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Path of the trust certificates to use for the SSL connection.
#
# Ignores keystore-related settings when activated and used.
#
# cas.monitor.ldap[].trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Trust Manager options.
# Trust managers are responsible for managing
# the trust material that is used when making LDAP trust decisions,
#
# and for deciding whether credentials presented by a peer should be
# accepted.
# Accepted values are:
# * <ul>
# <li>{@code DEFAULT}:
# Enable and force the default JVM trust managers.</li>
# <li>{@code
# ANY}: Trust any client or server.</li>
# </ul>
#
# cas.monitor.ldap[].trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Path to the keystore used to determine which certificates or
#
# certificate authorities should be trusted.
# Used when connecting to
# an LDAP server via LDAPS or startTLS connection.
# If left blank, the
# default truststore for the Java runtime is used.
#
# cas.monitor.ldap[].trust-store: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Password needed to open the truststore.
#
# cas.monitor.ldap[].trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted.
# Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}.
# If left blank,
# defaults to the default keystore type indicated
# by the underlying
# Java platform.
#
# cas.monitor.ldap[].trust-store-type: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.monitor.ldap[].use-start-tls: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.monitor.ldap[].validate-on-checkout: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Period at which pool should be validated.
#
# cas.monitor.ldap[].validate-period: 

# Type: boolean
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.monitor.ldap[].validate-periodically: 

# Type: java.lang.String
# Module: cas-server-support-ldap-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.LdapMonitorProperties
#
# Period at which validation operations may time out.
#
# cas.monitor.ldap[].validate-timeout: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.monitor.ldap[].validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.monitor.ldap[].validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.monitor.ldap[].validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.monitor.ldap[].validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.monitor.ldap[].validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.monitor.ldap[].validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type.
# <p>
# The following LDAP
# validators can be used to test connection health status:
# <ul>
#
# <li>{@code search}: Validates a connection is healthy by performing a
# search operation.
# Validation is considered successful if the search
# result size is greater than zero.</li>
# <li>{@code none}: No
# validation takes place.</li>
# <li>{@code compare}: Validates a
# connection is healthy by performing a compare operation.</li>
# </ul>
#
# cas.monitor.ldap[].validator.type: search

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MonitorWarningProperties
#
# The monitor threshold where if reached, CAS might generate a warning
# status for health checks.
#
# cas.monitor.load.warn.threshold: 0

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the daemon state of the IO thread (defaults to true).
#
# cas.monitor.memcached.daemon: true

# Type: java.lang.String
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Failure mode. Acceptable values are {@code Redistribute,Retry,Cancel}.
#
# cas.monitor.memcached.failure-mode: Redistribute

# Type: java.lang.String
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Hash algorithm. Acceptable values are {@code
# NATIVE_HASH,CRC_HASH,FNV1_64_HASH,FNV1A_64_HASH,FNV1_32_HASH,FNV1A_32_
# HASH,KETAMA_HASH}.
#
# cas.monitor.memcached.hash-algorithm: FNV1_64_HASH

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# If true, {@code reset} is called automatically after an entire object
# graph has been read or written. If false, {@code reset} must be called
# manually, which allows unregistered class names, references, and other
# information to span multiple object graphs.
#
# cas.monitor.memcached.kryo-auto-reset: false

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# If true, each appearance of an object in the graph after the first is
# stored as an integer ordinal. When set to true, {@code
# MapReferenceResolver} is used. This enables references to the same
# object and cyclic graphs to be serialized, but typically adds overhead
# of one byte per object.
#
# cas.monitor.memcached.kryo-objects-by-reference: false

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# If true, an exception is thrown when an unregistered class is
# encountered. <p> If false, when an unregistered class is encountered,
# its fully qualified class name will be serialized and the default
# serializer for the class used to serialize the object. Subsequent
# appearances of the class within the same object graph are serialized
# as an int id. Registered classes are serialized as an int id, avoiding
# the overhead of serializing the class name, but have the drawback of
# needing to know the classes to be serialized up front. See {@code
# ComponentSerializationPlan} for help here. </p>
#
# cas.monitor.memcached.kryo-registration-required: true

# Type: java.lang.String
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Locator mode. Acceptable values are {@code ARRAY_MOD, CONSISTENT,
# VBUCKET}.
#
# cas.monitor.memcached.locator-type: ARRAY_MOD

# Type: java.lang.Integer
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the value for the maxTotal configuration attribute for pools
# created with this configuration instance.
#
# cas.monitor.memcached.max-idle: 8

# Type: java.lang.Long
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the maximum reconnect delay.
#
# cas.monitor.memcached.max-reconnect-delay: -1

# Type: java.lang.Integer
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Sets the cap on the number of objects that can be allocated by the
# pool (checked out to clients, or idle awaiting checkout) at a given
# time. Use a negative value for no limit.
#
# cas.monitor.memcached.max-total: 20

# Type: java.lang.Integer
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Get the value for the minIdle configuration attribute for pools
# created with this configuration instance.
#
# cas.monitor.memcached.min-idle: 0

# Type: java.lang.Long
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the default operation timeout in milliseconds.
#
# cas.monitor.memcached.op-timeout: -1

# Type: java.lang.String
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Protocol. Acceptable values are {@code TEXT, BINARY}.
#
# cas.monitor.memcached.protocol: TEXT

# Type: java.lang.String
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Comma-separated list of memcached servers.
#
# cas.monitor.memcached.servers: localhost:11211

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set to false if the default operation optimization is not desirable.
#
# cas.monitor.memcached.should-optimize: false

# Type: java.lang.Long
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# The number of seconds to wait for connections to finish before
# shutting down the client.
#
# cas.monitor.memcached.shutdown-timeout-seconds: -1

# Type: java.lang.Integer
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the maximum timeout exception threshold.
#
# cas.monitor.memcached.timeout-exception-threshold: 2

# Type: org.apereo.cas.configuration.model.support.memcached.BaseMemcachedProperties$TranscoderTypes
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Indicate the transcoder type.
# Available values are as follows:
#
# <ul><li>{@code KRYO}: CAS transcoder implementation based on Kryo fast
# serialization framework
# suited for efficient serialization of
# tickets. Provides pooling mechanisms
# as well as control over object
# registration and sequences.</li><li>{@code SERIAL}: Kryp native
# transcoder that serializes and compresses objects.</li><li>{@code
# WHALIN}: Transcoder that provides compatibility with Greg Whalin's
# memcached client.</li><li>{@code WHALINV1}: Handles old whalin
# encoding: data type is in the first byte of the value.</li></ul>
#
# cas.monitor.memcached.transcoder: KRYO

# Type: java.lang.Integer
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# For transcoders other than kryo, determines the compression threshold.
# Does not apply to kryo.
#
# cas.monitor.memcached.transcoder-compression-threshold: 16384

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemcachedMonitorProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set to true if you'd like to enable the Nagle algorithm.
#
# cas.monitor.memcached.use-nagle-algorithm: false

# Type: java.lang.Double
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MemoryMonitorProperties
#
# The free memory threshold for the memory monitor. If the amount of
# free memory available reaches this point the memory monitor will
# report back a warning status as a health check.
#
# cas.monitor.memory.free-mem-threshold: 10

# Type: java.util.List<org.apereo.cas.configuration.model.core.monitor.MongoDbMonitorProperties>
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MonitorProperties
#
# Options for monitoring MongoDb resources.
#
# cas.monitor.mongo: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# Name of the database to use for authentication.
#
# cas.monitor.mongo[].authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# The connection uri to the mongodb instance.
# This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}.
# If not
# specified, will fallback onto other individual settings.
# If
# specified, takes over all other settings where applicable.
#
# cas.monitor.mongo[].client-uri: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# MongoDb database instance name.
#
# cas.monitor.mongo[].database-name: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# MongoDb database host for authentication.
# Multiple host addresses
# may be defined, separated by comma.
# If more than one host is
# defined, it is assumed that each host contains the port as well, if
# any.
# Otherwise the configuration may fallback onto the port defined.
#
# cas.monitor.mongo[].host: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# MongoDb database password for authentication.
#
# cas.monitor.mongo[].password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection.  A zero value indicates
# no limit
# to the idle time.  A pooled connection that has
# exceeded
# its idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.monitor.mongo[].pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for.  A zero value
# indicates no limit
# to the life time.  A pooled connection that
# has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.monitor.mongo[].pool.life-time: PT60S

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.monitor.mongo[].pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.monitor.mongo[].pool.max-wait-time: PT60S

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.monitor.mongo[].pool.min-size: 1

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.monitor.mongo[].pool.per-host: 10

# Type: int
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# MongoDb database port.
#
# cas.monitor.mongo[].port: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# Read concern. Accepted values are:
# <ul>
#     <li>{@code
# LOCAL}</li>
#     <li>{@code MAJORITY}</li>
#     <li>{@code
# LINEARIZABLE}</li>
#     <li>{@code SNAPSHOT}</li>
#     <li>{@code
# AVAILABLE}</li>
# </ul>
#
# cas.monitor.mongo[].read-concern: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# Read preference. Accepted values are:
# <ul>
#     <li>{@code
# PRIMARY}</li>
#     <li>{@code SECONDARY}</li>
#     <li>{@code
# SECONDARY_PREFERRED}</li>
#     <li>{@code PRIMARY_PREFERRED}</li>
#  
# <li>{@code NEAREST}</li>
# </ul>
#
# cas.monitor.mongo[].read-preference: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain
# the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.monitor.mongo[].replica-set: 

# Type: boolean
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.monitor.mongo[].retry-writes: 

# Type: boolean
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.monitor.mongo[].socket-keep-alive: 

# Type: boolean
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# Whether connections require SSL.
#
# cas.monitor.mongo[].ssl-enabled: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# MongoDb database connection timeout.
#
# cas.monitor.mongo[].timeout: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# MongoDb database user for authentication.
#
# cas.monitor.mongo[].user-id: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties
#
# Write concern describes the level of acknowledgement requested from
#
# MongoDB for write operations to a standalone
# mongo db or to replica
# sets or to sharded clusters. In sharded clusters,
# mongo db instances
# will pass the write concern on to the shards.
#
# cas.monitor.mongo[].write-concern: 

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MonitorWarningProperties
#
# The monitor threshold where if reached, CAS might generate a warning
# status for health checks.
#
# cas.monitor.st.warn.threshold: 0

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MonitorWarningProperties
#
# The monitor threshold where if reached, CAS might generate a warning
# status for health checks.
#
# cas.monitor.tgt.warn.threshold: 0

# Type: java.lang.Integer
# Module: cas-server-core-monitor
# Owner: org.apereo.cas.configuration.model.core.monitor.MonitorWarningProperties
#
# The monitor threshold where if reached, CAS might generate a warning
# status for health checks.
#
# cas.monitor.warn.threshold: 0

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Activated attribute repository identifiers that should be used for
# fetching attributes if attribute resolution is enabled. The list here
# may include identifiers separated by comma.
#
# cas.person-directory.active-attribute-repository-ids: *

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Configuration of the attribute definition store is moved under attribute repositories.
# Replace with: Configuration of the attribute definition store is moved under attribute repositories.
#
# 
#
# cas.person-directory.attribute-definition-store: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Control the behavior of the attribute repository selection by
# authentication method or handler. The map here is keyed by the
# authentication handler name, and the value is the attribute repository
# identifiers separated by comma. When the authentication handler is
# executed, the attribute repositories assigned to this handler will be
# selected to fetch attributes. Note that the resolution engine will
# always favor attribute repositories assigned to the service
# definition, if any and as part of its authentication policy, over this
# global setting.
#
# cas.person-directory.attribute-repository-selection: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Whether attribute repositories should be contacted to fetch person
# attributes. Defaults to true if not set.
# Available values are as
# follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.person-directory.attribute-resolution-enabled: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Attribute name to use to indicate the identifier of the principal
# constructed. If the attribute is blank or has no values, the default
# principal id will be used determined by the underlying authentication
# engine. The principal id attribute usually is removed from the
# collection of attributes collected, though this behavior depends on
# the schematics of the underlying authentication strategy.
#
# cas.person-directory.principal-attribute: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# In the event that the principal resolution engine resolves more than
# one principal, (specially if such principals in the chain have
# different identifiers), this setting determines strategy by which the
# principal id would be chosen from the chain. Accepted values are:
# {@code last}, {@code first}.
#
# cas.person-directory.principal-resolution-conflict-strategy: last

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# When true, throws an error back indicating that principal resolution
# has failed and no principal can be found based on the authentication
# requirements. Otherwise, logs the condition as an error without
# raising a catastrophic error.
# Available values are as follows:
#
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.person-directory.principal-resolution-failure-fatal: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the username to match
# for blocking/forbidden values. If a match is found, an exception will
# be thrown and principal transformation will fail.
#
# cas.person-directory.principal-transformation.blocking-pattern: 

# Type: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties$CaseConversion
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Indicate whether the principal identifier should be transformed into
# upper-case, lower-case, etc.
# Available values are as follows:
#
# <ul><li>{@code NONE}: No conversion.</li><li>{@code LOWERCASE}:
# Lowercase conversion.</li><li>{@code UPPERCASE}: Uppercase
# conversion.</li></ul>
#
# cas.person-directory.principal-transformation.case-conversion: NONE

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.GroovyPrincipalTransformationProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.person-directory.principal-transformation.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# A regular expression that will be used against the provided username
# for username extractions. On a successful match, the first matched
# group in the pattern will be used as the extracted username.
#
# cas.person-directory.principal-transformation.pattern: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Prefix to add to the principal id prior to authentication.
#
# cas.person-directory.principal-transformation.prefix: 

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PrincipalTransformationProperties
#
# Suffix to add to the principal id prior to authentication.
#
# cas.person-directory.principal-transformation.suffix: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Return a null principal object if no attributes can be found for the
# principal.
# Available values are as follows:
# <ul><li>{@code TRUE}:
# Constant to represent the true state.</li><li>{@code FALSE}: Constant
# to represent the false state.</li><li>{@code UNDEFINED}: Constant to
# represent the undefined state.</li></ul>
#
# cas.person-directory.return-null: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.authentication.PersonDirectoryPrincipalResolverProperties
#
# Uses an existing principal id that may have already been established
# in order to run person directory queries. This is generally useful in
# situations where authentication is delegated to an external identity
# provider and a principal is first established to then query an
# attribute source.
# Available values are as follows:
# <ul><li>{@code
# TRUE}: Constant to represent the true state.</li><li>{@code FALSE}:
# Constant to represent the false state.</li><li>{@code UNDEFINED}:
# Constant to represent the undefined state.</li></ul>
#
# cas.person-directory.use-existing-principal-id: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the services namespace.
# Replace with: Setting is moved into the services namespace.
#
# 
#
# cas.rest.attribute-name: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Setting is moved into the services namespace.
# Replace with: Setting is moved into the services namespace.
#
# 
#
# cas.rest.attribute-value: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Configuration setting is moved to the new replacement
# Replace with: Configuration setting is moved to the new replacement
#
# 
#
# cas.rest.body-auth: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Configuration setting is moved to the new replacement
# Replace with: Configuration setting is moved to the new replacement
#
# 
#
# cas.rest.header-auth: 

# Type: java.lang.String
# Module: cas-server-support-rest
# Owner: org.apereo.cas.configuration.model.core.rest.RestRegisteredServicesProperties
#
# Authorization attribute name required by the REST endpoint in order to
# allow for the requested operation. Attribute must be resolvable by the
# authenticated principal, or must have been already.
#
# cas.rest.services.attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-rest
# Owner: org.apereo.cas.configuration.model.core.rest.RestRegisteredServicesProperties
#
# Matching authorization attribute value, pulled from the attribute
# required by the REST endpoint in order to allow for the requested
# operation. The attribute value may also be constructed as a regex
# pattern.
#
# cas.rest.services.attribute-value: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Configuration setting is moved to the new replacement
# Replace with: Configuration setting is moved to the new replacement
#
# 
#
# cas.rest.tls-client-auth: 

# Type: java.lang.Boolean
# Module: cas-server-support-rest-x509
# Owner: org.apereo.cas.configuration.model.core.rest.RestX509Properties
#
# Flag that enables {@link java.security.cert.X509Certificate}
# extraction from the request body for authentication.
#
# cas.rest.x509.body-auth: false

# Type: java.lang.Boolean
# Module: cas-server-support-rest-x509
# Owner: org.apereo.cas.configuration.model.core.rest.RestX509Properties
#
# Flag that enables {@link java.security.cert.X509Certificate}
# extraction from the request headers for authentication.
#
# cas.rest.x509.header-auth: true

# Type: java.lang.Boolean
# Module: cas-server-support-rest-x509
# Owner: org.apereo.cas.configuration.model.core.rest.RestX509Properties
#
# Flag that enables TLS client {@link
# java.security.cert.X509Certificate} extraction from the servlet
# container for authentication.
#
# cas.rest.x509.tls-client-auth: false

# Type: java.lang.String
# Module: cas-server-support-saml
# Owner: org.apereo.cas.configuration.model.support.saml.SamlCoreProperties
#
# Attribute namespace to use when generating SAML1 responses.
#
# cas.saml-core.attribute-namespace: http://www.ja-sig.org/products/cas/

# Type: java.lang.String
# Module: cas-server-support-saml
# Owner: org.apereo.cas.configuration.model.support.saml.SamlCoreProperties
#
# Issue length that controls the validity period of the assertion.
#
# cas.saml-core.issue-length: PT30S

# Type: java.lang.String
# Module: cas-server-support-saml
# Owner: org.apereo.cas.configuration.model.support.saml.SamlCoreProperties
#
# Issuer of the assertion when generating SAML1 responses.
#
# cas.saml-core.issuer: localhost

# Type: java.lang.String
# Module: cas-server-support-saml
# Owner: org.apereo.cas.configuration.model.support.saml.SamlCoreProperties
#
# Qualified name of the security manager class used for creating a SAML
# parser pool.
#
# cas.saml-core.security-manager: org.apache.xerces.util.SecurityManager

# Type: java.lang.String
# Module: cas-server-support-saml
# Owner: org.apereo.cas.configuration.model.support.saml.SamlCoreProperties
#
# Skew allowance that controls the issue instance of the authentication.
#
# cas.saml-core.skew-allowance: PT30S

# Type: java.lang.Boolean
# Module: cas-server-support-saml
# Owner: org.apereo.cas.configuration.model.support.saml.SamlCoreProperties
#
# Whether ticket ids generated should be saml2 compliant when generating
# SAML1 responses.
#
# cas.saml-core.ticketid-saml2: false

# Type: java.lang.Long
# Module: cas-server-support-saml-mdui
# Owner: org.apereo.cas.configuration.model.support.saml.mdui.SamlMetadataUIProperties
#
# If specified, creates a validity filter on the metadata to check for
# metadata freshness based on the max validity. Value is specified in
# seconds.
#
# cas.saml-metadata-ui.max-validity: 0

# Type: java.lang.String
# Module: cas-server-support-saml-mdui
# Owner: org.apereo.cas.configuration.model.support.saml.mdui.SamlMetadataUIProperties
#
# The parameter name that indicates the entity id of the service
# provider submitted to CAS.
#
# cas.saml-metadata-ui.parameter: entityId

# Type: java.lang.Boolean
# Module: cas-server-support-saml-mdui
# Owner: org.apereo.cas.configuration.model.support.saml.mdui.SamlMetadataUIProperties
#
# When parsing metadata, whether the root element is required to be
# signed.
#
# cas.saml-metadata-ui.require-signed-root: false

# Type: java.lang.Boolean
# Module: cas-server-support-saml-mdui
# Owner: org.apereo.cas.configuration.model.support.saml.mdui.SamlMetadataUIProperties
#
# Whether valid metadata is required when parsing metadata.
#
# cas.saml-metadata-ui.require-valid-metadata: true

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-mdui
# Owner: org.apereo.cas.configuration.model.support.saml.mdui.SamlMetadataUIProperties
#
# Metadata resources to load and parse through based on the incoming
# entity id in order to locate MDUI. Resources can be
# classpath/file/http resources. If each metadata resource has a signing
# certificate, they can be added onto the resource with a {@code ::}
# separator. Example: {@code
# classpath:/sp-metadata.xml::classpath:/pub.key}.
#
# cas.saml-metadata-ui.resources: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.saml-metadata-ui.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.saml-metadata-ui.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.saml-metadata-ui.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.saml-metadata-ui.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.saml-metadata-ui.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.saml-metadata-ui.schedule.start-delay: PT15S

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.academic-health-plans.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.academic-health-plans.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.academic-health-plans.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.academic-health-plans.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# Name of this service provider.
#
# cas.saml-sp.academic-health-plans.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.academic-health-plans.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.academic-health-plans.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.academic-health-plans.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.academic-health-plans.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AcademicHealthPlans
#
# Signature location used to verify metadata.
#
# cas.saml-sp.academic-health-plans.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.adobe-cloud.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.adobe-cloud.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.adobe-cloud.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.adobe-cloud.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# Name of this service provider.
#
# cas.saml-sp.adobe-cloud.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.adobe-cloud.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.adobe-cloud.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.adobe-cloud.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.adobe-cloud.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AdobeCloud
#
# Signature location used to verify metadata.
#
# cas.saml-sp.adobe-cloud.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.amazon.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.amazon.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.amazon.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.amazon.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# Name of this service provider.
#
# cas.saml-sp.amazon.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.amazon.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.amazon.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.amazon.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.amazon.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Amazon
#
# Signature location used to verify metadata.
#
# cas.saml-sp.amazon.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.app-dynamics.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.app-dynamics.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.app-dynamics.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.app-dynamics.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# Name of this service provider.
#
# cas.saml-sp.app-dynamics.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.app-dynamics.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.app-dynamics.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.app-dynamics.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.app-dynamics.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.AppDynamics
#
# Signature location used to verify metadata.
#
# cas.saml-sp.app-dynamics.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.arc-g-i-s.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.arc-g-i-s.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.arc-g-i-s.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.arc-g-i-s.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# Name of this service provider.
#
# cas.saml-sp.arc-g-i-s.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.arc-g-i-s.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.arc-g-i-s.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.arc-g-i-s.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.arc-g-i-s.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArcGIS
#
# Signature location used to verify metadata.
#
# cas.saml-sp.arc-g-i-s.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.arms-software.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.arms-software.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.arms-software.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.arms-software.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# Name of this service provider.
#
# cas.saml-sp.arms-software.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.arms-software.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.arms-software.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.arms-software.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.arms-software.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ArmsSoftware
#
# Signature location used to verify metadata.
#
# cas.saml-sp.arms-software.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.asana.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.asana.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.asana.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.asana.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# Name of this service provider.
#
# cas.saml-sp.asana.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.asana.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.asana.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.asana.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.asana.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Asana
#
# Signature location used to verify metadata.
#
# cas.saml-sp.asana.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.benefit-focus.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.benefit-focus.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.benefit-focus.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.benefit-focus.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# Name of this service provider.
#
# cas.saml-sp.benefit-focus.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.benefit-focus.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.benefit-focus.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.benefit-focus.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.benefit-focus.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BenefitFocus
#
# Signature location used to verify metadata.
#
# cas.saml-sp.benefit-focus.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.black-baud.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.black-baud.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.black-baud.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.black-baud.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# Name of this service provider.
#
# cas.saml-sp.black-baud.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.black-baud.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.black-baud.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.black-baud.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.black-baud.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.BlackBaud
#
# Signature location used to verify metadata.
#
# cas.saml-sp.black-baud.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.box.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.box.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.box.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.box.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# Name of this service provider.
#
# cas.saml-sp.box.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.box.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.box.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.box.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.box.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Box
#
# Signature location used to verify metadata.
#
# cas.saml-sp.box.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.bynder.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.bynder.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.bynder.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.bynder.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# Name of this service provider.
#
# cas.saml-sp.bynder.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.bynder.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.bynder.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.bynder.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.bynder.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Bynder
#
# Signature location used to verify metadata.
#
# cas.saml-sp.bynder.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.cccco.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.cccco.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.cccco.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.cccco.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# Name of this service provider.
#
# cas.saml-sp.cccco.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.cccco.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.cccco.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.cccco.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.cccco.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CaliforniaCommunityColleges
#
# Signature location used to verify metadata.
#
# cas.saml-sp.cccco.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.cher-well.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.cher-well.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.cher-well.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.cher-well.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# Name of this service provider.
#
# cas.saml-sp.cher-well.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.cher-well.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.cher-well.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.cher-well.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.cher-well.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CherWell
#
# Signature location used to verify metadata.
#
# cas.saml-sp.cher-well.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.concur-solutions.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.concur-solutions.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.concur-solutions.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.concur-solutions.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# Name of this service provider.
#
# cas.saml-sp.concur-solutions.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.concur-solutions.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.concur-solutions.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.concur-solutions.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.concur-solutions.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ConcurSolutions
#
# Signature location used to verify metadata.
#
# cas.saml-sp.concur-solutions.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.confluence.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.confluence.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.confluence.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.confluence.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# Name of this service provider.
#
# cas.saml-sp.confluence.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.confluence.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.confluence.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.confluence.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.confluence.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Confluence
#
# Signature location used to verify metadata.
#
# cas.saml-sp.confluence.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.cranium-cafe.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.cranium-cafe.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.cranium-cafe.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.cranium-cafe.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# Name of this service provider.
#
# cas.saml-sp.cranium-cafe.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.cranium-cafe.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.cranium-cafe.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.cranium-cafe.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.cranium-cafe.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CraniumCafe
#
# Signature location used to verify metadata.
#
# cas.saml-sp.cranium-cafe.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.crash-plan.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.crash-plan.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.crash-plan.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.crash-plan.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# Name of this service provider.
#
# cas.saml-sp.crash-plan.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.crash-plan.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.crash-plan.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.crash-plan.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.crash-plan.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.CrashPlan
#
# Signature location used to verify metadata.
#
# cas.saml-sp.crash-plan.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.docu-sign.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.docu-sign.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.docu-sign.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.docu-sign.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# Name of this service provider.
#
# cas.saml-sp.docu-sign.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.docu-sign.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.docu-sign.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.docu-sign.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.docu-sign.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.DocuSign
#
# Signature location used to verify metadata.
#
# cas.saml-sp.docu-sign.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.dropbox.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.dropbox.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.dropbox.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.dropbox.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# Name of this service provider.
#
# cas.saml-sp.dropbox.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.dropbox.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.dropbox.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.dropbox.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.dropbox.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Dropbox
#
# Signature location used to verify metadata.
#
# cas.saml-sp.dropbox.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.easy-iep.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.easy-iep.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.easy-iep.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.easy-iep.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# Name of this service provider.
#
# cas.saml-sp.easy-iep.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.easy-iep.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.easy-iep.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.easy-iep.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.easy-iep.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EasyIep
#
# Signature location used to verify metadata.
#
# cas.saml-sp.easy-iep.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.egnyte.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.egnyte.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.egnyte.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.egnyte.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# Name of this service provider.
#
# cas.saml-sp.egnyte.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.egnyte.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.egnyte.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.egnyte.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.egnyte.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Egnyte
#
# Signature location used to verify metadata.
#
# cas.saml-sp.egnyte.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.emma.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.emma.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.emma.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.emma.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# Name of this service provider.
#
# cas.saml-sp.emma.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.emma.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.emma.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.emma.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.emma.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Emma
#
# Signature location used to verify metadata.
#
# cas.saml-sp.emma.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.ever-bridge.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.ever-bridge.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.ever-bridge.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.ever-bridge.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# Name of this service provider.
#
# cas.saml-sp.ever-bridge.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.ever-bridge.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.ever-bridge.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.ever-bridge.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.ever-bridge.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.EverBridge
#
# Signature location used to verify metadata.
#
# cas.saml-sp.ever-bridge.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.evernote.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.evernote.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.evernote.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.evernote.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# Name of this service provider.
#
# cas.saml-sp.evernote.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.evernote.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.evernote.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.evernote.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.evernote.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Evernote
#
# Signature location used to verify metadata.
#
# cas.saml-sp.evernote.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.famis.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.famis.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.famis.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.famis.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# Name of this service provider.
#
# cas.saml-sp.famis.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.famis.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.famis.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.famis.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.famis.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Famis
#
# Signature location used to verify metadata.
#
# cas.saml-sp.famis.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.gartner.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.gartner.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.gartner.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.gartner.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# Name of this service provider.
#
# cas.saml-sp.gartner.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.gartner.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.gartner.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.gartner.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.gartner.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gartner
#
# Signature location used to verify metadata.
#
# cas.saml-sp.gartner.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.gitlab.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.gitlab.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.gitlab.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.gitlab.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# Name of this service provider.
#
# cas.saml-sp.gitlab.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.gitlab.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.gitlab.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.gitlab.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.gitlab.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Gitlab
#
# Signature location used to verify metadata.
#
# cas.saml-sp.gitlab.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.give-campus.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.give-campus.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.give-campus.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.give-campus.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# Name of this service provider.
#
# cas.saml-sp.give-campus.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.give-campus.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.give-campus.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.give-campus.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.give-campus.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.GiveCampus
#
# Signature location used to verify metadata.
#
# cas.saml-sp.give-campus.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.in-common.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.in-common.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.in-common.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.in-common.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# Name of this service provider.
#
# cas.saml-sp.in-common.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.in-common.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.in-common.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.in-common.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.in-common.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InCommon
#
# Signature location used to verify metadata.
#
# cas.saml-sp.in-common.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.infinite-campus.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.infinite-campus.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.infinite-campus.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.infinite-campus.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# Name of this service provider.
#
# cas.saml-sp.infinite-campus.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.infinite-campus.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.infinite-campus.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.infinite-campus.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.infinite-campus.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.InfiniteCampus
#
# Signature location used to verify metadata.
#
# cas.saml-sp.infinite-campus.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.jira.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.jira.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.jira.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.jira.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# Name of this service provider.
#
# cas.saml-sp.jira.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.jira.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.jira.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.jira.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.jira.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Jira
#
# Signature location used to verify metadata.
#
# cas.saml-sp.jira.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.neo-gov.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.neo-gov.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.neo-gov.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.neo-gov.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# Name of this service provider.
#
# cas.saml-sp.neo-gov.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.neo-gov.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.neo-gov.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.neo-gov.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.neo-gov.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NeoGov
#
# Signature location used to verify metadata.
#
# cas.saml-sp.neo-gov.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.net-partner.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.net-partner.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.net-partner.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.net-partner.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# Name of this service provider.
#
# cas.saml-sp.net-partner.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.net-partner.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.net-partner.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.net-partner.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.net-partner.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NetPartner
#
# Signature location used to verify metadata.
#
# cas.saml-sp.net-partner.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.new-relic.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.new-relic.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.new-relic.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.new-relic.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# Name of this service provider.
#
# cas.saml-sp.new-relic.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.new-relic.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.new-relic.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.new-relic.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.new-relic.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.NewRelic
#
# Signature location used to verify metadata.
#
# cas.saml-sp.new-relic.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.office365.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.office365.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.office365.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.office365.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# Name of this service provider.
#
# cas.saml-sp.office365.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.office365.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.office365.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.office365.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.office365.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Office365
#
# Signature location used to verify metadata.
#
# cas.saml-sp.office365.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.open-athens.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.open-athens.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.open-athens.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.open-athens.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# Name of this service provider.
#
# cas.saml-sp.open-athens.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.open-athens.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.open-athens.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.open-athens.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.open-athens.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.OpenAthens
#
# Signature location used to verify metadata.
#
# cas.saml-sp.open-athens.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.pager-duty.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.pager-duty.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.pager-duty.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.pager-duty.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# Name of this service provider.
#
# cas.saml-sp.pager-duty.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.pager-duty.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.pager-duty.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.pager-duty.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.pager-duty.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PagerDuty
#
# Signature location used to verify metadata.
#
# cas.saml-sp.pager-duty.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.poll-everywhere.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.poll-everywhere.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.poll-everywhere.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.poll-everywhere.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# Name of this service provider.
#
# cas.saml-sp.poll-everywhere.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.poll-everywhere.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.poll-everywhere.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.poll-everywhere.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.poll-everywhere.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.PollEverywhere
#
# Signature location used to verify metadata.
#
# cas.saml-sp.poll-everywhere.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.qualtrics.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.qualtrics.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.qualtrics.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.qualtrics.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# Name of this service provider.
#
# cas.saml-sp.qualtrics.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.qualtrics.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.qualtrics.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.qualtrics.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.qualtrics.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Qualtrics
#
# Signature location used to verify metadata.
#
# cas.saml-sp.qualtrics.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.rocket-chat.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.rocket-chat.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.rocket-chat.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.rocket-chat.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# Name of this service provider.
#
# cas.saml-sp.rocket-chat.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.rocket-chat.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.rocket-chat.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.rocket-chat.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.rocket-chat.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.RocketChat
#
# Signature location used to verify metadata.
#
# cas.saml-sp.rocket-chat.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.sa-manage.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.sa-manage.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.sa-manage.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.sa-manage.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# Name of this service provider.
#
# cas.saml-sp.sa-manage.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.sa-manage.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.sa-manage.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.sa-manage.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.sa-manage.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SAManage
#
# Signature location used to verify metadata.
#
# cas.saml-sp.sa-manage.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.safari-online.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.safari-online.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.safari-online.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.safari-online.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# Name of this service provider.
#
# cas.saml-sp.safari-online.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.safari-online.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.safari-online.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.safari-online.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.safari-online.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SafariOnline
#
# Signature location used to verify metadata.
#
# cas.saml-sp.safari-online.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.salesforce.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.salesforce.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.salesforce.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.salesforce.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# Name of this service provider.
#
# cas.saml-sp.salesforce.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.salesforce.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.salesforce.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.salesforce.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.salesforce.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Salesforce
#
# Signature location used to verify metadata.
#
# cas.saml-sp.salesforce.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.sans-sth.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.sans-sth.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.sans-sth.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.sans-sth.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# Name of this service provider.
#
# cas.saml-sp.sans-sth.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.sans-sth.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.sans-sth.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.sans-sth.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.sans-sth.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SecuringTheHuman
#
# Signature location used to verify metadata.
#
# cas.saml-sp.sans-sth.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.service-now.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.service-now.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.service-now.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.service-now.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# Name of this service provider.
#
# cas.saml-sp.service-now.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.service-now.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.service-now.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.service-now.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.service-now.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.ServiceNow
#
# Signature location used to verify metadata.
#
# cas.saml-sp.service-now.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.slack.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.slack.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.slack.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.slack.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# Name of this service provider.
#
# cas.saml-sp.slack.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.slack.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.slack.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.slack.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.slack.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Slack
#
# Signature location used to verify metadata.
#
# cas.saml-sp.slack.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.sserca.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.sserca.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.sserca.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.sserca.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# Name of this service provider.
#
# cas.saml-sp.sserca.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.sserca.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.sserca.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.sserca.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.sserca.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.SunshineStateEdResearchAlliance
#
# Signature location used to verify metadata.
#
# cas.saml-sp.sserca.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.symplicity.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.symplicity.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.symplicity.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.symplicity.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# Name of this service provider.
#
# cas.saml-sp.symplicity.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.symplicity.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.symplicity.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.symplicity.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.symplicity.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Symplicity
#
# Signature location used to verify metadata.
#
# cas.saml-sp.symplicity.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.tableau.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.tableau.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.tableau.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.tableau.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# Name of this service provider.
#
# cas.saml-sp.tableau.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.tableau.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.tableau.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.tableau.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.tableau.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Tableau
#
# Signature location used to verify metadata.
#
# cas.saml-sp.tableau.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.top-hat.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.top-hat.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.top-hat.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.top-hat.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# Name of this service provider.
#
# cas.saml-sp.top-hat.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.top-hat.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.top-hat.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.top-hat.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.top-hat.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.TopHat
#
# Signature location used to verify metadata.
#
# cas.saml-sp.top-hat.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.warp-wire.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.warp-wire.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.warp-wire.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.warp-wire.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# Name of this service provider.
#
# cas.saml-sp.warp-wire.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.warp-wire.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.warp-wire.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.warp-wire.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.warp-wire.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WarpWire
#
# Signature location used to verify metadata.
#
# cas.saml-sp.warp-wire.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.web-advisor.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.web-advisor.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.web-advisor.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.web-advisor.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# Name of this service provider.
#
# cas.saml-sp.web-advisor.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.web-advisor.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.web-advisor.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.web-advisor.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.web-advisor.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.WebAdvisor
#
# Signature location used to verify metadata.
#
# cas.saml-sp.web-advisor.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.webex.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.webex.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.webex.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.webex.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# Name of this service provider.
#
# cas.saml-sp.webex.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.webex.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.webex.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.webex.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.webex.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Webex
#
# Signature location used to verify metadata.
#
# cas.saml-sp.webex.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.workday.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.workday.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.workday.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.workday.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# Name of this service provider.
#
# cas.saml-sp.workday.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.workday.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.workday.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.workday.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.workday.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Workday
#
# Signature location used to verify metadata.
#
# cas.saml-sp.workday.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.yuja.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.yuja.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.yuja.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.yuja.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# Name of this service provider.
#
# cas.saml-sp.yuja.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.yuja.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.yuja.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.yuja.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.yuja.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Yuja
#
# Signature location used to verify metadata.
#
# cas.saml-sp.yuja.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.zendesk.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.zendesk.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.zendesk.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.zendesk.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# Name of this service provider.
#
# cas.saml-sp.zendesk.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.zendesk.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.zendesk.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.zendesk.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.zendesk.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zendesk
#
# Signature location used to verify metadata.
#
# cas.saml-sp.zendesk.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.zimbra.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.zimbra.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.zimbra.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.zimbra.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# Name of this service provider.
#
# cas.saml-sp.zimbra.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.zimbra.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.zimbra.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.zimbra.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.zimbra.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zimbra
#
# Signature location used to verify metadata.
#
# cas.saml-sp.zimbra.signature-location: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# Set up the attribute release policy for this service. Allow attributes
# that are to be released to this SP. Attributes should be separated by
# commas and can be virtually mapped and renamed.
#
# cas.saml-sp.zoom.attributes: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# Description of this service provider as it's stored in the registry.
#
# cas.saml-sp.zoom.description:  SAML SP Integration

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# List of entityIds allowed for this service provider. Multiple ids can
# be specified in the event that the metadata is an aggregate.
#
# cas.saml-sp.zoom.entity-ids: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# The location of the metadata for this service provider. Can be a URL
# or another form of resource.
#
# cas.saml-sp.zoom.metadata: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# Name of this service provider.
#
# cas.saml-sp.zoom.name: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# Attribute to use when generating nameids for this SP.
#
# cas.saml-sp.zoom.name-id-attribute: 

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# The forced nameId format to use when generating a response.
#
# cas.saml-sp.zoom.name-id-format: 

# Type: org.apereo.cas.configuration.support.TriStateBoolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# Indicate whether assertions should be signed.
# Available values are
# as follows:
# <ul><li>{@code TRUE}: Constant to represent the true
# state.</li><li>{@code FALSE}: Constant to represent the false
# state.</li><li>{@code UNDEFINED}: Constant to represent the undefined
# state.</li></ul>
#
# cas.saml-sp.zoom.sign-assertions: 

# Type: java.lang.Boolean
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# Indicate whether responses should be signed.
#
# cas.saml-sp.zoom.sign-responses: true

# Type: java.lang.String
# Module: cas-server-support-saml-sp-integrations
# Owner: org.apereo.cas.configuration.model.support.saml.sps.SamlServiceProviderProperties.Zoom
#
# Signature location used to verify metadata.
#
# cas.saml-sp.zoom.signature-location: 

# Type: java.lang.Boolean
# Module: cas-server-support-scim
# Owner: org.apereo.cas.configuration.model.support.scim.ScimProperties
#
# Decide whether scim should be enabled.
#
# cas.scim.enabled: true

# Type: java.lang.String
# Module: cas-server-support-scim
# Owner: org.apereo.cas.configuration.model.support.scim.ScimProperties
#
# Authenticate into the SCIM server/service via a pre-generated OAuth
# token.
#
# cas.scim.oauth-token: 

# Type: java.lang.String
# Module: cas-server-support-scim
# Owner: org.apereo.cas.configuration.model.support.scim.ScimProperties
#
# Authenticate into the SCIM server with a pre-defined password.
#
# cas.scim.password: 

# Type: java.lang.String
# Module: cas-server-support-scim
# Owner: org.apereo.cas.configuration.model.support.scim.ScimProperties
#
# The SCIM provisioning target URI.
#
# cas.scim.target: 

# Type: java.lang.String
# Module: cas-server-support-scim
# Owner: org.apereo.cas.configuration.model.support.scim.ScimProperties
#
# Authenticate into the SCIM server with a pre-defined username.
#
# cas.scim.username: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because cas.server.* moved to cas.server.tomcat.*.
# Replace with: cas.server.* moved to cas.server.tomcat.*.
#
# 
#
# cas.server.basic-authn.enabled: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because cas.server.* moved to cas.server.tomcat.*.
# Replace with: cas.server.* moved to cas.server.tomcat.*.
#
# 
#
# cas.server.http-proxy.enabled: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because cas.server.* moved to cas.server.tomcat.*.
# Replace with: cas.server.* moved to cas.server.tomcat.*.
#
# 
#
# cas.server.http.enabled: 

# Type: java.lang.Boolean
# Module: cas-server-webapp-jetty
# Owner: org.apereo.cas.configuration.model.core.web.jetty.CasEmbeddedJettyProperties
#
# Server Name Indication is an extension of the Transport Layer Security
# (TLS) protocol, which allows a client to indicate which hostname it is
# attempting to connect to at the start of the handshaking process. This
# is particularly useful when a server hosts multiple domains with
# different SSL certificates on a single IP address. Setting this
# setting to {@code false} would mean that the Jetty server will not
# strictly require clients to send an SNI extension during the SSL/TLS
# handshake and disables host name checking for Server Name Indication
# (SNI) during SSL/TLS handshakes.
#
# cas.server.jetty.sni-host-check: true

# Type: java.lang.String
# Module: cas-server-core
# Owner: org.apereo.cas.configuration.model.core.CasServerProperties
#
# Full name of the CAS server. This is the public-facing address of the
# CAS deployment and not the individual node address, in the event that
# CAS is clustered.
#
# cas.server.name: https://cas.example.org:8443

# Type: java.lang.String
# Module: cas-server-core
# Owner: org.apereo.cas.configuration.model.core.CasServerProperties
#
# A concatenation of the server name plus the CAS context path.
# Deployments at root likely need to blank out this value.
#
# cas.server.prefix: 

# Type: java.lang.String
# Module: cas-server-core
# Owner: org.apereo.cas.configuration.model.core.CasServerProperties
#
# The CAS Server scope.
#
# cas.server.scope: example.org

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# A boolean value which can be used to enable or disable the TRACE HTTP
# method. If not specified, this attribute is set to false.
#
# cas.server.tomcat.ajp.allow-trace: false

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# The default timeout for asynchronous requests in milliseconds. If not
# specified, this attribute is set to 10000 (10 seconds).
#
# cas.server.tomcat.ajp.async-timeout: PT5S

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# Additional attributes to be set on the AJP connector in form of
# key-value pairs. Examples include: <ul> <li>{@code
# tomcatAuthentication}: If set to true, the authentication will be done
# in Tomcat. Otherwise, the authenticated principal will be propagated
# from the native webserver and used for authorization in Tomcat. Note
# that this principal will have no roles associated with it. The default
# value is true.</li> <li>{@code maxThreads}: The maximum number of
# request processing threads to be created by this Connector, which
# therefore determines the maximum number of simultaneous requests that
# can be handled. If not specified, this attribute is set to 200. If an
# executor is associated with this connector, this attribute is ignored
# as the connector will execute tasks using the executor rather than an
# internal thread pool.</li> <li>{@code keepAliveTimeout}: The number of
# milliseconds this Connector will wait for another AJP request before
# closing the connection. The default value is to use the value that has
# been set for the connectionTimeout attribute.</li> <li>{@code
# maxCookieCount}: The maximum number of cookies that are permitted for
# a request. A value of less than zero means no limit. If not specified,
# a default value of 200 will be used.</li> <li>{@code bufferSize}: The
# size of the output buffer to use. If less than or equal to zero, then
# output buffering is disabled. The default value is -1 (i.e. buffering
# disabled)</li> <li>{@code clientCertProvider}: When client certificate
# information is presented in a form other than instances of
# java.security.cert.X509Certificate it needs to be converted before it
# can be used and this property controls which JSSE provider is used to
# perform the conversion. For example it is used with the AJP
# connectors, the HTTP APR connector and with the
# org.apache.catalina.valves.SSLValve.If not specified, the default
# provider will be used.</li> <li>{@code connectionTimeout}: The number
# of milliseconds this Connector will wait, after accepting a
# connection, for the request URI line to be presented. The default
# value is infinite (i.e. no timeout).</li> <li>{@code address}: For
# servers with more than one IP address, this attribute specifies which
# address will be used for listening on the specified port. By default,
# this port will be used on all IP addresses associated with the server.
# A value of 127.0.0.1 indicates that the Connector will only listen on
# the loopback interface.</li> </ul> <p> See the Apache Tomcat
# documentation for a full list.
#
# cas.server.tomcat.ajp.attributes: 

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# Set to true if you want calls to {@code request.getRemoteHost()} to
# perform DNS lookups in order to return the actual host name of the
# remote client. Set to false to skip the DNS lookup and return the IP
# address in String form instead (thereby improving performance). By
# default, DNS lookups are disabled.
#
# cas.server.tomcat.ajp.enable-lookups: false

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# Enable AJP support in CAS for the embedded Apache Tomcat container.
#
# cas.server.tomcat.ajp.enabled: false

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# The maximum size in bytes of the POST which will be handled by the
# container FORM URL parameter parsing. The feature can be disabled by
# setting this attribute to a value less than or equal to 0. If not
# specified, this attribute is set to 2097152 (2 megabytes).
#
# cas.server.tomcat.ajp.max-post-size: 20971520

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# The TCP port number on which this Connector will create a server
# socket and await incoming connections. Your operating system will
# allow only one server application to listen to a particular port
# number on a particular IP address. If the special value of 0 (zero) is
# used, then Tomcat will select a free port at random to use for this
# connector. This is typically only useful in embedded and testing
# applications.
#
# cas.server.tomcat.ajp.port: 8009

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# Sets the protocol to handle incoming traffic.
#
# cas.server.tomcat.ajp.protocol: AJP/1.3

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# If this Connector is being used in a proxy configuration, configure
# this attribute to specify the server port to be returned for calls to
# request.getServerPort().
#
# cas.server.tomcat.ajp.proxy-port: -1

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# If this Connector is supporting non-SSL requests, and a request is
# received for which a matching {@code security-constraint} requires SSL
# transport, Catalina will automatically redirect the request to the
# port number specified here.
#
# cas.server.tomcat.ajp.redirect-port: -1

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# Set this attribute to the name of the protocol you wish to have
# returned by calls to {@code request.getScheme()}. For example, you
# would set this attribute to {@code https} for an SSL Connector.
#
# cas.server.tomcat.ajp.scheme: http

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# Set the secret that must be included with every request.
#
# cas.server.tomcat.ajp.secret: 

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatAjpProperties
#
# Set this attribute to true if you wish to have calls to
# request.isSecure() to return true for requests received by this
# Connector (you would want this on an SSL Connector). The default value
# is false.
#
# cas.server.tomcat.ajp.secure: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatBasicAuthenticationProperties
#
# Add an authorization role, which is a role name that will be permitted
# access to the resources protected by this security constraint.
#
# cas.server.tomcat.basic-authn.auth-roles: 

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatBasicAuthenticationProperties
#
# Enable Basic authentication for Tomcat.
#
# cas.server.tomcat.basic-authn.enabled: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatBasicAuthenticationProperties
#
# Add a URL pattern to be part of this web resource collection.
#
# cas.server.tomcat.basic-authn.patterns: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatBasicAuthenticationProperties
#
# Security roles for the CAS application.
#
# cas.server.tomcat.basic-authn.security-roles: 

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# This option is used to set the flag that all messages sent through the
# SimpleTcpCluster uses. The flag decides how the messages are sent, and
# is a simple logical OR. <ul> <li>2: {@code
# SEND_OPTIONS_SYNCHRONIZED_ACK}</li> <li>4: {@code
# SEND_OPTIONS_USE_ACK}</li> <li>8: {@code
# SEND_OPTIONS_ASYNCHRONOUS}</li> </ul>
#
# cas.server.tomcat.clustering.channel-send-options: 8

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Cloud membership provider, values are case sensitive and only used
# with clusteringType {@code CLOUD}. The different providers rely on
# environment variables to discover other members of cluster via DNS
# lookups of the service name or querying kubernetes API. See code or
# Tomcat documentation for the environment variables that are used. <ul>
# <li> {@code kubernetes} will use
# org.apache.catalina.tribes.KubernetesMembershipProvider</li> <li>
# {@code dns} will use
# org.apache.catalina.tribes.DNSMembershipProvider</li> <li> Class
# implementing {@code
# org.apache.catalina.tribes.MembershipProvider}</li> </ul>
#
# cas.server.tomcat.clustering.cloud-membership-provider: dns

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Statically register members in the cluster. The syntax is: {@code
# address:port:index}
#
# cas.server.tomcat.clustering.cluster-members: 

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Accepted values are: {@code DEFAULT, CLOUD}. Type of clustering to
# use, set to {@code CLOUD} if using {@code CloudMembershipService}.
#
# cas.server.tomcat.clustering.clustering-type: DEFAULT

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Enable tomcat session clustering.
#
# cas.server.tomcat.clustering.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# When a web application is being shutdown, Tomcat issues an expire call
# to each session to notify all the listeners. If you wish for all
# sessions to expire on all nodes when a shutdown occurs on one node,
# set this value to true. Default value is false.
#
# cas.server.tomcat.clustering.expire-sessions-on-shutdown: false

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Accepted values are: {@code DELTA, BACKUP}. Enable all-to-all session
# replication using the DeltaManager to replicate session deltas. By
# all-to-all we mean that the session gets replicated to all the other
# nodes in the cluster. This works great for smaller cluster but we
# don't recommend it for larger clusters(a lot of Tomcat nodes). Also
# when using the delta manager it will replicate to all nodes, even
# nodes that don't have the application deployed. To get around this
# problem, you'll want to use the BackupManager. This manager only
# replicates the session data to one backup node, and only to nodes that
# have the application deployed. Downside of the BackupManager: not
# quite as battle tested as the delta manager.
#
# cas.server.tomcat.clustering.manager-type: DELTA

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Multicast address for membership. The multicast address that the
# membership will broadcast its presence and listen for other heartbeats
# on. The default value is 228.0.0.4 Make sure your network is enabled
# for multicast traffic. The multicast address, in conjunction with the
# port is what creates a cluster group. To divide up your farm into
# several different group, or to split up QA from production, change the
# port or the address
#
# cas.server.tomcat.clustering.membership-address: 228.0.0.4

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# The membership component will time out members and notify the Channel
# if a member fails to send a heartbeat within a give time. The default
# value is 3000 ms. This means, that if a heartbeat is not received from
# a member in that timeframe, the membership component will notify the
# cluster of this. On a high latency network you may wish to increase
# this value, to protect against false positives. Apache Tribes also
# provides a TcpFailureDetector that will verify a timeout using a TCP
# connection when a heartbeat timeout has occurred. This protects
# against false positives.
#
# cas.server.tomcat.clustering.membership-drop-time: 3000

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# The frequency in milliseconds in which heartbeats are sent out. The
# default value is 500 ms. In most cases the default value is
# sufficient. Changing this value, changes the interval in between
# heartbeats.
#
# cas.server.tomcat.clustering.membership-frequency: 500

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Membership uses multicast, it will call
# java.net.MulticastSocket.setLoopbackMode(localLoopbackDisabled). When
# localLoopbackDisabled==true multicast messages will not reach other
# nodes on the same local machine. The default is false.
#
# cas.server.tomcat.clustering.membership-local-loopback-disabled: false

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Multicast port (the port and the address together determine cluster
# membership. The multicast port, the default value is 45564 The
# multicast port, in conjunction with the address is what creates a
# cluster group. To divide up your farm into several different group, or
# to split up QA from production, change the port or the address
#
# cas.server.tomcat.clustering.membership-port: 45564

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Membership uses multicast, it will call
# java.net.MulticastSocket.setLoopbackMode(localLoopbackDisabled). When
# localLoopbackDisabled==true multicast messages will not reach other
# nodes on the same local machine. The default is false.
#
# cas.server.tomcat.clustering.membership-recovery-counter: 10

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# In case of a network failure, Java multicast socket don't
# transparently fail over, instead the socket will continuously throw
# {@code IOException} upon each receive request. When recovery-enabled
# is set to true, this will close the multicast socket and open a new
# socket with the same properties as defined above. The default is true.
#
# cas.server.tomcat.clustering.membership-recovery-enabled: true

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# The address (network interface) to listen for incoming traffic.
#
# cas.server.tomcat.clustering.receiver-address: auto

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Default value is 100. Use this value if you wish to automatically
# avoid port conflicts the cluster receiver will try to open a server
# socket on the port attribute port, and then work up autoBind number of
# times.
#
# cas.server.tomcat.clustering.receiver-auto-bind: 100

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Maximum threads configured for the listener. The maximum number of
# threads in the receiver thread pool. The default value is 6 Adjust
# this value relative to the number of nodes in the cluster, the number
# of messages being exchanged and the hardware you are running on. A
# higher value doesn't mean more efficiency, tune this value according
# to your own test results.
#
# cas.server.tomcat.clustering.receiver-max-threads: 6

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# The listen port for incoming data. The default value is {@code 4000}.
# To avoid port conflicts the receiver will automatically bind to a free
# port. So for example, if port is {@code 4000}, and autoBind is set to
# 10, then the receiver will open up a server socket on the first
# available port in the range 4000-4009.
#
# cas.server.tomcat.clustering.receiver-port: 4000

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatClusteringProperties
#
# Listener timeout. The value in milliseconds for the polling timeout in
# the NioReceiver. On older versions of the JDK there have been bugs,
# that should all now be cleared out where the selector never woke up.
# The default value is a very high 5000 milliseconds.
#
# cas.server.tomcat.clustering.receiver-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatCsrfProperties
#
# Enable filter.
#
# cas.server.tomcat.csrf.enabled: false

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatExtendedAccessLogProperties
#
# Directory name for extended log.
#
# cas.server.tomcat.ext-access-log.directory: 

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatExtendedAccessLogProperties
#
# Flag to indicate whether extended log facility is enabled.
#
# cas.server.tomcat.ext-access-log.enabled: false

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatExtendedAccessLogProperties
#
# String representing extended log pattern.
#
# cas.server.tomcat.ext-access-log.pattern: c-ip s-ip cs-uri sc-status time x-threadname x-H(secure) x-H(remoteUser)

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatExtendedAccessLogProperties
#
# File name prefix for extended log.
#
# cas.server.tomcat.ext-access-log.prefix: localhost_access_extended

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatExtendedAccessLogProperties
#
# File name suffix for extended log.
#
# cas.server.tomcat.ext-access-log.suffix: .log

# Type: java.util.List<org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties>
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatProperties
#
# Embedded container HTTP port settings as an additional option.
#
# cas.server.tomcat.http: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Custom attributes to set on the proxy connector.
#
# cas.server.tomcat.http-proxy.attributes: 

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Enable the container running in proxy mode.
#
# cas.server.tomcat.http-proxy.enabled: false

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Proxy protocol to use.
#
# cas.server.tomcat.http-proxy.protocol: AJP/1.3

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Proxy port for the proxy.
#
# cas.server.tomcat.http-proxy.proxy-port: 0

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Redirect port for the proxy.
#
# cas.server.tomcat.http-proxy.redirect-port: 0

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Scheme used for the proxy.
#
# cas.server.tomcat.http-proxy.scheme: https

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Set the secret that must be included with every request.
#
# cas.server.tomcat.http-proxy.secret: 

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProxyProperties
#
# Whether proxy should run in secure mode.
#
# cas.server.tomcat.http-proxy.secure: true

# Type: java.util.Map<String,String>
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties
#
# Additional attributes to be set on the connector.
#
# cas.server.tomcat.http[].attributes: 

# Type: boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties
#
# Enable a separate port for the embedded container for HTTP access.
#
# cas.server.tomcat.http[].enabled: 

# Type: int
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties
#
# The HTTP port to use.
#
# cas.server.tomcat.http[].port: 8080

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties
#
# HTTP protocol to use.
#
# cas.server.tomcat.http[].protocol: org.apache.coyote.http11.Http11NioProtocol

# Type: int
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties
#
# If this Connector is supporting non-SSL requests,
# this will
# automatically redirect
# the request to the port number specified
# here.
# Matching security constraints that require SSL transport will
# be auto-defined.
#
# cas.server.tomcat.http[].redirect-port: 

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties
#
# Scheme used for the connector.
#
# cas.server.tomcat.http[].scheme: http

# Type: boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatHttpProperties
#
# Whether connector should run in secure mode.
#
# cas.server.tomcat.http[].secure: 

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatRemoteAddressProperties
#
# A regular expression (using java.util.regex) that the remote client's
# IP address is compared to. If this attribute is specified, the remote
# address MUST match for this request to be accepted. If this attribute
# is not specified, all requests will be accepted UNLESS the remote
# address matches a deny pattern.
#
# cas.server.tomcat.remote-addr.allowed-client-ip-address-regex: .+

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatRemoteAddressProperties
#
# A regular expression (using java.util.regex) that the remote client's
# IP address is compared to. If this attribute is specified, the remote
# address MUST NOT match for this request to be accepted. If this
# attribute is not specified, request acceptance is governed solely by
# the accept attribute.
#
# cas.server.tomcat.remote-addr.denied-client-ip-address-regex: .+

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatRemoteAddressProperties
#
# Enable filter.
#
# cas.server.tomcat.remote-addr.enabled: false

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatRemoteUserValveProperties
#
# A regular expression (using java.util.regex) that the remote client's
# IP address is compared to. If this attribute is specified, the remote
# address MUST match for this request to be accepted. If this attribute
# is not specified, all requests will be accepted.
#
# cas.server.tomcat.remote-user-valve.allowed-ip-address-regex: .+

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatRemoteUserValveProperties
#
# The name of the remote-user header that should be passed onto the http
# servlet request. Leaving this setting as blank or undefined will
# deactivate the valve altogether. The header is typically passed down
# to tomcat via proxies, load balancers, etc.
#
# cas.server.tomcat.remote-user-valve.remote-user-header: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatRewriteValveProperties
#
# Location of a rewrite valve specifically by Apache Tomcat to activate
# URL rewriting.
#
# cas.server.tomcat.rewrite-valve.location: 

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatProperties
#
# Controls the {@code server} attribute of the tomcat connector.
#
# cas.server.tomcat.server-name: Apereo CAS

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSocketProperties
#
# Each connection that is opened up in Tomcat get associated with a read
# ByteBuffer. This attribute controls the size of this buffer. By
# default this read buffer is sized at 8192 bytes. For lower
# concurrency, you can increase this to buffer more data. For an extreme
# amount of keep alive connections, decrease this number or increase
# your heap size.
#
# cas.server.tomcat.socket.app-read-buf-size: 0

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSocketProperties
#
# Each connection that is opened up in Tomcat get associated with a
# write ByteBuffer. This attribute controls the size of this buffer. By
# default this write buffer is sized at 8192 bytes. For low concurrency
# you can increase this to buffer more response data. For an extreme
# amount of keep alive connections, decrease this number or increase
# your heap size. The default value here is pretty low, you should up it
# if you are not dealing with tens of thousands concurrent connections.
#
# cas.server.tomcat.socket.app-write-buf-size: 0

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSocketProperties
#
# The NIO connector uses a class called NioChannel that holds elements
# linked to a socket. To reduce garbage collection, the NIO connector
# caches these channel objects. This value specifies the size of this
# cache. The default value is 500, and represents that the cache will
# hold 500 NioChannel objects. Other values are -1 for unlimited cache
# and 0 for no cache.
#
# cas.server.tomcat.socket.buffer-pool: 0

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSocketProperties
#
# An int expressing the relative importance of high bandwidth.
# Performance preferences are described by three integers whose values
# indicate the relative importance of short connection time, low
# latency, and high bandwidth. The absolute values of the integers are
# irrelevant; in order to choose a protocol the values are compared,
# with larger values indicating stronger preferences. Negative values
# disable the setting. If the application prefers short connection time
# over both low latency and high bandwidth, for example, then it could
# invoke this method with the values (1, 0, 0). If the application
# prefers high bandwidth above low latency, and low latency above short
# connection time, then it could invoke this method with the values (0,
# 1, 2).
#
# cas.server.tomcat.socket.performance-bandwidth: -1

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSocketProperties
#
# An int expressing the relative importance of a short connection time.
# Performance preferences are described by three integers whose values
# indicate the relative importance of short connection time, low
# latency, and high bandwidth. The absolute values of the integers are
# irrelevant; in order to choose a protocol the values are compared,
# with larger values indicating stronger preferences. Negative values
# disable the setting. If the application prefers short connection time
# over both low latency and high bandwidth, for example, then it could
# invoke this method with the values (1, 0, 0). If the application
# prefers high bandwidth above low latency, and low latency above short
# connection time, then it could invoke this method with the values (0,
# 1, 2).
#
# cas.server.tomcat.socket.performance-connection-time: -1

# Type: java.lang.Integer
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSocketProperties
#
# An int expressing the relative importance of low latency. Performance
# preferences are described by three integers whose values indicate the
# relative importance of short connection time, low latency, and high
# bandwidth. The absolute values of the integers are irrelevant; in
# order to choose a protocol the values are compared, with larger values
# indicating stronger preferences. Negative values disable the setting.
# If the application prefers short connection time over both low latency
# and high bandwidth, for example, then it could invoke this method with
# the values (1, 0, 0). If the application prefers high bandwidth above
# low latency, and low latency above short connection time, then it
# could invoke this method with the values (0, 1, 2).
#
# cas.server.tomcat.socket.performance-latency: -1

# Type: java.lang.Boolean
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSslValveProperties
#
# Enable the SSL valve for apache tomcat.
#
# cas.server.tomcat.ssl-valve.enabled: false

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSslValveProperties
#
# Allows setting a custom name for the ssl_cipher header. If not
# specified, the default of ssl_cipher is used.
#
# cas.server.tomcat.ssl-valve.ssl-cipher-header: ssl_cipher

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSslValveProperties
#
# Allows setting a custom name for the ssl_cipher_usekeysize header. If
# not specified, the default of ssl_cipher_usekeysize is used.
#
# cas.server.tomcat.ssl-valve.ssl-cipher-user-key-size-header: ssl_cipher_usekeysize

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSslValveProperties
#
# Allows setting a custom name for the ssl_client_cert header. If not
# specified, the default of ssl_client_cert is used.
#
# cas.server.tomcat.ssl-valve.ssl-client-cert-header: ssl_client_cert

# Type: java.lang.String
# Module: cas-server-webapp-tomcat
# Owner: org.apereo.cas.configuration.model.core.web.tomcat.CasEmbeddedApacheTomcatSslValveProperties
#
# Allows setting a custom name for the ssl_session_id header. If not
# specified, the default of ssl_session_id is used.
#
# cas.server.tomcat.ssl-valve.ssl-session-id-header: ssl_session_id

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Client execution timeout.
#
# cas.service-registry.amazon-s3.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Connection timeout.
#
# cas.service-registry.amazon-s3.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.service-registry.amazon-s3.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.service-registry.amazon-s3.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# AWS custom endpoint.
#
# cas.service-registry.amazon-s3.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Local address.
#
# cas.service-registry.amazon-s3.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Maximum connections setting.
#
# cas.service-registry.amazon-s3.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Profile name to use.
#
# cas.service-registry.amazon-s3.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Profile path.
#
# cas.service-registry.amazon-s3.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.service-registry.amazon-s3.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.service-registry.amazon-s3.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.service-registry.amazon-s3.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# AWS region used.
#
# cas.service-registry.amazon-s3.region: 

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.service-registry.amazon-s3.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Socket timeout.
#
# cas.service-registry.amazon-s3.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-aws-s3-service-registry
# Owner: org.apereo.cas.configuration.model.support.aws.AmazonS3ServiceRegistryProperties
#
# Flag that indicates whether to use reaper.
#
# cas.service-registry.amazon-s3.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.ExpiringSimpleCacheProperties
#
# This cache size specifies the maximum number of entries the cache may
# contain. Note that the cache may evict an entry before this limit is
# exceeded or temporarily exceed the threshold while evicting. As the
# cache size grows close to the maximum, the cache evicts entries that
# are less likely to be used again. For example, the cache may evict an
# entry because it hasn't been used recently or very often. Note: to
# disable the cache, you may choose a cache size of {@code 0}.
#
# cas.service-registry.cache.cache-size: 10000

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.ExpiringSimpleCacheProperties
#
# Cache duration specifies the fixed duration for an entry to be
# automatically removed from the cache after its creation.
#
# cas.service-registry.cache.duration: PT15M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.ExpiringSimpleCacheProperties
#
# This cache capacity sets the minimum total size for the internal data
# structures. Providing a large enough estimate at construction time
# avoids the need for expensive resizing operations later, but setting
# this value unnecessarily high wastes memory.
#
# cas.service-registry.cache.initial-capacity: 1000

# Type: java.lang.String
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# Query option consistency level. The consistency level set through this
# method will be use for queries that don't explicitly have a
# consistency level. Accepted values are:{@code ALL, ANY, EACH_QUORUM,
# LOCAL_ONE, LOCAL_QUORUM, LOCAL_SERIAL, ONE, QUORUM, SERIAL, THREE,
# TWO}.
#
# cas.service-registry.cassandra.consistency-level: LOCAL_QUORUM

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# The list of contact points to use for the new cluster. Each contact
# point should be defined using the syntax {@code address:port}.
#
# cas.service-registry.cassandra.contact-points: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# Keyspace address to use where the cluster would connect.
#
# cas.service-registry.cassandra.keyspace: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# Used by a DC-ware round-robin load balancing policy. This policy
# provides round-robin queries over the node of the local data center.
# It also includes in the query plans returned a configurable number of
# hosts in the remote data centers, but those are always tried after the
# local nodes. In other words, this policy guarantees that no host in a
# remote data center will be queried unless no host in the local data
# center can be reached.
#
# cas.service-registry.cassandra.local-dc: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# Password to bind and establish a connection to cassandra.
#
# cas.service-registry.cassandra.password: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# Query option serial consistency level. The serial consistency level
# set through this method will be use for queries that don't explicitly
# have a serial consistency level. Accepted values are:{@code ALL, ANY,
# EACH_QUORUM, LOCAL_ONE, LOCAL_QUORUM, LOCAL_SERIAL, ONE, QUORUM,
# SERIAL, THREE, TWO}.
#
# cas.service-registry.cassandra.serial-consistency-level: LOCAL_SERIAL

# Type: java.lang.String[]
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# The cipher suites to use, or empty/null to use the default ones. Note
# that host name validation will always be done using HTTPS algorithm.
#
# cas.service-registry.cassandra.ssl-cipher-suites: 

# Type: java.lang.String[]
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# Set the protocol versions enabled for use on this engine. Once the
# setting is set, only protocols listed in the protocols parameter are
# enabled for use.
#
# cas.service-registry.cassandra.ssl-protocols: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# The request timeout. This defines how long the driver will wait for a
# given Cassandra node to answer a query.
#
# cas.service-registry.cassandra.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-cassandra-service-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.serviceregistry.CassandraServiceRegistryProperties
#
# Username to bind and establish a connection to cassandra.
#
# cas.service-registry.cassandra.username: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property renamed, use cas.service-registry.json.location instead.
# Replace with: Property renamed, use cas.service-registry.json.location instead.
#
# 
#
# cas.service-registry.config.location: 

# Type: java.lang.Boolean
# Module: cas-server-core-services
# Owner: org.apereo.cas.configuration.model.core.services.ServiceRegistryCoreProperties
#
# When set to true, CAS creates in-memory indexes for specific
# pre-chosen fields of the registered services, allowing it to find a
# service definition by its friendly name, client id, etc. This is
# particularly useful for querying operations in OAuth or OpenID
# Connect, as there would be no need to loop through all service
# definitions looking for a matching client id. The indexes allow CAS to
# execute a direct query on loaded service objects to find the relevant
# definition.
#
# cas.service-registry.core.index-services: true

# Type: java.lang.Boolean
# Module: cas-server-core-services
# Owner: org.apereo.cas.configuration.model.core.services.ServiceRegistryCoreProperties
#
# Flag that indicates whether service definitions that ship with CAS by
# default should be included in the initialization process and imported
# into CAS service registry. Default service files that ship with CAS
# are found on the classpath inside the {@value
# JsonServiceRegistryProperties#DEFAULT_LOCATION_DIRECTORY} directory.
#
# cas.service-registry.core.init-default-services: true

# Type: java.lang.Boolean
# Module: cas-server-core-services
# Owner: org.apereo.cas.configuration.model.core.services.ServiceRegistryCoreProperties
#
# Flag that indicates whether to initialise active service registry
# implementation with a set of service definitions included with CAS by
# default in JSON format. The initialization generally tends to find
# JSON service definitions from {@link
# JsonServiceRegistryProperties#getLocation()}. <p> In cases where the
# location points to an embedded directory or resource inside a JAR/ZIP
# file, such as those that might have been packaged with the CAS
# application as part of the build and assembly process, embedded
# services are first exported out into a temporary directory and then
# read as file-system resources. In such scenarios, you may want to turn
# off the watcher via {@link
# JsonServiceRegistryProperties#isWatcherEnabled()}. <p> If the default
# location offered by CAS, {@value
# JsonServiceRegistryProperties#DEFAULT_LOCATION_DIRECTORY}, is used,
# CAS would attempt to locate JSON service files by forming the
# following pattern for each active spring application profile: <br/>
# <pre>classpath*:/{@value
# JsonServiceRegistryProperties#DEFAULT_LOCATION_DIRECTORY}/profile-id/*
# .json</pre> <p> You may also control whether default services should
# be included and initialized via {@link #isInitDefaultServices()}.
#
# cas.service-registry.core.init-from-json: false

# Type: java.lang.Boolean
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Whether telemetry should be enabled by default. Sets the flag to
# enable client telemetry which will periodically collect database
# operations aggregation statistics, system information like cpu/memory
# and send it to cosmos monitoring service, which will be helpful during
# debugging.
#
# cas.service-registry.cosmos-db.allow-telemetry: false

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Document Db consistency level. Azure Cosmos DB is designed from the
# ground up with global distribution in mind for every data model. It is
# designed to offer predictable low latency guarantees, a 99.99%
# availability SLA, and multiple well-defined relaxed consistency
# models. Currently, Azure Cosmos DB provides five consistency levels:
# strong, bounded-staleness, session, consistent prefix, and eventual.
# Besides strong and eventual consistency models commonly offered by
# distributed databases, Azure Cosmos DB offers three more carefully
# codified and operationalized consistency models, and has validated
# their usefulness against real world use cases. These are the bounded
# staleness, session, and consistent prefix consistency levels.
# Collectively these five consistency levels enable you to make
# well-reasoned trade-offs between consistency, availability, and
# latency. Accepted values are: <ul> <li>{@code STRONG}:
# Linearizability</li> <li>{@code SESSION}: Consistent Prefix. Monotonic
# reads, monotonic writes, read-your-writes, write-follows-reads</li>
# <li>{@code EVENTUAL}: Out of order reads</li> <li>{@code
# BOUNDED_STALENESS}: Consistent Prefix. Reads lag behind writes by k
# prefixes or t interval</li> <li>{@code CONSISTENT_PREFIX}: Updates
# returned are some prefix of all the updates, with no gaps</li> </ul>
#
# cas.service-registry.cosmos-db.consistency-level: SESSION

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Collection to store CAS service definitions.
#
# cas.service-registry.cosmos-db.container: CasCosmosDbServiceRegistry

# Type: java.lang.Boolean
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Whether collections should be created on startup.
#
# cas.service-registry.cosmos-db.create-container: false

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Database name.
#
# cas.service-registry.cosmos-db.database: 

# Type: java.lang.Integer
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# The max auto scale throughput.
#
# cas.service-registry.cosmos-db.database-throughput: 4000

# Type: java.lang.Boolean
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Sets the flag to enable endpoint discovery for geo-replicated database
# accounts. When EnableEndpointDiscovery is true, the SDK will
# automatically discover the current write and read regions to ensure
# requests are sent to the correct region based on the capability of the
# region and the user's preference.
#
# cas.service-registry.cosmos-db.endpoint-discovery-enabled: true

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Specifies the supported indexing modes in the Azure Cosmos DB database
# service. Accepted values are: <ul> <li>{@code CONSISTENT}: Index is
# updated synchronously with a create or update operation. With
# consistent indexing, query behavior is the same as the default
# consistency level for the collection. The index is always kept up to
# date with the data.</li> <li>{@code LAZY}: Index is updated
# asynchronously with respect to a create or update operation. With lazy
# indexing, queries are eventually consistent. The index is updated when
# the collection is idle. </li> <li>{@code NONE}: No index is provided.
# Setting IndexingMode to "None" drops the index. Use this if you don't
# want to maintain the index for a document collection, to save the
# storage cost or improve the write throughput. Your queries will
# degenerate to scans of the entire collection. </li> </ul>
#
# cas.service-registry.cosmos-db.indexing-mode: NONE

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Document Db master key.
#
# cas.service-registry.cosmos-db.key: 

# Type: java.lang.Integer
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Sets the maximum number of retries in the case where the request fails
# because the service has applied rate limiting on the client. <p> When
# a client is sending requests faster than the allowed rate, the service
# will return HttpStatusCode 429 (Too Many Request) to throttle the
# client. The current implementation in the SDK will then wait for the
# amount of time the service tells it to wait and retry after the time
# has elapsed. <p> The default value is 4. This means in the case where
# the request is throttled, the same request will be issued for a
# maximum of 5 times to the server before an error is returned to the
# application.
#
# cas.service-registry.cosmos-db.max-retry-attempts-on-throttled-requests: 4

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Sets the maximum retry time in seconds. When a request fails due to a
# throttle error, the service sends back a response that contains a
# value indicating the client should not retry before the time period
# has elapsed (Retry-After). The MaxRetryWaitTime flag allows the
# application to set a maximum wait time for all retry attempts. If the
# cumulative wait time exceeds the MaxRetryWaitTime, the SDK will stop
# retrying and return the error to the application.
#
# cas.service-registry.cosmos-db.max-retry-wait-time: PT10S

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Sets the preferred regions for geo-replicated database accounts. For
# example, "East US" as the preferred region. When
# EnableEndpointDiscovery is true and PreferredRegions is non-empty, the
# SDK will prefer to use the regions in the container in the order they
# are specified to perform operations.
#
# cas.service-registry.cosmos-db.preferred-regions: 

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Document Db host address (i.e. https://localhost:8081).
#
# cas.service-registry.cosmos-db.uri: 

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-service-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbServiceRegistryProperties
#
# Sets the value of the user-agent suffix.
#
# cas.service-registry.cosmos-db.user-agent-suffix: 

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.service-registry.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Client execution timeout.
#
# cas.service-registry.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Connection timeout.
#
# cas.service-registry.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.service-registry.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.service-registry.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.service-registry.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.service-registry.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.service-registry.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.service-registry.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.service-registry.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.service-registry.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.service-registry.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.service-registry.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.service-registry.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# AWS custom endpoint.
#
# cas.service-registry.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Local address.
#
# cas.service-registry.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.service-registry.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Maximum connections setting.
#
# cas.service-registry.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.service-registry.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Profile name to use.
#
# cas.service-registry.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Profile path.
#
# cas.service-registry.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.service-registry.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.service-registry.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.service-registry.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Read capacity.
#
# cas.service-registry.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# AWS region used.
#
# cas.service-registry.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.service-registry.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Socket timeout.
#
# cas.service-registry.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# The table name used and created by CAS to hold service definitions in
# DynamoDb.
#
# cas.service-registry.dynamo-db.table-name: DynamoDbCasServices

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Time offset.
#
# cas.service-registry.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Flag that indicates whether to use reaper.
#
# cas.service-registry.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-dynamodb-service-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbServiceRegistryProperties
#
# Write capacity.
#
# cas.service-registry.dynamo-db.write-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# The branch to checkout and activate, defaults to {@code master}.
#
# cas.service-registry.git.active-branch: master

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# If the repository is to be cloned, this will allow a select list of
# branches to be fetched. List the branch names separated by commas or
# use {@code *} to clone all branches. Defaults to all branches.
#
# cas.service-registry.git.branches-to-clone: *

# Type: java.lang.Boolean
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# When establishing an ssh session, determine if default identities
# loaded on the machine should be excluded/removed and identity should
# only be limited to those loaded from given keys.
#
# cas.service-registry.git.clear-existing-identities: false

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.service-registry.git.clone-directory.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Determine whether service definitions in the git repository should be
# located/stored in groups and separate folder structures based on the
# service type. @see #getRootDirectory()
#
# cas.service-registry.git.group-by-type: true

# Type: org.apereo.cas.configuration.model.support.git.services.BaseGitProperties$HttpClientTypes
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Implementation of HTTP client to use when doing git operations via
# http/https. The jgit library sets the connection factory statically
# (globally) so this property should be set to the same value for all
# git repositories (services, saml, etc). Not doing so might result in
# one connection factory being used for clone and another for subsequent
# fetches.
# Available values are as follows:
# <ul><li>{@code JDK}:
# Built-in JDK http/https client.</li><li>{@code HTTP_CLIENT}: Apache
# HTTP Client http/https client.</li></ul>
#
# cas.service-registry.git.http-client-type: JDK

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Password used to access or push to the repository.
#
# cas.service-registry.git.password: 

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Password for the SSH private key.
#
# cas.service-registry.git.private-key-passphrase: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Type changed from File to Resource, but still needs to resolve to File.
# Replace with: Type changed from File to Resource, but still needs to resolve to File.
#
# 
#
# cas.service-registry.git.private-key-path: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.service-registry.git.private-key.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Decide whether changes should be pushed back into the remote
# repository.
#
# cas.service-registry.git.push-changes: false

# Type: java.lang.Boolean
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Whether to rebase on pulls.
#
# cas.service-registry.git.rebase: false

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# The address of the git repository. Could be a URL or a file-system
# path.
#
# cas.service-registry.git.repository-url: 

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Root directory in the git repository structure to track service
# definition files. This might be most useful if the git repository is
# tasked with other types of files and configurations and allowing a
# separate root directory for service definitions provide a clean
# separation between services files and everything else. This setting
# may work in concert with {@link #isGroupByType()}. If left blank, the
# root folder of the git repository itself is used as the root directory
# for service definitions.
#
# cas.service-registry.git.root-directory: 

# Type: java.lang.Boolean
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Whether commits should be signed.
#
# cas.service-registry.git.sign-commits: false

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# As with using SSH with public keys, an SSH session with {@code
# ssh://user@example.com/repo.git} must be specified to use
# password-secured SSH connections.
#
# cas.service-registry.git.ssh-session-password: 

# Type: java.lang.Boolean
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Whether on not to turn on strict host key checking. true will be
# "yes", false will be "no", "ask" not supported.
#
# cas.service-registry.git.strict-host-key-checking: true

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Timeout for git operations such as push and pull in seconds.
#
# cas.service-registry.git.timeout: PT10S

# Type: java.lang.String
# Module: cas-server-support-git-service-registry
# Owner: org.apereo.cas.configuration.model.support.git.services.GitServiceRegistryProperties
#
# Username used to access or push to the repository.
#
# cas.service-registry.git.username: 

# Type: java.lang.String
# Module: cas-server-support-gcp-firestore-service-registry
# Owner: org.apereo.cas.configuration.model.support.gcp.GoogleCloudFirestoreServiceRegistryProperties
#
# Database collection name to store and fetch registered service
# definitions.
#
# cas.service-registry.google-cloud-firestore.collection: RegisteredServices

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.service-registry.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.service-registry.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.service-registry.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.service-registry.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.service-registry.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.service-registry.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.service-registry.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.service-registry.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# The JDBC driver used to connect to the database.
#
# cas.service-registry.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Whether managing services via JPA is enabled.
#
# cas.service-registry.jpa.enabled: true

# Type: java.lang.Long
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.service-registry.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.service-registry.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Allow hibernate to generate query statistics.
#
# cas.service-registry.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.service-registry.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.service-registry.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.service-registry.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.service-registry.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.service-registry.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# The database connection password.
#
# cas.service-registry.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.service-registry.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.service-registry.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.service-registry.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.service-registry.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.service-registry.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.service-registry.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.service-registry.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.service-registry.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.service-registry.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.service-registry.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.service-registry.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.service-registry.jpa.read-only: false

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# The database connection URL.
#
# cas.service-registry.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-jpa-service-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.serviceregistry.JpaServiceRegistryProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.service-registry.jpa.user: sa

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-json-service-registry
# Owner: org.apereo.cas.configuration.model.support.services.json.JsonServiceRegistryProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.service-registry.json.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-json-service-registry
# Owner: org.apereo.cas.configuration.model.support.services.json.JsonServiceRegistryProperties
#
# Flag indicating whether a background watcher thread is enabled for the
# purposes of live reloading of service registry data changes from
# persistent data store.
#
# cas.service-registry.json.watcher-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Whether search/query results are allowed to match on multiple DNs, or
# whether a single unique DN is expected for the result.
#
# cas.service-registry.ldap.allow-multiple-dns: false

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Set if multiple Entries are allowed.
#
# cas.service-registry.ldap.allow-multiple-entries: false

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Base DN to use. There may be scenarios where different parts of a
# single LDAP tree could be considered as base-dns. Rather than
# duplicating the LDAP configuration block for each individual base-dn,
# each entry can be specified and joined together using a special
# delimiter character. The user DN is retrieved using the combination of
# all base-dn and DN resolvers in the order defined. DN resolution
# should fail if multiple DNs are found. Otherwise the first DN found is
# returned. Usual syntax is: {@code
# subtreeA,dc=example,dc=net|subtreeC,dc=example,dc=net}.
#
# cas.service-registry.ldap.base-dn: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Indicate the collection of attributes that are to be tagged and
# processed as binary attributes by the underlying search resolver.
#
# cas.service-registry.ldap.binary-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The bind credential to use when connecting to LDAP.
#
# cas.service-registry.ldap.bind-credential: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The bind DN to use when connecting to LDAP. LDAP connection
# configuration injected into the LDAP connection pool can be
# initialized with the following parameters: <ul> <li>{@code
# bindDn/bindCredential} provided - Use the provided credentials to bind
# when initializing connections.</li> <li>{@code bindDn/bindCredential}
# set to {@code *} - Use a fast-bind strategy to initialize the
# pool.</li> <li>{@code bindDn/bindCredential} set to blank - Skip
# connection initializing; perform operations anonymously. </li>
# <li>SASL mechanism provided - Use the given SASL mechanism to bind
# when initializing connections. </li> </ul>
#
# cas.service-registry.ldap.bind-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The length of time the pool will block. By default the pool will block
# indefinitely and there is no guarantee that waiting threads will be
# serviced in the order in which they made their request. This option
# should be used with a blocking connection pool when you need to
# control the exact number of connections that can be created
#
# cas.service-registry.ldap.block-wait-time: PT3S

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Sets the maximum amount of time that connects will block.
#
# cas.service-registry.ldap.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# If multiple URLs are provided as the ldapURL this describes how each
# URL will be processed. <ul> <li>{@code ACTIVE_PASSIVE} First LDAP will
# be used for every request unless it fails and then the next shall be
# used.</li> <li>{@code ROUND_ROBIN} For each new connection the next
# url in the list will be used.</li> <li>{@code RANDOM} For each new
# connection a random LDAP url will be selected.</li> <li>{@code
# DNS_SRV} LDAP urls based on DNS SRV records of the configured/given
# LDAP url will be used. </li> </ul>
#
# cas.service-registry.ldap.connection-strategy: 

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Whether to use a pooled connection factory in components.
#
# cas.service-registry.ldap.disable-pooling: false

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Attempt to populate the connection pool early on startup and fail
# quickly if something goes wrong.
#
# cas.service-registry.ldap.fail-fast: true

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Set if search referrals should be followed.
#
# cas.service-registry.ldap.follow-referrals: true

# Type: org.apereo.cas.configuration.model.support.ldap.AbstractLdapProperties$LdapHostnameVerifierOptions
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Hostname verification options.
# Available values are as follows:
#
# <ul><li>{@code DEFAULT}: Default option, forcing
# verification.</li><li>{@code ANY}: Skip hostname verification and
# allow all.</li></ul>
#
# cas.service-registry.ldap.hostname-verifier: DEFAULT

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# ID attribute used for the registered service entry in LDAP to keep
# track of the service numeric identifier.
#
# cas.service-registry.ldap.id-attribute: uid

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Prunes connections that have been idle
# for more than the indicated amount.
#
# cas.service-registry.ldap.idle-time: PT10M

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Path to the keystore used for SSL connections. Typically contains SSL
# certificates for the LDAP server.
#
# cas.service-registry.ldap.keystore: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Keystore password.
#
# cas.service-registry.ldap.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The type of keystore. {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.service-registry.ldap.keystore-type: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The LDAP url to the server. More than one may be specified, separated
# by space and/or comma.
#
# cas.service-registry.ldap.ldap-url: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The load filter used to load entries by the {@link #objectClass}. This
# is typically used to load all definitions that might be mapped to a
# service definition. The search filter used to load entries by the
# {@link #idAttribute}. This is typically used to load a specific
# service definition by its id during search operations.
#
# cas.service-registry.ldap.load-filter: (objectClass=%s)

# Type: java.lang.Integer
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Maximum LDAP connection pool size which the pool can use to grow.
#
# cas.service-registry.ldap.max-pool-size: 10

# Type: java.lang.Integer
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Minimum LDAP connection pool size. Size the pool should be initialized
# to and pruned to
#
# cas.service-registry.ldap.min-pool-size: 3

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Name of the LDAP handler.
#
# cas.service-registry.ldap.name: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Object class used for the registered service entry in LDAP.
#
# cas.service-registry.ldap.object-class: casRegisteredService

# Type: java.lang.Integer
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Request that the server return results in batches of a specific size.
# See <a href="http://www.ietf.org/rfc/rfc2696.txt">RFC 2696</a>. This
# control is often used to work around server result size limits. A
# negative/zero value disables paged requests.
#
# cas.service-registry.ldap.page-size: 0

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# You may receive unexpected LDAP failures, when CAS is configured to
# authenticate using {@code DIRECT} or {@code AUTHENTICATED} types and
# LDAP is locked down to not allow anonymous binds/searches. Every
# second attempt with a given LDAP connection from the pool would fail
# if it was on the same connection as a failed login attempt, and the
# regular connection validator would similarly fail. When a connection
# is returned back to a pool, it still may contain the principal and
# credentials from the previous attempt. Before the next bind attempt
# using that connection, the validator tries to validate the connection
# again but fails because it’s no longer trying with the configured bind
# credentials but with whatever user DN was used in the previous step.
# Given the validation failure, the connection is closed and CAS would
# deny access by default. Passivators attempt to reconnect to LDAP with
# the configured bind credentials, effectively resetting the connection
# to what it should be after each bind request. Furthermore if you are
# seeing errors in the logs that resemble a 'Operation exception
# encountered, reopening connection' type of message, this usually is an
# indication that the connection pool’s validation timeout established
# and created by CAS is greater than the timeout configured in the LDAP
# server, or more likely, in the load balancer in front of the LDAP
# servers. You can adjust the LDAP server session’s timeout for
# connections, or you can teach CAS to use a validity period that is
# equal or less than the LDAP server session’s timeout. Accepted values
# are: <ul> <li>{@code NONE}: No passivation takes place.</li>
# <li>{@code BIND}: The default behavior which passivates a connection
# by performing a bind operation on it. This option requires the
# availability of bind credentials when establishing connections to
# LDAP.</li> </ul>
#
# cas.service-registry.ldap.pool-passivator: BIND

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Removes connections from the pool based on how long they have been
# idle in the available queue. Run the pruning process at the indicated
# interval.
#
# cas.service-registry.ldap.prune-period: PT2H

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Duration of time to wait for responses.
#
# cas.service-registry.ldap.response-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# SASL authorization id.
#
# cas.service-registry.ldap.sasl-authorization-id: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The SASL mechanism.
#
# cas.service-registry.ldap.sasl-mechanism: 

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# SASL mutual auth is enabled?
#
# cas.service-registry.ldap.sasl-mutual-auth: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# SASL quality of protected.
#
# cas.service-registry.ldap.sasl-quality-of-protection: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The SASL realm.
#
# cas.service-registry.ldap.sasl-realm: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# SASL security strength.
#
# cas.service-registry.ldap.sasl-security-strength: 

# Type: java.util.List<org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties>
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Search handlers.
#
# cas.service-registry.ldap.search-entry-handlers: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute name case change.
#
# cas.service-registry.ldap.search-entry-handlers[].case-change.attribute-name-case-change: 

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.service-registry.ldap.search-entry-handlers[].case-change.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Attribute value case change.
#
# cas.service-registry.ldap.search-entry-handlers[].case-change.attribute-value-case-change: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.CaseChangeSearchEntryHandlersProperties
#
# The Dn case change.
#
# cas.service-registry.ldap.search-entry-handlers[].case-change.dn-case-change: 

# Type: boolean
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Add if exists.
#
# cas.service-registry.ldap.search-entry-handlers[].dn-attribute.add-if-exists: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.DnAttributeSearchEntryHandlersProperties
#
# The Dn attribute name.
#
# cas.service-registry.ldap.search-entry-handlers[].dn-attribute.dn-attribute-name: entryDN

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Attribute names.
#
# cas.service-registry.ldap.search-entry-handlers[].merge-attribute.attribute-names: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.MergeAttributesSearchEntryHandlersProperties
#
# The Merge attribute name.
#
# cas.service-registry.ldap.search-entry-handlers[].merge-attribute.merge-attribute-name: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Base dn.
#
# cas.service-registry.ldap.search-entry-handlers[].primary-group-id.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.PrimaryGroupIdSearchEntryHandlersProperties
#
# The Group filter.
#
# cas.service-registry.ldap.search-entry-handlers[].primary-group-id.group-filter: (&(objectClass=group)(objectSid={0}))

# Type: java.util.List<String>
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Merge attributes.
#
# cas.service-registry.ldap.search-entry-handlers[].recursive.merge-attributes: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.RecursiveSearchEntryHandlersProperties
#
# The Search attribute.
#
# cas.service-registry.ldap.search-entry-handlers[].recursive.search-attribute: 

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowReferralSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.service-registry.ldap.search-entry-handlers[].search-referral.limit: 10

# Type: int
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.FollowResultSearchEntryHandlersProperties
#
# The default referral limit.
#
# cas.service-registry.ldap.search-entry-handlers[].search-result.limit: 10

# Type: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties.SearchEntryHandlerTypes
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapSearchEntryHandlersProperties
#
# The type of search entry handler to choose.
# Available values are as
# follows:
# <ul><li>{@code FOLLOW_SEARCH_REFERRAL}: Provides handling
# of an ldap referral for search operations.</li><li>{@code
# FOLLOW_SEARCH_RESULT_REFERENCE}: Provides handling of an ldap
# continuation reference for search operations.</li><li>{@code
# ACTIVE_DIRECTORY}: Process the entry results fetched from active
# directory and
# check for account status controls for disabled/expired
# accounts, etc.</li><li>{@code OBJECT_GUID}: Object guid search entry
# handler.
# Handles the {@code objectGUID} attribute fetching and
# conversion.</li><li>{@code OBJECT_SID}: Object sid search entry
# handler.
# Handles the {@code objectSid} attribute fetching and
# conversion.</li><li>{@code CASE_CHANGE}: Case change search entry
# handler.
# Provides the ability to modify the case of search entry
# DNs, attribute names, and attribute values.</li><li>{@code
# DN_ATTRIBUTE_ENTRY}: DN attribute entry handler.
# Adds the entry DN
# as an attribute to the result set. Provides
# a client side
# implementation of RFC 5020.</li><li>{@code MERGE}: Merge search entry
# handler.
# Merges the values of one or more attributes into a single
# attribute.</li><li>{@code PRIMARY_GROUP}: Primary group search
# handler.
# Constructs the primary group SID and then searches for
#
# that group and puts it's DN in the {@code memberOf} attribute of the
# original search entry.</li><li>{@code RANGE_ENTRY}: Range entry search
# handler.
# Rewrites attributes returned from Active Directory to
#
# include all values by performing additional searches.</li><li>{@code
# RECURSIVE_ENTRY}: Recursive entry search handler.
# This recursively
# searches based on a supplied
# attribute and merges those results into
# the original entry.</li><li>{@code MERGE_ENTRIES}: Merge entries
# handler.
# Merges the values of one or more attributes in all entries
# into a single attribute. The merged attribute may or may not already
#
# exist on the entry. If it does exist it's existing values will remain
# intact.</li></ul>
#
# cas.service-registry.ldap.search-entry-handlers[].type: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# User filter to use for searching. Syntax is {@code cn={user}} or
# {@code cn={0}}. <p> You may also provide an external groovy script in
# the syntax of {@code file:/path/to/GroovyScript.groovy} to fully build
# the final filter template dynamically.
#
# cas.service-registry.ldap.search-filter: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Service definition attribute used for the registered service entry in
# LDAP to keep a representation of the service body.
#
# cas.service-registry.ldap.service-definition-attribute: description

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Whether subtree searching is allowed.
#
# cas.service-registry.ldap.subtree-search: true

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Path of the trust certificates to use for the SSL connection. Ignores
# keystore-related settings when activated and used.
#
# cas.service-registry.ldap.trust-certificates: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Trust Manager options. Trust managers are responsible for managing the
# trust material that is used when making LDAP trust decisions, and for
# deciding whether credentials presented by a peer should be accepted.
# Accepted values are: * <ul> <li>{@code DEFAULT}: Enable and force the
# default JVM trust managers.</li> <li>{@code ANY}: Trust any client or
# server.</li> </ul>
#
# cas.service-registry.ldap.trust-manager: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Path to the keystore used to determine which certificates or
# certificate authorities should be trusted. Used when connecting to an
# LDAP server via LDAPS or startTLS connection. If left blank, the
# default truststore for the Java runtime is used.
#
# cas.service-registry.ldap.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Password needed to open the truststore.
#
# cas.service-registry.ldap.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# The type of trust keystore that determines which certificates or
# certificate authorities are trusted. Types depend on underlying java
# platform, typically {@code PKCS12} or {@code JKS}. If left blank,
# defaults to the default keystore type indicated by the underlying Java
# platform.
#
# cas.service-registry.ldap.trust-store-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Whether TLS should be used and enabled when establishing the
# connection.
#
# cas.service-registry.ldap.use-start-tls: false

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Whether connections should be validated when loaned out from the pool.
#
# cas.service-registry.ldap.validate-on-checkout: true

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Period at which pool should be validated.
#
# cas.service-registry.ldap.validate-period: PT5M

# Type: java.lang.Boolean
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Whether connections should be validated periodically when the pool is
# idle.
#
# cas.service-registry.ldap.validate-periodically: true

# Type: java.lang.String
# Module: cas-server-support-ldap-service-registry
# Owner: org.apereo.cas.configuration.model.support.ldap.serviceregistry.LdapServiceRegistryProperties
#
# Period at which validation operations may time out.
#
# cas.service-registry.ldap.validate-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute name to use for the compare validator.
#
# cas.service-registry.ldap.validator.attribute-name: objectClass

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Attribute values to use for the compare validator.
#
# cas.service-registry.ldap.validator.attribute-value: top

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Base DN to use for the search request of the search validator.
#
# cas.service-registry.ldap.validator.base-dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# DN to compare to use for the compare validator.
#
# cas.service-registry.ldap.validator.dn: 

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search scope to use for the search request of the search validator.
#
# cas.service-registry.ldap.validator.scope: OBJECT

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Search filter to use for the search request of the search validator.
#
# cas.service-registry.ldap.validator.search-filter: (objectClass=*)

# Type: java.lang.String
# Module: cas-server-support-ldap
# Owner: org.apereo.cas.configuration.model.support.ldap.LdapValidatorProperties
#
# Determine the LDAP validator type. <p> The following LDAP validators
# can be used to test connection health status: <ul> <li>{@code search}:
# Validates a connection is healthy by performing a search operation.
# Validation is considered successful if the search result size is
# greater than zero.</li> <li>{@code none}: No validation takes
# place.</li> <li>{@code compare}: Validates a connection is healthy by
# performing a compare operation.</li> </ul>
#
# cas.service-registry.ldap.validator.type: search

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Principal attribute names that indicates the destination email address
# for this message. The attributes must already be resolved and
# available to the CAS principal. When multiple attributes are
# specified, each attribute is then examined against the available CAS
# principal to locate the email address value, which may result in
# multiple emails being sent.
#
# cas.service-registry.mail.attribute-name: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email BCC address, if any.
#
# cas.service-registry.mail.bcc: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email CC address, if any.
#
# cas.service-registry.mail.cc: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email from address.
#
# cas.service-registry.mail.from: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Indicate whether the message body should be evaluated as HTML text.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.service-registry.mail.html: false

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set the priority ({@code X-Priority} header) of the message. Values:
# {@code 1 (Highest)}, {@code 2 (High)}, {@code 3 (Normal)}, {@code 4
# (Low)}, {@code 5 (Lowest)}. The application of this setting depends on
# the email provider implementation and may not be fully supported
# everywhere. This is typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.service-registry.mail.priority: 1

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email Reply-To address, if any.
#
# cas.service-registry.mail.reply-to: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email subject line. <p> The subject can either be defined verbaitm, or
# it may point to a message key in the language bundle using the syntax
# {@code #{subject-language-key}}. This key should point to a valid
# message defined in the appropriate language bundle that is then picked
# up via the active locale. In case where the language code cannot
# resolve the real subject, a default subject value would be used.
#
# cas.service-registry.mail.subject: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Email message body. Could be plain text or a reference to an external
# file that would serve as a template. <p> If specified as a path to an
# external file with an extension {@code .gtemplate}, then the email
# message body would be processed using the Groovy template engine. The
# template engine uses JSP style &lt;% %&gt; script and &lt;%= %&gt;
# expression syntax or GString style expressions. The variable {@code
# out} is bound to the writer that the template is being written to. <p>
# If using plain text, the contents are processed for string subtitution
# candidates using named variables. For example, you may refer to an
# expected url variable in the email text via {@code ${url}}, or use
# {@code ${token}} to locate the token variable. In certain cases,
# additional parameters are passed to the email body processor that
# might include authentication and/or principal attributes, the
# available locale, client http information, etc.
#
# cas.service-registry.mail.text: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.email.EmailProperties
#
# Set whether to validate all addresses which get passed to this helper.
# The application of this setting depends on the email provider
# implementation and may not be fully supported everywhere. This is
# typically relevant for the default {@link
# org.springframework.mail.javamail.JavaMailSender}.
#
# cas.service-registry.mail.validate-addresses: false

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Name of the database to use for authentication.
#
# cas.service-registry.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.service-registry.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# MongoDb database collection name to fetch and/or create.
#
# cas.service-registry.mongo.collection: 

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# MongoDb database instance name.
#
# cas.service-registry.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.service-registry.mongo.drop-collection: false

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.service-registry.mongo.host: localhost

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# MongoDb database password for authentication.
#
# cas.service-registry.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.service-registry.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.service-registry.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.service-registry.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.service-registry.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.service-registry.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.service-registry.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# MongoDb database port.
#
# cas.service-registry.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.service-registry.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.service-registry.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.service-registry.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.service-registry.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.service-registry.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Whether connections require SSL.
#
# cas.service-registry.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# MongoDb database connection timeout.
#
# cas.service-registry.mongo.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# MongoDb database user for authentication.
#
# cas.service-registry.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-mongo-service-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.serviceregistry.MongoDbServiceRegistryProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.service-registry.mongo.write-concern: ACKNOWLEDGED

# Type: java.io.File
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.service-registry.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.service-registry.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.service-registry.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.service-registry.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.service-registry.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.service-registry.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.service-registry.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.service-registry.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.service-registry.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.service-registry.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.service-registry.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.service-registry.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.service-registry.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.service-registry.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Connection timeout.
#
# cas.service-registry.redis.connect-timeout: PT10S

# Type: java.lang.Integer
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Database index used by the connection factory.
#
# cas.service-registry.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.service-registry.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Redis server host.
#
# cas.service-registry.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.service-registry.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.service-registry.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.service-registry.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Login password of the redis server.
#
# cas.service-registry.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.service-registry.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.service-registry.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.service-registry.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.service-registry.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.service-registry.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.service-registry.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.service-registry.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.service-registry.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.service-registry.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.service-registry.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.service-registry.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.service-registry.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.service-registry.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.service-registry.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Redis server port.
#
# cas.service-registry.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Redis protocol version.
#
# cas.service-registry.redis.protocol-version: RESP3

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.service-registry.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.service-registry.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.service-registry.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.service-registry.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.service-registry.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.service-registry.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.service-registry.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Command timeout.
#
# cas.service-registry.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Database URI.
#
# cas.service-registry.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.service-registry.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Login username of the redis server.
#
# cas.service-registry.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-service-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisServiceRegistryProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.service-registry.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-support-rest-service-registry
# Owner: org.apereo.cas.configuration.model.core.services.RestfulServiceRegistryProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.service-registry.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-rest-service-registry
# Owner: org.apereo.cas.configuration.model.core.services.RestfulServiceRegistryProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.service-registry.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-rest-service-registry
# Owner: org.apereo.cas.configuration.model.core.services.RestfulServiceRegistryProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.service-registry.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-rest-service-registry
# Owner: org.apereo.cas.configuration.model.core.services.RestfulServiceRegistryProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.service-registry.rest.url: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.service-registry.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.service-registry.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.service-registry.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.service-registry.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.service-registry.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.service-registry.schedule.start-delay: PT15S

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# Principal attribute names that indicates the destination phone number
# for this SMS message. The attribute must already be resolved and
# available to the CAS principal.
#
# cas.service-registry.sms.attribute-name: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The from address for the message.
#
# cas.service-registry.sms.from: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.SmsProperties
#
# The body of the SMS message.
#
# cas.service-registry.sms.text: 

# Type: java.lang.Boolean
# Module: cas-server-support-service-registry-stream
# Owner: org.apereo.cas.configuration.model.support.services.stream.StreamingServicesCoreProperties
#
# Whether service registry events should be streamed and published
# across a CAS cluster. One typical workflow is to enable the publisher
# on one master node and have others consume definitions and changes
# from the upstream master node in order to avoid overrides and timing
# issues as changes may step over each other if the service registry
# schedule is not timed correctly.
#
# cas.service-registry.stream.core.enabled: true

# Type: org.apereo.cas.configuration.model.support.services.stream.StreamingServicesCoreProperties$ReplicationModes
# Module: cas-server-support-service-registry-stream
# Owner: org.apereo.cas.configuration.model.support.services.stream.StreamingServicesCoreProperties
#
# Indicates the replication mod.
# Available values are as follows:
#
# <ul><li>{@code ACTIVE}: In this replication mode, all CAS nodes will
# try to sync copies
# of service definition files individually on each
# node.</li><li>{@code PASSIVE}: In this replication mode, one CAS
# service is designated to be the master
# that contains all service
# definition files locally, and will stream changes
# to other CAS
# passive nodes. Passive CAS nodes only access the replication
# cache
# to retrieve services, and will not individually keep copies of the
#
# service definition files on disk.</li></ul>
#
# cas.service-registry.stream.core.replication-mode: PASSIVE

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports both synchronous and asynchronous backups. By
# default, backup operations are synchronous. In this case, backup
# operations block operations until backups are successfully copied to
# backup members (or deleted from backup members in case of remove) and
# acknowledgements are received. Therefore, backups are updated before a
# put operation is completed, provided that the cluster is stable.
# Asynchronous backups, on the other hand, do not block operations. They
# are fire and forget and do not require acknowledgements; the backup
# operations are performed at some point in time.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.async-backup-count: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Used when replication is turned on with {@link #isReplicated()}. <p>
# If a new member joins the cluster, there are two ways you can handle
# the initial provisioning that is executed to replicate all existing
# values to the new member. Each involves how you configure the async
# fill up. <ul> <li>First, you can configure async fill up to true,
# which does not block reads while the fill up operation is underway.
# That way, you have immediate access on the new member, but it will
# take time until all the values are eventually accessible. Not yet
# replicated values are returned as non-existing (null). </li>
# <li>Second, you can configure for a synchronous initial fill up (by
# configuring the async fill up to false), which blocks every read or
# write access to the map until the fill up operation is finished. Use
# this with caution since it might block your application from
# operating.</li> </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.core.async-fillup: true

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# To provide data safety, Hazelcast allows you to specify the number of
# backup copies you want to have. That way, data on a cluster member
# will be copied onto other member(s). To create synchronous backups,
# select the number of backup copies. When this count is 1, a map entry
# will have its backup on one other member in the cluster. If you set it
# to 2, then a map entry will have its backup on two other members. You
# can set it to 0 if you do not want your entries to be backed up, e.g.,
# if performance is more important than backing up. The maximum value
# for the backup count is 6. Sync backup operations have a blocking cost
# which may lead to latency issues.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.backup-count: 1

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# CP Subsystem is a component of a Hazelcast cluster that builds a
# strongly consistent layer for a set of distributed data structures.
# Its data structures are CP with respect to the CAP principle, i.e.,
# they always maintain linearizability and prefer consistency over
# availability during network partitions. Besides network partitions, CP
# Subsystem withstands server and client failures. All members of a
# Hazelcast cluster do not necessarily take part in CP Subsystem. The
# number of Hazelcast members that take part in CP Subsystem is
# specified here. CP Subsystem must have at least 3 CP members.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.cp-member-count: 0

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports policy-based eviction for distributed maps.
# Currently supported policies are LRU (Least Recently Used) and LFU
# (Least Frequently Used) and NONE. See <a
# href="http://docs.hazelcast.org/docs/latest-development/manual/html/Di
# stributed_Data_Structures/Map/Map_Eviction.html">this</a> for more
# info.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.eviction-policy: LRU

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# The instance name.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.instance-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast has a flexible logging configuration and doesn't depend on
# any logging framework except JDK logging. It has in-built adaptors for
# a number of logging frameworks and also supports custom loggers by
# providing logging interfaces. To use built-in adaptors you should set
# this setting to one of predefined types below. <ul> <li>{@code jdk}:
# JDK logging</li> <li>{@code log4j}: Log4j</li> <li>{@code slf4j}:
# Slf4j</li> <li>{@code none}: Disable logging</li> </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.core.logging-type: slf4j

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Define how data items in Hazelcast maps are merged together from
# source to destination. By default, merges map entries from source to
# destination if they don't exist in the destination map. Accepted
# values are: <ul> <li>{@code PUT_IF_ABSENT}: Merges data structure
# entries from source to destination if they don't exist in the
# destination data structure.</li> <li>{@code HIGHER_HITS}: * Merges
# data structure entries from source to destination data structure if
# the source entry has more hits than the destination one.</li>
# <li>{@code DISCARD}: Merges only entries from the destination data
# structure and discards all entries from the source data structure.
# </li> <li>{@code PASS_THROUGH}: Merges data structure entries from
# source to destination directly unless the merging entry is null</li>
# <li>{@code EXPIRATION_TIME}: Merges data structure entries from source
# to destination data structure if the source entry will expire later
# than the destination entry. This policy can only be used if the clocks
# of the nodes are in sync. </li> <li>{@code LATEST_UPDATE}: Merges data
# structure entries from source to destination data structure if the
# source entry was updated more frequently than the destination entry.
# This policy can only be used if the clocks of the nodes are in sync.
# </li> <li>{@code LATEST_ACCESS}: Merges data structure entries from
# source to destination data structure if the source entry has been
# accessed more recently than the destination entry. This policy can
# only be used if the clocks of the nodes are in sync.</li> </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.core.map-merge-policy: PUT_IF_ABSENT

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Max timeout of heartbeat in seconds for a node to assume it is dead.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.max-no-heartbeat-seconds: 300

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Sets the maximum size of the map.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.max-size: 85

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# <ul> <li>{@code FREE_HEAP_PERCENTAGE}: Policy based on minimum free
# JVM heap memory percentage per JVM.</li> <li>{@code FREE_HEAP_SIZE}:
# Policy based on minimum free JVM heap memory in megabytes per
# JVM.</li> <li>{@code FREE_NATIVE_MEMORY_PERCENTAGE}: Policy based on
# minimum free native memory percentage per Hazelcast instance.</li>
# <li>{@code FREE_NATIVE_MEMORY_SIZE}: Policy based on minimum free
# native memory in megabytes per Hazelcast instance.</li> <li>{@code
# PER_NODE}: Policy based on maximum number of entries stored per data
# structure (map, cache etc) on each Hazelcast instance.</li> <li>{@code
# PER_PARTITION}: Policy based on maximum number of entries stored per
# data structure (map, cache etc) on each partition.</li> <li>{@code
# USED_HEAP_PERCENTAGE}: Policy based on maximum used JVM heap memory
# percentage per data structure (map, cache etc) on each Hazelcast
# instance .</li> <li>{@code USED_HEAP_SIZE}: Policy based on maximum
# used JVM heap memory in megabytes per data structure (map, cache etc)
# on each Hazelcast instance.</li> <li>{@code
# USED_NATIVE_MEMORY_PERCENTAGE}: Policy based on maximum used native
# memory percentage per data structure (map, cache etc) on each
# Hazelcast instance.</li> <li>{@code USED_NATIVE_MEMORY_SIZE}: Policy
# based on maximum used native memory in megabytes per data structure
# (map, cache etc) on each Hazelcast instance .</li> </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.core.max-size-policy: USED_HEAP_PERCENTAGE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# With {@code PartitionGroupConfig}, you can control how primary and
# backup partitions are mapped to physical Members. Hazelcast will
# always place partitions on different partition groups so as to provide
# redundancy. Accepted value are: {@code PER_MEMBER, HOST_AWARE, CUSTOM,
# ZONE_AWARE, SPI}. In all cases a partition will never be created on
# the same group. If there are more partitions defined than there are
# partition groups, then only those partitions, up to the number of
# partition groups, will be created. For example, if you define 2
# backups, then with the primary, that makes 3. If you have only two
# partition groups only two will be created. <ul> <li>{@code}PER_MEMBER
# Partition Groups}: This is the default partition scheme and is used if
# no other scheme is defined. Each Member is in a group of its own.</li>
# <li>{@code}HOST_AWARE Partition Groups}: In this scheme, a group
# corresponds to a host, based on its IP address. Partitions will not be
# written to any other members on the same host. This scheme provides
# good redundancy when multiple instances are being run on the same
# host.</li> <li>{@code}CUSTOM Partition Groups}: In this scheme, IP
# addresses, or IP address ranges, are allocated to groups. Partitions
# are not written to the same group. This is very useful for ensuring
# partitions are written to different racks or even availability
# zones.</li> <li>{@code}ZONE_AWARE Partition Groups}: In this scheme,
# groups are allocated according to the metadata provided by Discovery
# SPI Partitions are not written to the same group. This is very useful
# for ensuring partitions are written to availability zones or different
# racks without providing the IP addresses to the config ahead.</li>
# <li>{@code}SPI Partition Groups}: In this scheme, groups are allocated
# according to the implementation provided by Discovery SPI.</li> </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.core.partition-member-group-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# A Replicated Map is a distributed key-value data structure where the
# data is replicated to all members in the cluster. It provides full
# replication of entries to all members for high speed access. A
# Replicated Map does not partition data (it does not spread data to
# different cluster members); instead, it replicates the data to all
# members. Replication leads to higher memory consumption. However, a
# Replicated Map has faster read and write access since the data is
# available on all members. Writes could take place on local/remote
# members in order to provide write-order, eventually being replicated
# to all other members. <br><p> If you have a large cluster or very high
# occurrences of updates, the Replicated Map may not scale linearly as
# expected since it has to replicate update operations to all members in
# the cluster. Since the replication of updates is performed in an
# asynchronous manner, Hazelcast recommends you enable back pressure in
# case your system has high occurrences of updates. <p> Note that
# Replicated Map does not guarantee eventual consistency because there
# are some edge cases that fail to provide consistency. <br><p>
# Replicated Map uses the internal partition system of Hazelcast in
# order to serialize updates happening on the same key at the same time.
# This happens by sending updates of the same key to the same Hazelcast
# member in the cluster. <br><p> Due to the asynchronous nature of
# replication, a Hazelcast member could die before successfully
# replicating a "write" operation to other members after sending the
# "write completed" response to its caller during the write process. In
# this scenario, Hazelcast’s internal partition system promotes one of
# the replicas of the partition as the primary one. The new primary
# partition does not have the latest "write" since the dead member could
# not successfully replicate the update.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.replicated: false

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Connection timeout in seconds for the TCP/IP config and members
# joining the cluster.
#
# cas.service-registry.stream.hazelcast.config.cluster.core.timeout: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS access key.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.access-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# ECS cluster short name or ARN; default is the current cluster.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.cluster: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# The maximum amount of time Hazelcast will try to connect to a well
# known member before giving up. Setting this value too low could mean
# that a member is not able to connect to a cluster. Setting the value
# too high means that member startup could slow down because of longer
# timeouts (for example, when a well known member is not up). Increasing
# this value is recommended if you have many IPs listed and the members
# cannot properly build up the cluster. Its default value is 5.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.connection-timeout-seconds: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks with the given family name; mutually
# exclusive with {@link #getServiceName()}.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.family: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Host header. i.e. {@code ec2.amazonaws.com}. The URL that is the entry
# point for a web service.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.host-header: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If you do not want to use access key and secret key, you can specify
# iam-role. Hazelcast fetches your credentials by using your IAM role.
# This setting only affects deployments on Amazon EC2. If you are
# deploying CAS in an Amazon ECS environment, the role should not be
# specified. The role is fetched from the task definition that is
# assigned to run CAS.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.iam-role: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Hazelcast port. Typically may be set to {@code 5701}. You can set
# searching for other ports rather than 5701 if you've members on
# different ports.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS region. i.e. {@code us-east-1}. The region where your members are
# running.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.region: us-east-1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS secret key.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.secret-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a security group is configured, only instances within that security
# group are selected.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.security-group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks from the given service; mutually
# exclusive with {@link #getFamily()}.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.service-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.tag-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.aws.tag-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client ID.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.azure.client-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client secret.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.azure.client-secret: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The name of the tag on the hazelcast vm resources. With every
# Hazelcast Virtual Machine you deploy in your resource group, you need
# to ensure that each VM is tagged with the value of cluster-id defined
# in your Hazelcast configuration. The only requirement is that every VM
# can access each other either by private or public IP address.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.azure.cluster-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure resource group name of the cluster. You can find this in the
# Azure portal or CLI.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.azure.group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure subscription ID.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.azure.subscription-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory tenant ID.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.azure.tenant-id: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastDiscoveryProperties
#
# Whether discovery should be enabled via the configured strategies
# below.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A range of ports where the plugin looks for Hazelcast members.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.gcp.hz-port: 5701-5708

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filter to look only for instances labeled as specified; property
# format: {@code key=value}.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.gcp.label: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filesystem path to the private key for GCP service account in the
# JSON format; if not set, the access token is fetched from the GCP VM
# instance.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.gcp.private-key-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of projects where the plugin looks for instances; if not set,
# the current project is used.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.gcp.projects: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A region where the plugin looks for instances; if not set, the {@link
# #getZones()} property is used; if it and {@link #getZones()} property
# not set, all zones of the current region are used.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.gcp.region: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of zones where the plugin looks for instances; if not set, all
# zones of the current region are used.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.gcp.zones: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider credential, can be thought of as a password for cloud
# services.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.credential: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for cloud providers which require an extra JSON or P12 key file.
# This denotes the path of that file. Only tested with Google Compute
# Engine. (Required if Google Compute Engine is used.)
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.credential-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines the endpoint for a generic API such as OpenStack or CloudStack
# (optional).
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters instance groups (optional). When used with AWS it maps to
# security group.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider identity, can be thought of as a user name for cloud
# services.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.identity: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Port which the hazelcast instance service uses on the cluster member.
# Default value is 5701. (optional)
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# String value that is used to identify ComputeService provider. For
# example, "google-compute-engine" is used for Google Cloud services.
# See <a
# href="https://jclouds.apache.org/reference/providers/#compute">here</a
# > for more info.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.provider: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines region for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.regions: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for IAM role support specific to AWS (optional, but if defined,
# no identity or credential should be defined in the configuration).
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.role-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional). Can be used with comma
# separated values for multiple values.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.tag-keys: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional) Can be used with comma
# separated values for multiple values.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.tag-values: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines zone for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.jclouds.zones: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the number of retries to Kubernetes API. Defaults to: 3.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.api-retries: 3

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an oauth token for the kubernetes client to access the
# kubernetes REST API. Defaults to reading the token from the
# auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/token}.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.api-token: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# CA Authority certificate from Kubernetes Master. Defaults to reading
# the certificate from the auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/ca.crt}.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.ca-certificate: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an alternative address for the kubernetes master. Defaults to:
# {@code https://kubernetes.default.svc}
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.kubernetes-master: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the namespace of the application POD through the Service
# Discovery REST API of Kubernetes.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.namespace: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label to lookup through the Service Discovery REST API
# of Kubernetes.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.pod-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label value to lookup through the Service Discovery
# REST API of Kubernetes.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.pod-label-value: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if not ready addresses should be evaluated to be discovered on
# startup.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.resolve-not-ready-addresses: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup domain. This is defined as something
# similar to {@code my-svc.my-namespace.svc.cluster.local}.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.service-dns: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup timeout in seconds. Defaults to 5 secs.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.service-dns-timeout: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label to lookup through the Service Discovery REST
# API of Kubernetes.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.service-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label value to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.service-label-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service name of the POD to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.service-name: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# If specified with a value greater than 0, its value defines the
# endpoint port of the service (overriding the default).
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.service-port: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if the node name should be used as external address, instead
# of looking up the external IP using the {@code /nodes} resource.
# Default is false.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.kubernetes.use-node-name-as-external-address: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Enables a multicast configuration using a group address and port.
# Contains the configuration for the multicast discovery mechanism. With
# the multicast discovery mechanism Hazelcast allows Hazelcast members
# to find each other using multicast. So Hazelcast members do not need
# to know concrete addresses of members, they just multicast to everyone
# listening. It depends on your environment if multicast is possible or
# allowed; otherwise you need to have a look at the tcp/ip cluster
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.multicast.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast group address used for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.multicast.group: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast port used for discovery.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.multicast.port: 0

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Gets the time to live for the multicast package in seconds. This is
# the default time-to-live for multicast packets sent out on the socket
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.multicast.time-to-live: 32

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# specifies the time in seconds that a member should wait for a valid
# multicast response from another member running in the network before
# declaring itself the leader member (the first member joined to the
# cluster) and creating its own cluster. This only applies to the
# startup of members where no leader has been assigned yet. If you
# specify a high value, such as 60 seconds, it means that until a leader
# is selected, each member will wait 60 seconds before moving on. Be
# careful when providing a high value. Also, be careful not to set the
# value too low, or the members might give up too early and create their
# own cluster.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.multicast.timeout: 2

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Multicast trusted interfaces for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.multicast.trusted-interfaces: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Name of this Hazelcast cluster. You can have multiple distinct
# clusters to use the same ZooKeeper installation
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.zookeeper.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Path in zookeeper to be used for auto-discovery of members where
# members are tracked.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.zookeeper.path: /discovery/hazelcast

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Zookeeper url address typically in the format of {@code
# ip-address:port}.
#
# cas.service-registry.stream.hazelcast.config.cluster.discovery.zookeeper.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# IPv6 support has been switched off by default, since some platforms
# have issues in use of IPv6 stack. And some other platforms such as
# Amazon AWS have no support at all. To enable IPv6 support set this
# setting to false.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ipv4-enabled: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# If this property is set, then this is the address where the server
# socket is bound to.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.local-address: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Sets the well known members. If members is empty, calling this method
# will have the same effect as calling {@code clear()}. A member can be
# a comma separated string, e..g {@code 10.11.12.1,10.11.12.2} which
# indicates multiple members are going to be added. The list of members
# must include ALL CAS server node, including the current node that owns
# this configuration.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.members: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify which network interfaces that Hazelcast should use.
# Servers mostly have more than one network interface, so you may want
# to list the valid IPs. Range characters ('*' and '-') can be used for
# simplicity. For instance, 10.3.10.* refers to IPs between 10.3.10.0
# and 10.3.10.255. Interface 10.3.10.4-18 refers to IPs between
# 10.3.10.4 and 10.3.10.18 (4 and 18 included). If network interface
# configuration is enabled (it is disabled by default) and if Hazelcast
# cannot find an matching interface, then it will print a message on the
# console and will not start on that node. <p> Interfaces can be
# separated by a comma.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.network-interfaces: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The outbound ports for the Hazelcast configuration.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.outbound-ports: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify the ports which Hazelcast will use to communicate
# between cluster members. The name of the parameter for this is port
# and its default value is 5701. By default, Hazelcast will try 100
# ports to bind. Meaning that, if you set the value of port as 5701, as
# members are joining to the cluster, Hazelcast tries to find ports
# between 5701 and 5801.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.port: 5701

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You may also want to choose to use only one port. In that case, you
# can disable the auto-increment feature of port.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.port-auto-increment: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The default public address to be advertised to other cluster members
# and clients.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.public-address: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Comma-separated list of cipher suite names allowed to be used. Its
# default value are all supported suites in your Java runtime.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.cipher-suites: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the authentication keys are
# provided.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.key-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the keystore. Its default value is JKS. Another commonly used
# type is the PKCS12. Available keystore/truststore types depend on your
# Operating system and the Java runtime. Only needed when the mutual
# authentication is used.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.key-store-type: JKS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your keystore file. Only needed when the mutual authentication
# is used.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.keystore: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to access the key from your keystore file. Only needed when
# the mutual authentication is used.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Mutual authentication configuration. It’s empty by default which means
# the client side of connection is not authenticated. Available values
# are: <ul> <li>{@code REQUIRED} - server forces usage of a trusted
# client certificate</li> <li>{@code OPTIONAL} - server asks for a
# client certificate, but it doesn't require it</li> </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.mutual-authentication: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm which is used in your TLS/SSL. For the protocol
# property, we recommend you to provide TLS with its version
# information, e.g., TLSv1.2. Note that if you write only TLS, your
# application chooses the TLS version according to your Java version.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.protocol: TLS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the trust managers are provided.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.trust-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your truststore file. The file truststore is a keystore file
# that contains a collection of certificates trusted by your
# application.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to unlock the truststore file.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the truststore. Its default value is JKS. Another commonly
# used type is the PKCS12. Available keystore/truststore types depend on
# your Operating system and the Java runtime.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.trust-store-type: JKS

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Flag which allows enabling endpoint identity validation. It means,
# during the TLS handshake client verifies if the server’s hostname (or
# IP address) matches the information in X.509 certificate (Subject
# Alternative Name extension).
#
# cas.service-registry.stream.hazelcast.config.cluster.network.ssl.validate-identity: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Enable TCP/IP config. Contains the configuration for the Tcp/Ip join
# mechanism. The Tcp/Ip join mechanism relies on one or more well known
# members. So when a new member wants to join a cluster, it will try to
# connect to one of the well known members. If it is able to connect, it
# will now about all members in the cluster and doesn't rely on these
# well known members anymore.
#
# cas.service-registry.stream.hazelcast.config.cluster.network.tcpip-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Whether WAN should be enabled.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Name of this replication group.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.replication-name: apereo-cas

# Type: java.util.List<org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# List of target clusters to be used for synchronization and
# replication.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
#     <li>{@code ACK_ON_RECEIPT}: ACK
# after WAN operation is received by the target cluster (without waiting
# the result of actual operation invocation).</li>
#     <li>{@code
# ACK_ON_OPERATION_COMPLETE}: Wait till the operation is complete on
# target cluster.</li>
# </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].acknowledge-type: ACK_ON_OPERATION_COMPLETE

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum amount of time, in milliseconds, to be waited before
# sending
# a batch of events in case batch.size is not reached.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].batch-maximum-delay-milliseconds: 1000

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum size of events that are sent to the target cluster in a single
# batch.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].batch-size: 500

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Sets the cluster name used as an endpoint group password for
# authentication
# on the target endpoint.
# If there is no separate
# publisher ID property defined, this cluster name
# will also be used
# as a WAN publisher ID. This ID is then used for
# identifying the
# publisher.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].cluster-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Strategy for checking the consistency of data between replicas.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].consistency-check-strategy: NONE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Comma separated list of endpoints in this replication group.
# IP
# addresses and ports of the cluster members for which the WAN
# replication is implemented. These endpoints are not necessarily
# the
# entire target cluster and WAN does not perform the discovery of other
# members in the target cluster. It only expects
# that these IP
# addresses (or at least some of them) are available.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].endpoints: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The number of threads that the replication executor will have. The
# executor is used to send WAN
# events to the endpoints and ideally you
# want to have one thread per endpoint. If this property is omitted
#
# and you have specified the endpoints property, this will be the case.
# If necessary you can manually define
# the number of threads that the
# executor will use. Once the executor has been initialized there is
# thread
# affinity between the discovered endpoints and the executor
# threads - all events for a single endpoint will
# go through a single
# executor thread, preserving event order. It is important to determine
# which number of
# executor threads is a good value. Failure to do so
# can lead to performance issues - either contention on a
# too small
# number of threads or wasted threads that will not be performing any
# work.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].executor-thread-count: 2

# Type: java.util.Map<String,Comparable>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The WAN publisher properties.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].properties: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Publisher class name for WAN replication.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].publisher-class-name: com.hazelcast.enterprise.wan.replication.WanBatchReplication

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Returns the publisher ID used for identifying the publisher.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].publisher-id: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# For huge clusters or high data mutation rates, you might need to
# increase the replication queue size.
# The default queue size for
# replication queues is 10,000. This means, if you have heavy
# put/update/remove
# rates, you might exceed the queue size so that the
# oldest, not yet replicated, updates might get
# lost.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].queue-capacity: 10000

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
# <li>{@code THROW_EXCEPTION}: Instruct
# WAN replication implementation to throw an exception and doesn't allow
# further processing.</li>
# <li>{@code DISCARD_AFTER_MUTATION}:
# Instruct WAN replication implementation to drop new events when WAN
# event queues are full.</li>
# <li>{@code
# THROW_EXCEPTION_ONLY_IF_REPLICATION_ACTIVE}: Similar to {@code
# THROW_EXCEPTION} but only throws exception when WAN replication is
# active.
# * Discards the new events if WAN replication is
# stopped.</li>
# </ul>
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].queue-full-behavior: THROW_EXCEPTION

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Time, in milliseconds, to be waited for the acknowledgment of a sent
# WAN event to target cluster.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].response-timeout-milliseconds: 60000

# Type: boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# When set to true, only the latest events (based on key) are selected
# and sent in a batch.
#
# cas.service-registry.stream.hazelcast.config.cluster.wan-replication.targets[].snapshot-enabled: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables compression when default java serialization is used.
#
# cas.service-registry.stream.hazelcast.config.core.enable-compression: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enable Jet configuration/service on the hazelcast instance. Hazelcast
# Jet is a distributed batch and stream processing system that can do
# stateful computations over massive amounts of data with consistent low
# latency. Jet service is required when executing SQL queries with the
# SQL service.
#
# cas.service-registry.stream.hazelcast.config.core.enable-jet: true

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables scripting from Management Center.
#
# cas.service-registry.stream.hazelcast.config.core.enable-management-center-scripting: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Hazelcast enterprise license key.
#
# cas.service-registry.stream.hazelcast.config.core.license-key: 

# Type: java.lang.String
# Module: cas-server-support-service-registry-stream-hazelcast
# Owner: org.apereo.cas.configuration.model.support.services.stream.hazelcast.StreamServicesHazelcastProperties
#
# Duration that indicates how long should items be kept in the hazelcast
# cache. Note that generally this number needs to be short as once an
# item is delivered to a target, it is explicitly removed from the
# cache/queue. This duration needs to be adjusted if the latency between
# the CAS nodes in the cluster is too large. Having too short a value
# will cause the record to expire before it reaches other members of the
# cluster.
#
# cas.service-registry.stream.hazelcast.duration: PT1M

# Type: java.lang.String
# Module: cas-server-support-service-registry-stream-kafka
# Owner: org.apereo.cas.configuration.model.support.services.stream.hazelcast.StreamServicesKafkaProperties
#
# Kafka bootstrapping server address (i.e. localhost:9092).
#
# cas.service-registry.stream.kafka.bootstrap-address: 

# Type: java.lang.String
# Module: cas-server-support-kafka-core
# Owner: org.apereo.cas.configuration.model.support.kafka.KafkaSingleTopicProperties
#
# Specify the final compression type for a given topic. This
# configuration accepts the standard compression codecs ({@code 'gzip',
# 'snappy', 'lz4', 'zstd'}). It additionally accepts 'uncompressed'
# which is equivalent to no compression; and 'producer' which means
# retain the original compression codec set by the producer.
#
# cas.service-registry.stream.kafka.topic.compression-type: gzip

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-kafka-core
# Owner: org.apereo.cas.configuration.model.support.kafka.KafkaSingleTopicProperties
#
# Additional configuration options, as pointed out by {@code
# TopicConfig}.
#
# cas.service-registry.stream.kafka.topic.config: 

# Type: java.lang.String
# Module: cas-server-support-kafka-core
# Owner: org.apereo.cas.configuration.model.support.kafka.KafkaSingleTopicProperties
#
# Set the name of the topic.
#
# cas.service-registry.stream.kafka.topic.name: 

# Type: java.lang.Integer
# Module: cas-server-support-kafka-core
# Owner: org.apereo.cas.configuration.model.support.kafka.KafkaSingleTopicProperties
#
# Set the number of partitions (default 1).
#
# cas.service-registry.stream.kafka.topic.partitions: 1

# Type: java.lang.Integer
# Module: cas-server-support-kafka-core
# Owner: org.apereo.cas.configuration.model.support.kafka.KafkaSingleTopicProperties
#
# Set the number of replicas (default 1).
#
# cas.service-registry.stream.kafka.topic.replicas: 1

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.SpringResourceProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.service-registry.templates.directory.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-support-yaml-service-registry
# Owner: org.apereo.cas.configuration.model.support.services.yaml.YamlServiceRegistryProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.service-registry.yaml.location: 

# Type: java.lang.Boolean
# Module: cas-server-support-yaml-service-registry
# Owner: org.apereo.cas.configuration.model.support.services.yaml.YamlServiceRegistryProperties
#
# Flag indicating whether a background watcher thread is enabled for the
# purposes of live reloading of service registry data changes from
# persistent data store.
#
# cas.service-registry.yaml.watcher-enabled: true

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because init-from-json setting is moved into the core namespace.
# Replace with: init-from-json setting is moved into the core namespace.
#
# 
#
# cas.service.registry.init-from-json: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Cookie settings are moved to a new cookie namespace under cas.session-replication.
# Replace with: Cookie settings are moved to a new cookie namespace under cas.session-replication.
#
# 
#
# cas.session-replication.session-cookie-name: 

# Type: java.lang.String
# Module: cas-server-support-notifications-slack
# Owner: org.apereo.cas.configuration.model.support.slack.SlackMessagingProperties
#
# To call a Slack Web API method to post messages, CAS needs to be
# initialized with a Slack API token. A token usually begins with {@code
# xoxb-} (bot token) or {@code xoxp-} (user token). You get them from
# each workspace that an app has been installed.
#
# cas.slack-messaging.api-token: 

# Type: java.lang.String
# Module: cas-server-support-notifications-slack
# Owner: org.apereo.cas.configuration.model.support.slack.SlackMessagingProperties
#
# The name of the user attribute that would then be used as the slack
# username. If the attribute is left blank, the default principal
# identifier is used. Note that in either case the final value is
# prefixed with {@code @}, but only if the prefix does not already
# exist. Multivalued attributes are supported.
#
# cas.slack-messaging.username-attribute: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.slo.SingleLogoutProperties
#
# Whether SLO callbacks should be done in an asynchronous manner via the
# HTTP client. When true, CAS will not wait for the operation to fully
# complete and will resume control to carry on.
#
# cas.slo.asynchronous: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.slo.SingleLogoutProperties
#
# Whether SLO should be entirely disabled globally for the CAS
# deployment.
#
# cas.slo.disabled: false

# Type: org.apereo.cas.configuration.model.core.slo.SingleLogoutProperties$LogoutPropagationTypes
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.slo.SingleLogoutProperties
#
# Logout propagation type determines how SLO requests will be sent to
# applications. This is specially applicable when SLO requests are
# processed using a front-channel mechanism.
# Available values are as
# follows:
# <ul><li>{@code AJAX}: This is the default propagation
# mechanism where logout requests
# are sent to applications using a
# AJAX call via {@code jsonp}.</li><li>{@code IFRAME}: The propagation
# mechanism will submit the logout request
# to the logout URL that is
# loaded inside an iframe. This is typically
# useful if the application
# receiving the logout request needs to generate HTML
# to process the
# logout request notification, specially if the application is a
# SPA.</li></ul>
#
# cas.slo.logout-propagation-type: AJAX

# Type: java.lang.String
# Module: cas-server-support-sms-clickatell
# Owner: org.apereo.cas.configuration.model.support.sms.ClickatellProperties
#
# URL to contact and send messages.
#
# cas.sms-provider.clickatell.server-url: https://platform.clickatell.com/messages

# Type: java.lang.String
# Module: cas-server-support-sms-clickatell
# Owner: org.apereo.cas.configuration.model.support.sms.ClickatellProperties
#
# Secure token used to establish a handshake with the service.
#
# cas.sms-provider.clickatell.token: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.GroovySmsProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.sms-provider.groovy.location: 

# Type: java.lang.String
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# API key used to authenticate to the mailjet service.
#
# cas.sms-provider.mailjet.api-key: 

# Type: java.lang.String
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# Bearer access token used to authenticate to the mailjet service.
# Mainly requires for the SMS integration.
#
# cas.sms-provider.mailjet.bearer-access-token: 

# Type: java.lang.Boolean
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# Indicates whether the mailjet integration should be run in sandbox
# mode. By setting this property to a {@code true} value, you will turn
# off the delivery of the message while still getting back the full
# range of error messages that could be related to your message
# processing. If the message is processed without error, the response
# will follow the normal response payload format, omitting only the
# {@code MessageID} and {@code MessageUUID}.
#
# cas.sms-provider.mailjet.sandbox-mode: false

# Type: java.lang.String
# Module: cas-server-support-mailjet
# Owner: org.apereo.cas.configuration.model.support.email.MailjetProperties
#
# Secret key used to authenticate to the mailjet service.
#
# cas.sms-provider.mailjet.secret-key: 

# Type: java.lang.String
# Module: cas-server-support-sms-nexmo
# Owner: org.apereo.cas.configuration.model.support.sms.NexmoProperties
#
# Nexmo API secret obtained from Nexmo.
#
# cas.sms-provider.nexmo.api-secret: 

# Type: java.lang.String
# Module: cas-server-support-sms-nexmo
# Owner: org.apereo.cas.configuration.model.support.sms.NexmoProperties
#
# Nexmo API token obtained from Nexmo.
#
# cas.sms-provider.nexmo.api-token: 

# Type: java.lang.String
# Module: cas-server-support-sms-nexmo
# Owner: org.apereo.cas.configuration.model.support.sms.NexmoProperties
#
# Nexmo Signature secret obtained from Nexmo.
#
# cas.sms-provider.nexmo.signature-secret: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.RestfulSmsProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.sms-provider.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.RestfulSmsProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.sms-provider.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.RestfulSmsProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.sms-provider.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.RestfulSmsProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.sms-provider.rest.method: GET

# Type: org.apereo.cas.configuration.model.support.sms.RestfulSmsProperties$RestfulSmsRequestStyles
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.RestfulSmsProperties
#
# Indicate the style and formatting of the SMS request paramerters and
# how they should be included and sent via REST.
# Available values are
# as follows:
# <ul><li>{@code QUERY_PARAMETERS}: This option will
# submit an SMS http request where
# the from, to, etc are passed as
# request query parameters.
# Only the message itself is included in the
# request body.</li><li>{@code REQUEST_BODY}: This option will pass all
# parameters in the body
# of the SMS http request as a JSON
# object.</li></ul>
#
# cas.sms-provider.rest.style: QUERY_PARAMETERS

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.sms.RestfulSmsProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.sms-provider.rest.url: 

# Type: java.lang.String
# Module: cas-server-support-sms-smsmode
# Owner: org.apereo.cas.configuration.model.support.sms.SmsModeProperties
#
# Secure token used to establish a handshake with the service.
#
# cas.sms-provider.sms-mode.access-token: 

# Type: java.lang.String
# Module: cas-server-support-sms-smsmode
# Owner: org.apereo.cas.configuration.model.support.sms.SmsModeProperties
#
# URL of the proxy (if defined).
#
# cas.sms-provider.sms-mode.proxy-url: 

# Type: java.lang.String
# Module: cas-server-support-sms-smsmode
# Owner: org.apereo.cas.configuration.model.support.sms.SmsModeProperties
#
# URL to contact and send messages (POST only).
#
# cas.sms-provider.sms-mode.url: https://rest.smsmode.com/sms/v1/messages

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Client execution timeout.
#
# cas.sms-provider.sns.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Connection timeout.
#
# cas.sms-provider.sns.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.sms-provider.sns.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.sms-provider.sns.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# AWS custom endpoint.
#
# cas.sms-provider.sns.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Local address.
#
# cas.sms-provider.sns.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Maximum connections setting.
#
# cas.sms-provider.sns.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# The maximum amount in USD that you are willing to spend to send the
# SMS message. <p> Amazon SNS will not send the message if it determines
# that doing so would incur a cost that exceeds the maximum price. This
# attribute has no effect if your month-to-date SMS costs have already
# exceeded the limit set for the MonthlySpendLimit attribute, which you
# set by using the SetSMSAttributes request. If you are sending the
# message to an Amazon SNS topic, the maximum price applies to each
# message delivery to each phone number that is subscribed to the topic.
#
# cas.sms-provider.sns.max-price: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Profile name to use.
#
# cas.sms-provider.sns.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Profile path.
#
# cas.sms-provider.sns.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.sms-provider.sns.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.sms-provider.sns.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.sms-provider.sns.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# AWS region used.
#
# cas.sms-provider.sns.region: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.sms-provider.sns.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# A custom ID that contains up to 11 alphanumeric characters, including
# at least one letter and no spaces. <p> The sender ID is displayed as
# the message sender on the receiving device. For example, you can use
# your business brand to make the message source easier to recognize.
# Support for sender IDs varies by country and/or region. For example,
# messages delivered to U.S. phone numbers will not display the sender
# ID. If you do not specify a sender ID, the message will display a long
# code as the sender ID in supported countries and regions. For
# countries or regions that require an alphabetic sender ID, the message
# displays NOTICE as the sender ID.
#
# cas.sms-provider.sns.sender-id: 

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# The type of message that you are sending. <ul> <li>Promotional -
# Noncritical messages, such as marketing messages. Amazon SNS optimizes
# the message delivery to incur the lowest cost.</li> <li>Transactional
# – Critical messages that support customer transactions, such as
# one-time passcodes for multi-factor authentication. Amazon SNS
# optimizes the message delivery to achieve the highest reliability.
# </li> </ul>
#
# cas.sms-provider.sns.sms-type: Transactional

# Type: java.lang.String
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Socket timeout.
#
# cas.sms-provider.sns.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-sms-aws-sns
# Owner: org.apereo.cas.configuration.model.support.sms.AmazonSnsProperties
#
# Flag that indicates whether to use reaper.
#
# cas.sms-provider.sns.use-reaper: false

# Type: java.lang.String
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# set API key value for the first API key authentication.
#
# cas.sms-provider.text-magic.api-key: 

# Type: java.lang.String
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# set API key prefix for the first API key authentication.
#
# cas.sms-provider.text-magic.api-key-prefix: 

# Type: java.lang.Integer
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# connect timeout (in milliseconds).
#
# cas.sms-provider.text-magic.connect-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# Check that whether debugging is enabled for this API client.
#
# cas.sms-provider.text-magic.debugging: false

# Type: java.lang.String
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# set password for the first HTTP basic authentication.
#
# cas.sms-provider.text-magic.password: 

# Type: java.lang.Integer
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# read timeout (in milliseconds).
#
# cas.sms-provider.text-magic.read-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# Secure token used to establish a handshake.
#
# cas.sms-provider.text-magic.token: 

# Type: java.lang.String
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# Set the User-Agent header's value (by adding to the default header
# map).
#
# cas.sms-provider.text-magic.user-agent: 

# Type: java.lang.String
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# Username authorized to use the service as the bind account.
#
# cas.sms-provider.text-magic.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# Should SSL connections be verified?
#
# cas.sms-provider.text-magic.verifying-ssl: true

# Type: java.lang.Integer
# Module: cas-server-support-sms-textmagic
# Owner: org.apereo.cas.configuration.model.support.sms.TextMagicProperties
#
# write timeout (in milliseconds).
#
# cas.sms-provider.text-magic.write-timeout: 0

# Type: java.lang.String
# Module: cas-server-support-twilio
# Owner: org.apereo.cas.configuration.model.support.sms.TwilioProperties
#
# Twilio account identifier used for authentication.
#
# cas.sms-provider.twilio.account-id: 

# Type: java.lang.Boolean
# Module: cas-server-support-twilio
# Owner: org.apereo.cas.configuration.model.support.sms.TwilioProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.sms-provider.twilio.enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-twilio
# Owner: org.apereo.cas.configuration.model.support.sms.TwilioProperties
#
# Controls whether Twilio support should also handle making phone calls.
#
# cas.sms-provider.twilio.phone-calls-enabled: false

# Type: java.lang.String
# Module: cas-server-support-twilio
# Owner: org.apereo.cas.configuration.model.support.sms.TwilioProperties
#
# Twilio secret token used for authentication.
#
# cas.sms-provider.twilio.token: 

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.spring.cloud.aws.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Client execution timeout.
#
# cas.spring.cloud.aws.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Connection timeout.
#
# cas.spring.cloud.aws.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Use access-key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Use secret key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.spring.cloud.aws.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.spring.cloud.aws.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.spring.cloud.aws.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.spring.cloud.aws.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.spring.cloud.aws.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.spring.cloud.aws.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.spring.cloud.aws.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.spring.cloud.aws.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Flag that indicates whether to drop tables on start up.
#
# cas.spring.cloud.aws.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# AWS custom endpoint.
#
# cas.spring.cloud.aws.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Local address.
#
# cas.spring.cloud.aws.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.spring.cloud.aws.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Maximum connections setting.
#
# cas.spring.cloud.aws.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.spring.cloud.aws.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Profile name to use.
#
# cas.spring.cloud.aws.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Profile path.
#
# cas.spring.cloud.aws.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Optionally specifies the proxy host to connect through.
#
# cas.spring.cloud.aws.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Optionally specifies the proxy password to connect through.
#
# cas.spring.cloud.aws.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Optionally specifies the proxy username to connect through.
#
# cas.spring.cloud.aws.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Read capacity.
#
# cas.spring.cloud.aws.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# AWS region used.
#
# cas.spring.cloud.aws.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.spring.cloud.aws.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Socket timeout.
#
# cas.spring.cloud.aws.dynamo-db.socket-timeout: 5000

# Type: java.lang.Integer
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Time offset.
#
# cas.spring.cloud.aws.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Flag that indicates whether to use reaper.
#
# cas.spring.cloud.aws.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Write capacity.
#
# cas.spring.cloud.aws.dynamo-db.write-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Bucket name that holds the settings.
#
# cas.spring.cloud.aws.s3.bucket-name: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Client execution timeout.
#
# cas.spring.cloud.aws.s3.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Connection timeout.
#
# cas.spring.cloud.aws.s3.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Use access-key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.s3.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Use secret key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.s3.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# AWS custom endpoint.
#
# cas.spring.cloud.aws.s3.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Local address.
#
# cas.spring.cloud.aws.s3.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Maximum connections setting.
#
# cas.spring.cloud.aws.s3.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Profile name to use.
#
# cas.spring.cloud.aws.s3.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Profile path.
#
# cas.spring.cloud.aws.s3.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Optionally specifies the proxy host to connect through.
#
# cas.spring.cloud.aws.s3.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Optionally specifies the proxy password to connect through.
#
# cas.spring.cloud.aws.s3.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Optionally specifies the proxy username to connect through.
#
# cas.spring.cloud.aws.s3.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# AWS region used.
#
# cas.spring.cloud.aws.s3.region: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.spring.cloud.aws.s3.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Socket timeout.
#
# cas.spring.cloud.aws.s3.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-aws-s3
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonS3
#
# Flag that indicates whether to use reaper.
#
# cas.spring.cloud.aws.s3.use-reaper: false

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Client execution timeout.
#
# cas.spring.cloud.aws.secrets-manager.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Connection timeout.
#
# cas.spring.cloud.aws.secrets-manager.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Use access-key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.secrets-manager.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Use secret key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.secrets-manager.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# AWS custom endpoint.
#
# cas.spring.cloud.aws.secrets-manager.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Local address.
#
# cas.spring.cloud.aws.secrets-manager.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Maximum connections setting.
#
# cas.spring.cloud.aws.secrets-manager.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Profile name to use.
#
# cas.spring.cloud.aws.secrets-manager.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Profile path.
#
# cas.spring.cloud.aws.secrets-manager.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Optionally specifies the proxy host to connect through.
#
# cas.spring.cloud.aws.secrets-manager.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Optionally specifies the proxy password to connect through.
#
# cas.spring.cloud.aws.secrets-manager.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Optionally specifies the proxy username to connect through.
#
# cas.spring.cloud.aws.secrets-manager.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# AWS region used.
#
# cas.spring.cloud.aws.secrets-manager.region: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.spring.cloud.aws.secrets-manager.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Socket timeout.
#
# cas.spring.cloud.aws.secrets-manager.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-aws-secretsmanager
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSecretsManager
#
# Flag that indicates whether to use reaper.
#
# cas.spring.cloud.aws.secrets-manager.use-reaper: false

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Client execution timeout.
#
# cas.spring.cloud.aws.ssm.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Connection timeout.
#
# cas.spring.cloud.aws.ssm.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Use access-key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.ssm.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Use secret key provided by AWS to authenticate.
#
# cas.spring.cloud.aws.ssm.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# AWS custom endpoint.
#
# cas.spring.cloud.aws.ssm.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Local address.
#
# cas.spring.cloud.aws.ssm.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Maximum connections setting.
#
# cas.spring.cloud.aws.ssm.max-connections: 10

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Profile name to use.
#
# cas.spring.cloud.aws.ssm.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Profile path.
#
# cas.spring.cloud.aws.ssm.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Optionally specifies the proxy host to connect through.
#
# cas.spring.cloud.aws.ssm.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Optionally specifies the proxy password to connect through.
#
# cas.spring.cloud.aws.ssm.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Optionally specifies the proxy username to connect through.
#
# cas.spring.cloud.aws.ssm.proxy-username: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# AWS region used.
#
# cas.spring.cloud.aws.ssm.region: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.spring.cloud.aws.ssm.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Socket timeout.
#
# cas.spring.cloud.aws.ssm.socket-timeout: 5000

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-aws-ssm
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonSystemsManagerParameterStore
#
# Flag that indicates whether to use reaper.
#
# cas.spring.cloud.aws.ssm.use-reaper: false

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.spring.cloud.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Client execution timeout.
#
# cas.spring.cloud.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Connection timeout.
#
# cas.spring.cloud.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Use access-key provided by AWS to authenticate.
#
# cas.spring.cloud.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Use secret key provided by AWS to authenticate.
#
# cas.spring.cloud.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.spring.cloud.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.spring.cloud.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.spring.cloud.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.spring.cloud.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.spring.cloud.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.spring.cloud.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.spring.cloud.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.spring.cloud.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Flag that indicates whether to drop tables on start up.
#
# cas.spring.cloud.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# AWS custom endpoint.
#
# cas.spring.cloud.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Local address.
#
# cas.spring.cloud.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.spring.cloud.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Maximum connections setting.
#
# cas.spring.cloud.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.spring.cloud.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Profile name to use.
#
# cas.spring.cloud.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Profile path.
#
# cas.spring.cloud.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Optionally specifies the proxy host to connect through.
#
# cas.spring.cloud.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Optionally specifies the proxy password to connect through.
#
# cas.spring.cloud.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Optionally specifies the proxy username to connect through.
#
# cas.spring.cloud.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Read capacity.
#
# cas.spring.cloud.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# AWS region used.
#
# cas.spring.cloud.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.spring.cloud.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Socket timeout.
#
# cas.spring.cloud.dynamo-db.socket-timeout: 5000

# Type: java.lang.Integer
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Time offset.
#
# cas.spring.cloud.dynamo-db.time-offset: 0

# Type: java.lang.Boolean
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Flag that indicates whether to use reaper.
#
# cas.spring.cloud.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-configuration-cloud-dynamodb
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.AmazonDynamoDb
#
# Write capacity.
#
# cas.spring.cloud.dynamo-db.write-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-jdbc
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Jdbc
#
# Driver class name.
#
# cas.spring.cloud.jdbc.driver-class: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-jdbc
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Jdbc
#
# Database password.
#
# cas.spring.cloud.jdbc.password: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-jdbc
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Jdbc
#
# SQL statement.
#
# cas.spring.cloud.jdbc.sql: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-jdbc
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Jdbc
#
# Database url.
#
# cas.spring.cloud.jdbc.url: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-jdbc
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Jdbc
#
# Database user.
#
# cas.spring.cloud.jdbc.user: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-mongo
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.MongoDb
#
# Mongodb URI.
#
# cas.spring.cloud.mongo.uri: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-rest
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Rest
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.spring.cloud.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-rest
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Rest
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.spring.cloud.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-configuration-cloud-rest
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Rest
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.spring.cloud.rest.headers: 

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-rest
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Rest
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.spring.cloud.rest.method: GET

# Type: java.lang.String
# Module: cas-server-support-configuration-cloud-rest
# Owner: org.apereo.cas.configuration.model.core.config.cloud.SpringCloudConfigurationProperties.Rest
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.spring.cloud.rest.url: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because This setting is moved into a services namespace.
# Replace with: This setting is moved into a services namespace.
#
# 
#
# cas.sso.allow-missing-service-parameter: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.sso.SingleSignOnProperties
#
# Flag that indicates whether to create SSO session on re-newed
# authentication event.
#
# cas.sso.create-sso-cookie-on-renew-authn: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.sso.SingleSignOnProperties
#
# Indicates whether CAS proxy authentication/tickets are supported by
# this server implementation.
#
# cas.sso.proxy-authn-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.sso.SingleSignOnProperties
#
# Indicates whether this server implementation should globally support
# CAS protocol authentication requests that are tagged with
# "renew=true".
#
# cas.sso.renew-authn-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.sso.SingleSignOnServicesProperties
#
# Flag that indicates whether to allow SSO session with a missing target
# service. <p> By default, CAS will present a generic success page if
# the initial authentication request does not identify the target
# application. In some cases, the ability to login to CAS without
# logging in to a particular service may be considered a misfeature
# because in practice, too few users and institutions are prepared to
# understand, brand, and support what is at best a fringe use case of
# logging in to CAS for the sake of establishing an SSO session without
# logging in to any CAS-reliant service.
#
# cas.sso.services.allow-missing-service-parameter: true

# Type: java.lang.String
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.sso.SingleSignOnServicesProperties
#
# A regular expression pattern that represents an application which must
# have established a session with CAS already before access to other
# applications can be allowed by CAS. This is the initial
# mandatory/required application with which the user must start before
# going anywhere else. Services that establish a session with CAS
# typically do so by receiving a service ticket from CAS.
#
# cas.sso.services.required-service-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-core-authentication
# Owner: org.apereo.cas.configuration.model.core.sso.SingleSignOnProperties
#
# Indicate whether single sign-on should be turned on and supported
# globally for the server.
#
# cas.sso.sso-enabled: true

# Type: java.io.File
# Module: cas-server-core-configuration
# Owner: org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationProperties
#
# Describes a directory path where CAS configuration may be found.
#
# cas.standalone.configuration-directory: 

# Type: java.io.File
# Module: cas-server-core-configuration
# Owner: org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationProperties
#
# Describes a file path where that contains the CAS properties in a
# single file.
#
# cas.standalone.configuration-file: 

# Type: java.lang.String
# Module: cas-server-core-configuration
# Owner: org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationSecurityProperties
#
# Algorithm to use when deciphering settings. Default algorithm is
# {@code PBEWithMD5AndTripleDES}.
#
# cas.standalone.configuration-security.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-configuration
# Owner: org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationSecurityProperties
#
# An initialization vector is required for {@code PBEWithDigestAndAES}
# algorithms that aren't BouncyCastle. Enabling an initialization vector
# will break passwords encrypted without one. Toggling this value will
# make pre-existing non-{@code PBEWithDigestAndAES} encrypted passwords
# not work. For non-BouncyCastle {@code PBEWithDigestAndAES} algorithms
# that require an initialization vector, one will be used regardless of
# this setting since backwards compatibility with existing passwords
# using those algorithms is not an issue (since they didn't work in
# previous CAS versions). The default value is false so as not to break
# existing encrypted passwords. In general the use of an initialization
# vector will increase the encrypted text's length.
#
# cas.standalone.configuration-security.initialization-vector: 

# Type: java.lang.Long
# Module: cas-server-core-configuration
# Owner: org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationSecurityProperties
#
# Total number of iterations to use when deciphering settings. Default
# value comes from Jasypt {@value
# StandardPBEByteEncryptor#DEFAULT_KEY_OBTENTION_ITERATIONS}
#
# cas.standalone.configuration-security.iterations: 0

# Type: java.lang.String
# Module: cas-server-core-configuration
# Owner: org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationSecurityProperties
#
# Security provider to use when deciphering settings. Leave blank for
# Java, {@code BC} for BouncyCastle.
#
# cas.standalone.configuration-security.provider: 

# Type: java.lang.String
# Module: cas-server-core-configuration
# Owner: org.apereo.cas.configuration.model.core.config.standalone.StandaloneConfigurationSecurityProperties
#
# Secret key/password to use when deciphering settings.
#
# cas.standalone.configuration-security.psw: 

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# A regular expression pattern that indicates the set of allowed IP
# addresses, when {@link #isPinToSession()} is configured. In the event
# that there is a mismatch between the cookie IP address and the current
# request-provided IP address (i.e. network switches, VPN, etc), the
# cookie can still be considered valid if the new IP address matches the
# pattern specified here.
#
# cas.tgc.allowed-ip-addresses-pattern: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.tgc.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.tgc.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.tgc.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.tgc.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.tgc.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.tgc.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.tgc.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.tgc.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.tgc.domain: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# When set to {@code true} and assuming {@link #isPinToSession()} is
# also {@code true}, client sessions (using the client IP address) are
# geo-located using a geolocation service when/if configured. The
# resulting session is either pinned to the client geolocation, or the
# default client address.
#
# cas.tgc.geo-locate-client-session: false

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.tgc.http-only: true

# Type: java.lang.Integer
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.tgc.max-age: -1

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.tgc.name: 

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.tgc.path: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# When generating cookie values, determine whether the value should be
# compounded and signed with the properties of the current session, such
# as IP address, user-agent, etc.
#
# cas.tgc.pin-to-session: true

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# If remember-me is enabled, specifies the maximum age of the cookie.
#
# cas.tgc.remember-me-max-age: P14D

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.tgc.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.TicketGrantingCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.tgc.secure: true

# Type: java.lang.String
# Module: cas-server-support-themes
# Owner: org.apereo.cas.configuration.model.support.themes.ThemeProperties
#
# The default theme name of this CAS deployment. The default theme file
# {@code cas-theme-default.properties} can be modified and extended by
# the theme file {@code cas-theme-custom.properties}.
#
# cas.theme.default-theme-name: cas-theme-default

# Type: java.lang.String
# Module: cas-server-support-themes
# Owner: org.apereo.cas.configuration.model.support.themes.ThemeProperties
#
# The parameter name used to switch themes.
#
# cas.theme.param-name: theme

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.crypto.alg: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key is a JWT whose length is defined by the encryption
# key size setting.
#
# cas.ticket.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtCryptoProperties
#
# The encryption key size.
#
# cas.ticket.crypto.encryption.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionJwtSigningJwtCryptographyProperties
#
# Control the cipher sequence of operations. The accepted values are:
# <ul> <li>{@code ENCRYPT_AND_SIGN}: Encrypt the value first, and then
# sign.</li> <li>{@code SIGN_AND_ENCRYPT}: Sign the value first, and
# then encrypt.</li> </ul>
#
# cas.ticket.crypto.strategy-type: ENCRYPT_AND_SIGN

# Type: java.lang.Long
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ProxyGrantingTicketProperties
#
# Maximum length of the proxy granting ticket, when generating one.
#
# cas.ticket.pgt.max-length: 50

# Type: java.lang.Long
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ProxyTicketProperties
#
# Number of uses allowed.
#
# cas.ticket.pt.number-of-uses: 1

# Type: java.lang.Long
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ProxyTicketProperties
#
# Number of seconds after which this ticket becomes invalid.
#
# cas.ticket.pt.time-to-kill-in-seconds: 10

# Type: java.lang.String
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Query option consistency level. The consistency level set through this
# method will be use for queries that don't explicitly have a
# consistency level. Accepted values are:{@code ALL, ANY, EACH_QUORUM,
# LOCAL_ONE, LOCAL_QUORUM, LOCAL_SERIAL, ONE, QUORUM, SERIAL, THREE,
# TWO}.
#
# cas.ticket.registry.cassandra.consistency-level: LOCAL_QUORUM

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# The list of contact points to use for the new cluster. Each contact
# point should be defined using the syntax {@code address:port}.
#
# cas.ticket.registry.cassandra.contact-points: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.cassandra.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.cassandra.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.cassandra.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.cassandra.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.cassandra.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.cassandra.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.cassandra.crypto.signing.key-size: 512

# Type: java.lang.Boolean
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.ticket.registry.cassandra.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Keyspace address to use where the cluster would connect.
#
# cas.ticket.registry.cassandra.keyspace: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Used by a DC-ware round-robin load balancing policy. This policy
# provides round-robin queries over the node of the local data center.
# It also includes in the query plans returned a configurable number of
# hosts in the remote data centers, but those are always tried after the
# local nodes. In other words, this policy guarantees that no host in a
# remote data center will be queried unless no host in the local data
# center can be reached.
#
# cas.ticket.registry.cassandra.local-dc: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Password to bind and establish a connection to cassandra.
#
# cas.ticket.registry.cassandra.password: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Query option serial consistency level. The serial consistency level
# set through this method will be use for queries that don't explicitly
# have a serial consistency level. Accepted values are:{@code ALL, ANY,
# EACH_QUORUM, LOCAL_ONE, LOCAL_QUORUM, LOCAL_SERIAL, ONE, QUORUM,
# SERIAL, THREE, TWO}.
#
# cas.ticket.registry.cassandra.serial-consistency-level: LOCAL_SERIAL

# Type: java.lang.String[]
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# The cipher suites to use, or empty/null to use the default ones. Note
# that host name validation will always be done using HTTPS algorithm.
#
# cas.ticket.registry.cassandra.ssl-cipher-suites: 

# Type: java.lang.String[]
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Set the protocol versions enabled for use on this engine. Once the
# setting is set, only protocols listed in the protocols parameter are
# enabled for use.
#
# cas.ticket.registry.cassandra.ssl-protocols: 

# Type: java.lang.String
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# The request timeout. This defines how long the driver will wait for a
# given Cassandra node to answer a query.
#
# cas.ticket.registry.cassandra.timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-cassandra-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cassandra.ticketregistry.CassandraTicketRegistryProperties
#
# Username to bind and establish a connection to cassandra.
#
# cas.ticket.registry.cassandra.username: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A cron-like expression, extending the usual UN*X definition to include
# triggers on the second, minute, hour, day of month, month, and day of
# week. For example, {@code 0 * * * * MON-FRI} means once per minute on
# weekdays (at the top of the minute - the 0th second) or {@code 0 0 0 *
# * *} means every day at midnight. * Note that when cron expressions
# are defined, the start delay and repeat interval settings are must be
# removed and set to blank.
#
# cas.ticket.registry.cleaner.schedule.cron-expression: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# A time zone for which the cron expression will be resolved. By
# default, this attribute is empty (i.e. the scheduler's time zone will
# be used).
#
# cas.ticket.registry.cleaner.schedule.cron-time-zone: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Whether scheduler should be enabled to schedule the job to run.
#
# cas.ticket.registry.cleaner.schedule.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# Overrides {@link SchedulingProperties#enabled} property value of true
# if this property does not match hostname of CAS server. This can be
# useful if deploying CAS with an image in a statefulset where all names
# are predictable but where having different configurations for
# different servers is hard. The value can be an exact hostname or a
# regular expression that will be used to match the hostname.
#
# cas.ticket.registry.cleaner.schedule.enabled-on-host: .*

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a repeat interval of re-loading data for a
# data store implementation. This is the timeout between consecutive
# job’s executions.
#
# cas.ticket.registry.cleaner.schedule.repeat-interval: PT2M

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.quartz.SchedulingProperties
#
# String representation of a start delay of loading data for a data
# store implementation. This is the delay between scheduler startup and
# first job’s execution
#
# cas.ticket.registry.cleaner.schedule.start-delay: PT15S

# Type: java.lang.Boolean
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.registry.TicketRegistryCoreProperties
#
# When set to true, registry operations will begin to support
# distributed locking for ticket operations. If the registry itself
# supports distributed locking, such as JDBC or Redis, then the lock
# implementation will defer to that option. Otherwise the default
# locking solution will be specific to a CAS server node, until replaced
# with a lock implementation or different locking option separate from
# the registry technology itself.
#
# cas.ticket.registry.core.enable-locking: true

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.registry.TicketRegistryCoreProperties
#
# Identifier for this CAS server node that tags the sender/receiver in
# the queue and avoid processing of inbound calls. If left blank, an
# identifier is generated automatically and kept in memory.
#
# cas.ticket.registry.core.queue-identifier: 

# Type: java.lang.Boolean
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Whether telemetry should be enabled by default. Sets the flag to
# enable client telemetry which will periodically collect database
# operations aggregation statistics, system information like cpu/memory
# and send it to cosmos monitoring service, which will be helpful during
# debugging.
#
# cas.ticket.registry.cosmos-db.allow-telemetry: false

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Document Db consistency level. Azure Cosmos DB is designed from the
# ground up with global distribution in mind for every data model. It is
# designed to offer predictable low latency guarantees, a 99.99%
# availability SLA, and multiple well-defined relaxed consistency
# models. Currently, Azure Cosmos DB provides five consistency levels:
# strong, bounded-staleness, session, consistent prefix, and eventual.
# Besides strong and eventual consistency models commonly offered by
# distributed databases, Azure Cosmos DB offers three more carefully
# codified and operationalized consistency models, and has validated
# their usefulness against real world use cases. These are the bounded
# staleness, session, and consistent prefix consistency levels.
# Collectively these five consistency levels enable you to make
# well-reasoned trade-offs between consistency, availability, and
# latency. Accepted values are: <ul> <li>{@code STRONG}:
# Linearizability</li> <li>{@code SESSION}: Consistent Prefix. Monotonic
# reads, monotonic writes, read-your-writes, write-follows-reads</li>
# <li>{@code EVENTUAL}: Out of order reads</li> <li>{@code
# BOUNDED_STALENESS}: Consistent Prefix. Reads lag behind writes by k
# prefixes or t interval</li> <li>{@code CONSISTENT_PREFIX}: Updates
# returned are some prefix of all the updates, with no gaps</li> </ul>
#
# cas.ticket.registry.cosmos-db.consistency-level: SESSION

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.cosmos-db.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.cosmos-db.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.cosmos-db.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.cosmos-db.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.cosmos-db.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.cosmos-db.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.cosmos-db.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Database name.
#
# cas.ticket.registry.cosmos-db.database: 

# Type: java.lang.Integer
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# The max auto scale throughput.
#
# cas.ticket.registry.cosmos-db.database-throughput: 4000

# Type: java.lang.Boolean
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Sets the flag to enable endpoint discovery for geo-replicated database
# accounts. When EnableEndpointDiscovery is true, the SDK will
# automatically discover the current write and read regions to ensure
# requests are sent to the correct region based on the capability of the
# region and the user's preference.
#
# cas.ticket.registry.cosmos-db.endpoint-discovery-enabled: true

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Specifies the supported indexing modes in the Azure Cosmos DB database
# service. Accepted values are: <ul> <li>{@code CONSISTENT}: Index is
# updated synchronously with a create or update operation. With
# consistent indexing, query behavior is the same as the default
# consistency level for the collection. The index is always kept up to
# date with the data.</li> <li>{@code LAZY}: Index is updated
# asynchronously with respect to a create or update operation. With lazy
# indexing, queries are eventually consistent. The index is updated when
# the collection is idle. </li> <li>{@code NONE}: No index is provided.
# Setting IndexingMode to "None" drops the index. Use this if you don't
# want to maintain the index for a document collection, to save the
# storage cost or improve the write throughput. Your queries will
# degenerate to scans of the entire collection. </li> </ul>
#
# cas.ticket.registry.cosmos-db.indexing-mode: NONE

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Document Db master key.
#
# cas.ticket.registry.cosmos-db.key: 

# Type: java.lang.Integer
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Sets the maximum number of retries in the case where the request fails
# because the service has applied rate limiting on the client. <p> When
# a client is sending requests faster than the allowed rate, the service
# will return HttpStatusCode 429 (Too Many Request) to throttle the
# client. The current implementation in the SDK will then wait for the
# amount of time the service tells it to wait and retry after the time
# has elapsed. <p> The default value is 4. This means in the case where
# the request is throttled, the same request will be issued for a
# maximum of 5 times to the server before an error is returned to the
# application.
#
# cas.ticket.registry.cosmos-db.max-retry-attempts-on-throttled-requests: 4

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Sets the maximum retry time in seconds. When a request fails due to a
# throttle error, the service sends back a response that contains a
# value indicating the client should not retry before the time period
# has elapsed (Retry-After). The MaxRetryWaitTime flag allows the
# application to set a maximum wait time for all retry attempts. If the
# cumulative wait time exceeds the MaxRetryWaitTime, the SDK will stop
# retrying and return the error to the application.
#
# cas.ticket.registry.cosmos-db.max-retry-wait-time: PT10S

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Sets the preferred regions for geo-replicated database accounts. For
# example, "East US" as the preferred region. When
# EnableEndpointDiscovery is true and PreferredRegions is non-empty, the
# SDK will prefer to use the regions in the container in the order they
# are specified to perform operations.
#
# cas.ticket.registry.cosmos-db.preferred-regions: 

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Document Db host address (i.e. https://localhost:8081).
#
# cas.ticket.registry.cosmos-db.uri: 

# Type: java.lang.String
# Module: cas-server-support-cosmosdb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.cosmosdb.CosmosDbTicketRegistryProperties
#
# Sets the value of the user-agent suffix.
#
# cas.ticket.registry.cosmos-db.user-agent-suffix: 

# Type: org.apereo.cas.configuration.model.support.dynamodb.AbstractDynamoDbProperties$BillingMode
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Billing mode specifies how you are charged for read and write
# throughput and how you manage capacity.
# Available values are as
# follows:
# <ul><li>{@code PROVISIONED}: Provisioned mode means that
# you specify the number of reads
# and writes per second that you
# expect your
# application to use.
# Provisioned mode is a good option
# if any of the following are true:
# 
# <ul>
#  <li>You have
# predictable application traffic.</li>
#  <li>You run applications
# whose traffic is consistent or ramps gradually.</li>
#  <li>You can
# forecast capacity requirements to control costs.</li>
# </ul>
# You
# can use auto scaling to automatically adjust
# capacity based on the
# specified utilization rate
# to ensure application performance while
# reducing costs.</li><li>{@code PAY_PER_REQUEST}: Pay-per-request or
# on-demand billing means that you're charged for only the read/write
#
# requests that you use.
# On-demand mode is a good option if any of the
# following are true:
# <ul>
#     <li>You create new tables with
# unknown workloads.</li>
#     <li>You have unpredictable application
# traffic.</li>
#     <li>You prefer the ease of paying for only what
# you use.</li>
# </ul>
# Tables using on-demand mode support all
# DynamoDB
# features (such as encryption at rest, point-in-time
# recovery, global
# tables, and so on) with the exception of auto
# scaling,
# which is not applicable with this mode.</li></ul>
#
# cas.ticket.registry.dynamo-db.billing-mode: PROVISIONED

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Client execution timeout.
#
# cas.ticket.registry.dynamo-db.client-execution-timeout: 10000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Connection timeout.
#
# cas.ticket.registry.dynamo-db.connection-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Use access-key provided by AWS to authenticate.
#
# cas.ticket.registry.dynamo-db.credential-access-key: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Use secret key provided by AWS to authenticate.
#
# cas.ticket.registry.dynamo-db.credential-secret-key: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.dynamo-db.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.dynamo-db.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.dynamo-db.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.dynamo-db.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.dynamo-db.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.dynamo-db.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.dynamo-db.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection timeout, calculated in milliseconds.
#
# cas.ticket.registry.dynamo-db.dax.connect-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# How long should connections be kept alive, calculated in milliseconds.
#
# cas.ticket.registry.dynamo-db.dax.connection-ttl: PT0S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Connection idle timeout, calculated in milliseconds.
#
# cas.ticket.registry.dynamo-db.dax.idle-timeout: PT15S

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Determines the maximum number of concurrent requests that can be made
# to the DAX cluster.
#
# cas.ticket.registry.dynamo-db.dax.max-concurrency: 1000

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of read retry attempts.
#
# cas.ticket.registry.dynamo-db.dax.read-retries: 2

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Request execution timeout, calculated in milliseconds.
#
# cas.ticket.registry.dynamo-db.dax.request-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Cluster url. For example, {@code
# dax://my-cluster.l6fzcv.dax-clusters.us-east-1.amazonaws.com}.
#
# cas.ticket.registry.dynamo-db.dax.url: 

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-core
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbDaxProperties
#
# Number of write retry attempts.
#
# cas.ticket.registry.dynamo-db.dax.write-retries: 2

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Flag that indicates whether to drop tables on start up.
#
# cas.ticket.registry.dynamo-db.drop-tables-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# AWS custom endpoint.
#
# cas.ticket.registry.dynamo-db.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Local address.
#
# cas.ticket.registry.dynamo-db.local-address: 

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Indicates that the database instance is local to the deployment that
# does not require or use any credentials or other configuration other
# than host and region. This is mostly used during development and
# testing.
#
# cas.ticket.registry.dynamo-db.local-instance: false

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Maximum connections setting.
#
# cas.ticket.registry.dynamo-db.max-connections: 10

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Flag that indicates whether to prevent CAS from creating tables.
#
# cas.ticket.registry.dynamo-db.prevent-table-creation-on-startup: false

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Profile name to use.
#
# cas.ticket.registry.dynamo-db.profile-name: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Profile path.
#
# cas.ticket.registry.dynamo-db.profile-path: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# The table name used and created by CAS to hold proxy ticket granting
# tickets in DynamoDb.
#
# cas.ticket.registry.dynamo-db.proxy-granting-tickets-table-name: proxyGrantingTicketsTable

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Optionally specifies the proxy host to connect through.
#
# cas.ticket.registry.dynamo-db.proxy-host: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Optionally specifies the proxy password to connect through.
#
# cas.ticket.registry.dynamo-db.proxy-password: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# The table name used and created by CAS to hold proxy tickets in
# DynamoDb.
#
# cas.ticket.registry.dynamo-db.proxy-tickets-table-name: proxyTicketsTable

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Optionally specifies the proxy username to connect through.
#
# cas.ticket.registry.dynamo-db.proxy-username: 

# Type: java.lang.Long
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Read capacity.
#
# cas.ticket.registry.dynamo-db.read-capacity: 10

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# AWS region used.
#
# cas.ticket.registry.dynamo-db.region: 

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Outline the requested retry mode. Accepted values are {@code STANDARD,
# LEGACY}.
#
# cas.ticket.registry.dynamo-db.retry-mode: STANDARD

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# The table name used and created by CAS to hold service tickets in
# DynamoDb.
#
# cas.ticket.registry.dynamo-db.service-tickets-table-name: serviceTicketsTable

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Socket timeout.
#
# cas.ticket.registry.dynamo-db.socket-timeout: 5000

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# The table name used and created by CAS to hold ticket granting tickets
# in DynamoDb.
#
# cas.ticket.registry.dynamo-db.ticket-granting-tickets-table-name: ticketGrantingTicketsTable

# Type: java.lang.Integer
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Time offset.
#
# cas.ticket.registry.dynamo-db.time-offset: 0

# Type: java.lang.String
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# The table name used and created by CAS to hold transient session
# ticket tickets in DynamoDb.
#
# cas.ticket.registry.dynamo-db.transient-session-tickets-table-name: transientSessionTicketsTable

# Type: java.lang.Boolean
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Flag that indicates whether to use reaper.
#
# cas.ticket.registry.dynamo-db.use-reaper: false

# Type: java.lang.Long
# Module: cas-server-support-dynamodb-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.dynamodb.DynamoDbTicketRegistryProperties
#
# Write capacity.
#
# cas.ticket.registry.dynamo-db.write-capacity: 10

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.google-cloud-firestore.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.google-cloud-firestore.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.google-cloud-firestore.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.google-cloud-firestore.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.google-cloud-firestore.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.google-cloud-firestore.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.google-cloud-firestore.crypto.signing.key-size: 512

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports both synchronous and asynchronous backups. By
# default, backup operations are synchronous. In this case, backup
# operations block operations until backups are successfully copied to
# backup members (or deleted from backup members in case of remove) and
# acknowledgements are received. Therefore, backups are updated before a
# put operation is completed, provided that the cluster is stable.
# Asynchronous backups, on the other hand, do not block operations. They
# are fire and forget and do not require acknowledgements; the backup
# operations are performed at some point in time.
#
# cas.ticket.registry.hazelcast.cluster.core.async-backup-count: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Used when replication is turned on with {@link #isReplicated()}. <p>
# If a new member joins the cluster, there are two ways you can handle
# the initial provisioning that is executed to replicate all existing
# values to the new member. Each involves how you configure the async
# fill up. <ul> <li>First, you can configure async fill up to true,
# which does not block reads while the fill up operation is underway.
# That way, you have immediate access on the new member, but it will
# take time until all the values are eventually accessible. Not yet
# replicated values are returned as non-existing (null). </li>
# <li>Second, you can configure for a synchronous initial fill up (by
# configuring the async fill up to false), which blocks every read or
# write access to the map until the fill up operation is finished. Use
# this with caution since it might block your application from
# operating.</li> </ul>
#
# cas.ticket.registry.hazelcast.cluster.core.async-fillup: true

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# To provide data safety, Hazelcast allows you to specify the number of
# backup copies you want to have. That way, data on a cluster member
# will be copied onto other member(s). To create synchronous backups,
# select the number of backup copies. When this count is 1, a map entry
# will have its backup on one other member in the cluster. If you set it
# to 2, then a map entry will have its backup on two other members. You
# can set it to 0 if you do not want your entries to be backed up, e.g.,
# if performance is more important than backing up. The maximum value
# for the backup count is 6. Sync backup operations have a blocking cost
# which may lead to latency issues.
#
# cas.ticket.registry.hazelcast.cluster.core.backup-count: 1

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# CP Subsystem is a component of a Hazelcast cluster that builds a
# strongly consistent layer for a set of distributed data structures.
# Its data structures are CP with respect to the CAP principle, i.e.,
# they always maintain linearizability and prefer consistency over
# availability during network partitions. Besides network partitions, CP
# Subsystem withstands server and client failures. All members of a
# Hazelcast cluster do not necessarily take part in CP Subsystem. The
# number of Hazelcast members that take part in CP Subsystem is
# specified here. CP Subsystem must have at least 3 CP members.
#
# cas.ticket.registry.hazelcast.cluster.core.cp-member-count: 0

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports policy-based eviction for distributed maps.
# Currently supported policies are LRU (Least Recently Used) and LFU
# (Least Frequently Used) and NONE. See <a
# href="http://docs.hazelcast.org/docs/latest-development/manual/html/Di
# stributed_Data_Structures/Map/Map_Eviction.html">this</a> for more
# info.
#
# cas.ticket.registry.hazelcast.cluster.core.eviction-policy: LRU

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# The instance name.
#
# cas.ticket.registry.hazelcast.cluster.core.instance-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast has a flexible logging configuration and doesn't depend on
# any logging framework except JDK logging. It has in-built adaptors for
# a number of logging frameworks and also supports custom loggers by
# providing logging interfaces. To use built-in adaptors you should set
# this setting to one of predefined types below. <ul> <li>{@code jdk}:
# JDK logging</li> <li>{@code log4j}: Log4j</li> <li>{@code slf4j}:
# Slf4j</li> <li>{@code none}: Disable logging</li> </ul>
#
# cas.ticket.registry.hazelcast.cluster.core.logging-type: slf4j

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Define how data items in Hazelcast maps are merged together from
# source to destination. By default, merges map entries from source to
# destination if they don't exist in the destination map. Accepted
# values are: <ul> <li>{@code PUT_IF_ABSENT}: Merges data structure
# entries from source to destination if they don't exist in the
# destination data structure.</li> <li>{@code HIGHER_HITS}: * Merges
# data structure entries from source to destination data structure if
# the source entry has more hits than the destination one.</li>
# <li>{@code DISCARD}: Merges only entries from the destination data
# structure and discards all entries from the source data structure.
# </li> <li>{@code PASS_THROUGH}: Merges data structure entries from
# source to destination directly unless the merging entry is null</li>
# <li>{@code EXPIRATION_TIME}: Merges data structure entries from source
# to destination data structure if the source entry will expire later
# than the destination entry. This policy can only be used if the clocks
# of the nodes are in sync. </li> <li>{@code LATEST_UPDATE}: Merges data
# structure entries from source to destination data structure if the
# source entry was updated more frequently than the destination entry.
# This policy can only be used if the clocks of the nodes are in sync.
# </li> <li>{@code LATEST_ACCESS}: Merges data structure entries from
# source to destination data structure if the source entry has been
# accessed more recently than the destination entry. This policy can
# only be used if the clocks of the nodes are in sync.</li> </ul>
#
# cas.ticket.registry.hazelcast.cluster.core.map-merge-policy: PUT_IF_ABSENT

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Max timeout of heartbeat in seconds for a node to assume it is dead.
#
# cas.ticket.registry.hazelcast.cluster.core.max-no-heartbeat-seconds: 300

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Sets the maximum size of the map.
#
# cas.ticket.registry.hazelcast.cluster.core.max-size: 85

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# <ul> <li>{@code FREE_HEAP_PERCENTAGE}: Policy based on minimum free
# JVM heap memory percentage per JVM.</li> <li>{@code FREE_HEAP_SIZE}:
# Policy based on minimum free JVM heap memory in megabytes per
# JVM.</li> <li>{@code FREE_NATIVE_MEMORY_PERCENTAGE}: Policy based on
# minimum free native memory percentage per Hazelcast instance.</li>
# <li>{@code FREE_NATIVE_MEMORY_SIZE}: Policy based on minimum free
# native memory in megabytes per Hazelcast instance.</li> <li>{@code
# PER_NODE}: Policy based on maximum number of entries stored per data
# structure (map, cache etc) on each Hazelcast instance.</li> <li>{@code
# PER_PARTITION}: Policy based on maximum number of entries stored per
# data structure (map, cache etc) on each partition.</li> <li>{@code
# USED_HEAP_PERCENTAGE}: Policy based on maximum used JVM heap memory
# percentage per data structure (map, cache etc) on each Hazelcast
# instance .</li> <li>{@code USED_HEAP_SIZE}: Policy based on maximum
# used JVM heap memory in megabytes per data structure (map, cache etc)
# on each Hazelcast instance.</li> <li>{@code
# USED_NATIVE_MEMORY_PERCENTAGE}: Policy based on maximum used native
# memory percentage per data structure (map, cache etc) on each
# Hazelcast instance.</li> <li>{@code USED_NATIVE_MEMORY_SIZE}: Policy
# based on maximum used native memory in megabytes per data structure
# (map, cache etc) on each Hazelcast instance .</li> </ul>
#
# cas.ticket.registry.hazelcast.cluster.core.max-size-policy: USED_HEAP_PERCENTAGE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# With {@code PartitionGroupConfig}, you can control how primary and
# backup partitions are mapped to physical Members. Hazelcast will
# always place partitions on different partition groups so as to provide
# redundancy. Accepted value are: {@code PER_MEMBER, HOST_AWARE, CUSTOM,
# ZONE_AWARE, SPI}. In all cases a partition will never be created on
# the same group. If there are more partitions defined than there are
# partition groups, then only those partitions, up to the number of
# partition groups, will be created. For example, if you define 2
# backups, then with the primary, that makes 3. If you have only two
# partition groups only two will be created. <ul> <li>{@code}PER_MEMBER
# Partition Groups}: This is the default partition scheme and is used if
# no other scheme is defined. Each Member is in a group of its own.</li>
# <li>{@code}HOST_AWARE Partition Groups}: In this scheme, a group
# corresponds to a host, based on its IP address. Partitions will not be
# written to any other members on the same host. This scheme provides
# good redundancy when multiple instances are being run on the same
# host.</li> <li>{@code}CUSTOM Partition Groups}: In this scheme, IP
# addresses, or IP address ranges, are allocated to groups. Partitions
# are not written to the same group. This is very useful for ensuring
# partitions are written to different racks or even availability
# zones.</li> <li>{@code}ZONE_AWARE Partition Groups}: In this scheme,
# groups are allocated according to the metadata provided by Discovery
# SPI Partitions are not written to the same group. This is very useful
# for ensuring partitions are written to availability zones or different
# racks without providing the IP addresses to the config ahead.</li>
# <li>{@code}SPI Partition Groups}: In this scheme, groups are allocated
# according to the implementation provided by Discovery SPI.</li> </ul>
#
# cas.ticket.registry.hazelcast.cluster.core.partition-member-group-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# A Replicated Map is a distributed key-value data structure where the
# data is replicated to all members in the cluster. It provides full
# replication of entries to all members for high speed access. A
# Replicated Map does not partition data (it does not spread data to
# different cluster members); instead, it replicates the data to all
# members. Replication leads to higher memory consumption. However, a
# Replicated Map has faster read and write access since the data is
# available on all members. Writes could take place on local/remote
# members in order to provide write-order, eventually being replicated
# to all other members. <br><p> If you have a large cluster or very high
# occurrences of updates, the Replicated Map may not scale linearly as
# expected since it has to replicate update operations to all members in
# the cluster. Since the replication of updates is performed in an
# asynchronous manner, Hazelcast recommends you enable back pressure in
# case your system has high occurrences of updates. <p> Note that
# Replicated Map does not guarantee eventual consistency because there
# are some edge cases that fail to provide consistency. <br><p>
# Replicated Map uses the internal partition system of Hazelcast in
# order to serialize updates happening on the same key at the same time.
# This happens by sending updates of the same key to the same Hazelcast
# member in the cluster. <br><p> Due to the asynchronous nature of
# replication, a Hazelcast member could die before successfully
# replicating a "write" operation to other members after sending the
# "write completed" response to its caller during the write process. In
# this scenario, Hazelcast’s internal partition system promotes one of
# the replicas of the partition as the primary one. The new primary
# partition does not have the latest "write" since the dead member could
# not successfully replicate the update.
#
# cas.ticket.registry.hazelcast.cluster.core.replicated: false

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Connection timeout in seconds for the TCP/IP config and members
# joining the cluster.
#
# cas.ticket.registry.hazelcast.cluster.core.timeout: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS access key.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.access-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# ECS cluster short name or ARN; default is the current cluster.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.cluster: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# The maximum amount of time Hazelcast will try to connect to a well
# known member before giving up. Setting this value too low could mean
# that a member is not able to connect to a cluster. Setting the value
# too high means that member startup could slow down because of longer
# timeouts (for example, when a well known member is not up). Increasing
# this value is recommended if you have many IPs listed and the members
# cannot properly build up the cluster. Its default value is 5.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.connection-timeout-seconds: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks with the given family name; mutually
# exclusive with {@link #getServiceName()}.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.family: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Host header. i.e. {@code ec2.amazonaws.com}. The URL that is the entry
# point for a web service.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.host-header: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If you do not want to use access key and secret key, you can specify
# iam-role. Hazelcast fetches your credentials by using your IAM role.
# This setting only affects deployments on Amazon EC2. If you are
# deploying CAS in an Amazon ECS environment, the role should not be
# specified. The role is fetched from the task definition that is
# assigned to run CAS.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.iam-role: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Hazelcast port. Typically may be set to {@code 5701}. You can set
# searching for other ports rather than 5701 if you've members on
# different ports.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS region. i.e. {@code us-east-1}. The region where your members are
# running.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.region: us-east-1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS secret key.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.secret-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a security group is configured, only instances within that security
# group are selected.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.security-group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks from the given service; mutually
# exclusive with {@link #getFamily()}.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.service-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.tag-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.ticket.registry.hazelcast.cluster.discovery.aws.tag-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client ID.
#
# cas.ticket.registry.hazelcast.cluster.discovery.azure.client-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client secret.
#
# cas.ticket.registry.hazelcast.cluster.discovery.azure.client-secret: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The name of the tag on the hazelcast vm resources. With every
# Hazelcast Virtual Machine you deploy in your resource group, you need
# to ensure that each VM is tagged with the value of cluster-id defined
# in your Hazelcast configuration. The only requirement is that every VM
# can access each other either by private or public IP address.
#
# cas.ticket.registry.hazelcast.cluster.discovery.azure.cluster-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure resource group name of the cluster. You can find this in the
# Azure portal or CLI.
#
# cas.ticket.registry.hazelcast.cluster.discovery.azure.group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure subscription ID.
#
# cas.ticket.registry.hazelcast.cluster.discovery.azure.subscription-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory tenant ID.
#
# cas.ticket.registry.hazelcast.cluster.discovery.azure.tenant-id: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastDiscoveryProperties
#
# Whether discovery should be enabled via the configured strategies
# below.
#
# cas.ticket.registry.hazelcast.cluster.discovery.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A range of ports where the plugin looks for Hazelcast members.
#
# cas.ticket.registry.hazelcast.cluster.discovery.gcp.hz-port: 5701-5708

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filter to look only for instances labeled as specified; property
# format: {@code key=value}.
#
# cas.ticket.registry.hazelcast.cluster.discovery.gcp.label: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filesystem path to the private key for GCP service account in the
# JSON format; if not set, the access token is fetched from the GCP VM
# instance.
#
# cas.ticket.registry.hazelcast.cluster.discovery.gcp.private-key-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of projects where the plugin looks for instances; if not set,
# the current project is used.
#
# cas.ticket.registry.hazelcast.cluster.discovery.gcp.projects: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A region where the plugin looks for instances; if not set, the {@link
# #getZones()} property is used; if it and {@link #getZones()} property
# not set, all zones of the current region are used.
#
# cas.ticket.registry.hazelcast.cluster.discovery.gcp.region: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of zones where the plugin looks for instances; if not set, all
# zones of the current region are used.
#
# cas.ticket.registry.hazelcast.cluster.discovery.gcp.zones: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider credential, can be thought of as a password for cloud
# services.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.credential: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for cloud providers which require an extra JSON or P12 key file.
# This denotes the path of that file. Only tested with Google Compute
# Engine. (Required if Google Compute Engine is used.)
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.credential-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines the endpoint for a generic API such as OpenStack or CloudStack
# (optional).
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters instance groups (optional). When used with AWS it maps to
# security group.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider identity, can be thought of as a user name for cloud
# services.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.identity: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Port which the hazelcast instance service uses on the cluster member.
# Default value is 5701. (optional)
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# String value that is used to identify ComputeService provider. For
# example, "google-compute-engine" is used for Google Cloud services.
# See <a
# href="https://jclouds.apache.org/reference/providers/#compute">here</a
# > for more info.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.provider: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines region for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.regions: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for IAM role support specific to AWS (optional, but if defined,
# no identity or credential should be defined in the configuration).
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.role-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional). Can be used with comma
# separated values for multiple values.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.tag-keys: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional) Can be used with comma
# separated values for multiple values.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.tag-values: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines zone for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.ticket.registry.hazelcast.cluster.discovery.jclouds.zones: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the number of retries to Kubernetes API. Defaults to: 3.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.api-retries: 3

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an oauth token for the kubernetes client to access the
# kubernetes REST API. Defaults to reading the token from the
# auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/token}.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.api-token: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# CA Authority certificate from Kubernetes Master. Defaults to reading
# the certificate from the auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/ca.crt}.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.ca-certificate: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an alternative address for the kubernetes master. Defaults to:
# {@code https://kubernetes.default.svc}
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.kubernetes-master: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the namespace of the application POD through the Service
# Discovery REST API of Kubernetes.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.namespace: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label to lookup through the Service Discovery REST API
# of Kubernetes.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.pod-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label value to lookup through the Service Discovery
# REST API of Kubernetes.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.pod-label-value: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if not ready addresses should be evaluated to be discovered on
# startup.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.resolve-not-ready-addresses: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup domain. This is defined as something
# similar to {@code my-svc.my-namespace.svc.cluster.local}.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.service-dns: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup timeout in seconds. Defaults to 5 secs.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.service-dns-timeout: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label to lookup through the Service Discovery REST
# API of Kubernetes.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.service-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label value to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.service-label-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service name of the POD to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.service-name: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# If specified with a value greater than 0, its value defines the
# endpoint port of the service (overriding the default).
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.service-port: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if the node name should be used as external address, instead
# of looking up the external IP using the {@code /nodes} resource.
# Default is false.
#
# cas.ticket.registry.hazelcast.cluster.discovery.kubernetes.use-node-name-as-external-address: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Enables a multicast configuration using a group address and port.
# Contains the configuration for the multicast discovery mechanism. With
# the multicast discovery mechanism Hazelcast allows Hazelcast members
# to find each other using multicast. So Hazelcast members do not need
# to know concrete addresses of members, they just multicast to everyone
# listening. It depends on your environment if multicast is possible or
# allowed; otherwise you need to have a look at the tcp/ip cluster
#
# cas.ticket.registry.hazelcast.cluster.discovery.multicast.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast group address used for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.ticket.registry.hazelcast.cluster.discovery.multicast.group: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast port used for discovery.
#
# cas.ticket.registry.hazelcast.cluster.discovery.multicast.port: 0

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Gets the time to live for the multicast package in seconds. This is
# the default time-to-live for multicast packets sent out on the socket
#
# cas.ticket.registry.hazelcast.cluster.discovery.multicast.time-to-live: 32

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# specifies the time in seconds that a member should wait for a valid
# multicast response from another member running in the network before
# declaring itself the leader member (the first member joined to the
# cluster) and creating its own cluster. This only applies to the
# startup of members where no leader has been assigned yet. If you
# specify a high value, such as 60 seconds, it means that until a leader
# is selected, each member will wait 60 seconds before moving on. Be
# careful when providing a high value. Also, be careful not to set the
# value too low, or the members might give up too early and create their
# own cluster.
#
# cas.ticket.registry.hazelcast.cluster.discovery.multicast.timeout: 2

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Multicast trusted interfaces for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.ticket.registry.hazelcast.cluster.discovery.multicast.trusted-interfaces: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Name of this Hazelcast cluster. You can have multiple distinct
# clusters to use the same ZooKeeper installation
#
# cas.ticket.registry.hazelcast.cluster.discovery.zookeeper.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Path in zookeeper to be used for auto-discovery of members where
# members are tracked.
#
# cas.ticket.registry.hazelcast.cluster.discovery.zookeeper.path: /discovery/hazelcast

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Zookeeper url address typically in the format of {@code
# ip-address:port}.
#
# cas.ticket.registry.hazelcast.cluster.discovery.zookeeper.url: 

# Type: java.lang.String
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because instance-name setting is moved into the network namespace.
# Replace with: instance-name setting is moved into the network namespace.
#
# 
#
# cas.ticket.registry.hazelcast.cluster.instance-name: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property renamed to new"cas.ticket.registry.hazelcast.cluster.max-size.
# Replace with: Property renamed to new"cas.ticket.registry.hazelcast.cluster.max-size.
#
# 
#
# cas.ticket.registry.hazelcast.cluster.max-heap-size-percentage: 

# Type: java.util.List
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because members setting is moved into the network namespace.
# Replace with: members setting is moved into the network namespace.
#
# 
#
# cas.ticket.registry.hazelcast.cluster.members: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# IPv6 support has been switched off by default, since some platforms
# have issues in use of IPv6 stack. And some other platforms such as
# Amazon AWS have no support at all. To enable IPv6 support set this
# setting to false.
#
# cas.ticket.registry.hazelcast.cluster.network.ipv4-enabled: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# If this property is set, then this is the address where the server
# socket is bound to.
#
# cas.ticket.registry.hazelcast.cluster.network.local-address: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Sets the well known members. If members is empty, calling this method
# will have the same effect as calling {@code clear()}. A member can be
# a comma separated string, e..g {@code 10.11.12.1,10.11.12.2} which
# indicates multiple members are going to be added. The list of members
# must include ALL CAS server node, including the current node that owns
# this configuration.
#
# cas.ticket.registry.hazelcast.cluster.network.members: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify which network interfaces that Hazelcast should use.
# Servers mostly have more than one network interface, so you may want
# to list the valid IPs. Range characters ('*' and '-') can be used for
# simplicity. For instance, 10.3.10.* refers to IPs between 10.3.10.0
# and 10.3.10.255. Interface 10.3.10.4-18 refers to IPs between
# 10.3.10.4 and 10.3.10.18 (4 and 18 included). If network interface
# configuration is enabled (it is disabled by default) and if Hazelcast
# cannot find an matching interface, then it will print a message on the
# console and will not start on that node. <p> Interfaces can be
# separated by a comma.
#
# cas.ticket.registry.hazelcast.cluster.network.network-interfaces: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The outbound ports for the Hazelcast configuration.
#
# cas.ticket.registry.hazelcast.cluster.network.outbound-ports: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify the ports which Hazelcast will use to communicate
# between cluster members. The name of the parameter for this is port
# and its default value is 5701. By default, Hazelcast will try 100
# ports to bind. Meaning that, if you set the value of port as 5701, as
# members are joining to the cluster, Hazelcast tries to find ports
# between 5701 and 5801.
#
# cas.ticket.registry.hazelcast.cluster.network.port: 5701

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You may also want to choose to use only one port. In that case, you
# can disable the auto-increment feature of port.
#
# cas.ticket.registry.hazelcast.cluster.network.port-auto-increment: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The default public address to be advertised to other cluster members
# and clients.
#
# cas.ticket.registry.hazelcast.cluster.network.public-address: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Comma-separated list of cipher suite names allowed to be used. Its
# default value are all supported suites in your Java runtime.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.cipher-suites: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the authentication keys are
# provided.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.key-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the keystore. Its default value is JKS. Another commonly used
# type is the PKCS12. Available keystore/truststore types depend on your
# Operating system and the Java runtime. Only needed when the mutual
# authentication is used.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.key-store-type: JKS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your keystore file. Only needed when the mutual authentication
# is used.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.keystore: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to access the key from your keystore file. Only needed when
# the mutual authentication is used.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Mutual authentication configuration. It’s empty by default which means
# the client side of connection is not authenticated. Available values
# are: <ul> <li>{@code REQUIRED} - server forces usage of a trusted
# client certificate</li> <li>{@code OPTIONAL} - server asks for a
# client certificate, but it doesn't require it</li> </ul>
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.mutual-authentication: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm which is used in your TLS/SSL. For the protocol
# property, we recommend you to provide TLS with its version
# information, e.g., TLSv1.2. Note that if you write only TLS, your
# application chooses the TLS version according to your Java version.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.protocol: TLS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the trust managers are provided.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.trust-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your truststore file. The file truststore is a keystore file
# that contains a collection of certificates trusted by your
# application.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to unlock the truststore file.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the truststore. Its default value is JKS. Another commonly
# used type is the PKCS12. Available keystore/truststore types depend on
# your Operating system and the Java runtime.
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.trust-store-type: JKS

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Flag which allows enabling endpoint identity validation. It means,
# during the TLS handshake client verifies if the server’s hostname (or
# IP address) matches the information in X.509 certificate (Subject
# Alternative Name extension).
#
# cas.ticket.registry.hazelcast.cluster.network.ssl.validate-identity: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Enable TCP/IP config. Contains the configuration for the Tcp/Ip join
# mechanism. The Tcp/Ip join mechanism relies on one or more well known
# members. So when a new member wants to join a cluster, it will try to
# connect to one of the well known members. If it is able to connect, it
# will now about all members in the cluster and doesn't rely on these
# well known members anymore.
#
# cas.ticket.registry.hazelcast.cluster.network.tcpip-enabled: true

# Type: java.lang.Integer
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because port setting is moved into the network namespace.
# Replace with: port setting is moved into the network namespace.
#
# 
#
# cas.ticket.registry.hazelcast.cluster.port: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because port-auto-increment setting is moved into the network namespace.
# Replace with: port-auto-increment setting is moved into the network namespace.
#
# 
#
# cas.ticket.registry.hazelcast.cluster.port-auto-increment: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Whether WAN should be enabled.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Name of this replication group.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.replication-name: apereo-cas

# Type: java.util.List<org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# List of target clusters to be used for synchronization and
# replication.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets: 

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because Property is removed in Hazelcast 4
# Replace with: Property is removed in Hazelcast 4
#
# 
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[0].group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
#     <li>{@code ACK_ON_RECEIPT}: ACK
# after WAN operation is received by the target cluster (without waiting
# the result of actual operation invocation).</li>
#     <li>{@code
# ACK_ON_OPERATION_COMPLETE}: Wait till the operation is complete on
# target cluster.</li>
# </ul>
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].acknowledge-type: ACK_ON_OPERATION_COMPLETE

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum amount of time, in milliseconds, to be waited before
# sending
# a batch of events in case batch.size is not reached.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].batch-maximum-delay-milliseconds: 1000

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum size of events that are sent to the target cluster in a single
# batch.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].batch-size: 500

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Sets the cluster name used as an endpoint group password for
# authentication
# on the target endpoint.
# If there is no separate
# publisher ID property defined, this cluster name
# will also be used
# as a WAN publisher ID. This ID is then used for
# identifying the
# publisher.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].cluster-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Strategy for checking the consistency of data between replicas.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].consistency-check-strategy: NONE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Comma separated list of endpoints in this replication group.
# IP
# addresses and ports of the cluster members for which the WAN
# replication is implemented. These endpoints are not necessarily
# the
# entire target cluster and WAN does not perform the discovery of other
# members in the target cluster. It only expects
# that these IP
# addresses (or at least some of them) are available.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].endpoints: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The number of threads that the replication executor will have. The
# executor is used to send WAN
# events to the endpoints and ideally you
# want to have one thread per endpoint. If this property is omitted
#
# and you have specified the endpoints property, this will be the case.
# If necessary you can manually define
# the number of threads that the
# executor will use. Once the executor has been initialized there is
# thread
# affinity between the discovered endpoints and the executor
# threads - all events for a single endpoint will
# go through a single
# executor thread, preserving event order. It is important to determine
# which number of
# executor threads is a good value. Failure to do so
# can lead to performance issues - either contention on a
# too small
# number of threads or wasted threads that will not be performing any
# work.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].executor-thread-count: 2

# Type: java.util.Map<String,Comparable>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The WAN publisher properties.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].properties: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Publisher class name for WAN replication.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].publisher-class-name: com.hazelcast.enterprise.wan.replication.WanBatchReplication

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Returns the publisher ID used for identifying the publisher.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].publisher-id: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# For huge clusters or high data mutation rates, you might need to
# increase the replication queue size.
# The default queue size for
# replication queues is 10,000. This means, if you have heavy
# put/update/remove
# rates, you might exceed the queue size so that the
# oldest, not yet replicated, updates might get
# lost.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].queue-capacity: 10000

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
# <li>{@code THROW_EXCEPTION}: Instruct
# WAN replication implementation to throw an exception and doesn't allow
# further processing.</li>
# <li>{@code DISCARD_AFTER_MUTATION}:
# Instruct WAN replication implementation to drop new events when WAN
# event queues are full.</li>
# <li>{@code
# THROW_EXCEPTION_ONLY_IF_REPLICATION_ACTIVE}: Similar to {@code
# THROW_EXCEPTION} but only throws exception when WAN replication is
# active.
# * Discards the new events if WAN replication is
# stopped.</li>
# </ul>
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].queue-full-behavior: THROW_EXCEPTION

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Time, in milliseconds, to be waited for the acknowledgment of a sent
# WAN event to target cluster.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].response-timeout-milliseconds: 60000

# Type: boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# When set to true, only the latest events (based on key) are selected
# and sent in a batch.
#
# cas.ticket.registry.hazelcast.cluster.wan-replication.targets[].snapshot-enabled: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables compression when default java serialization is used.
#
# cas.ticket.registry.hazelcast.core.enable-compression: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enable Jet configuration/service on the hazelcast instance. Hazelcast
# Jet is a distributed batch and stream processing system that can do
# stateful computations over massive amounts of data with consistent low
# latency. Jet service is required when executing SQL queries with the
# SQL service.
#
# cas.ticket.registry.hazelcast.core.enable-jet: true

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables scripting from Management Center.
#
# cas.ticket.registry.hazelcast.core.enable-management-center-scripting: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Hazelcast enterprise license key.
#
# cas.ticket.registry.hazelcast.core.license-key: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.hazelcast.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.hazelcast.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.hazelcast.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.hazelcast.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.hazelcast.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.hazelcast.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.hazelcast.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets timeout for receiving acknowledgement for sent message. If
# acknowledgement is not received within this timeout, sending is
# considered as failed and SPI tries to repeat message sending.
#
# cas.ticket.registry.ignite.ack-timeout: PT2S

# Type: java.lang.Boolean
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Start in client mode. If true the local node is started as a client.
#
# cas.ticket.registry.ignite.client-mode: false

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.ignite.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.ignite.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.ignite.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.ignite.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.ignite.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.ignite.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.ignite.crypto.signing.key-size: 512

# Type: java.lang.Boolean
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Ignite native persistence is a distributed ACID and SQL-compliant disk
# store that transparently integrates with Ignite's durable memory.
# Ignite persistence is optional and can be turned on and off. When
# turned off Ignite becomes a pure in-memory store. With the native
# persistence enabled, Ignite always stores a superset of data on disk,
# and as much as it can in RAM based on the capacity of the latter. For
# example, if there are 100 entries and RAM has the capacity to store
# only 20, then all 100 will be stored on disk and only 20 will be
# cached in RAM for better performance. Also, it is worth mentioning
# that as with a pure in-memory use case, when the persistence is turned
# on, every individual cluster node persists only a subset of the data,
# only including partitions for which the node is either primary or
# backup. Collectively, the whole cluster contains the full data set.
#
# cas.ticket.registry.ignite.default-persistence-enabled: false

# Type: java.lang.Long
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# By default, Ignite nodes consume up to 20% of the RAM available
# locally, and in most cases, ​this is the only parameter you might need
# to change. Using the below setting allows you to change the default
# region memory size.
#
# cas.ticket.registry.ignite.default-region-max-size: 0

# Type: java.lang.Boolean
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets force server mode flag. If true {@code TcpDiscoverySpi} is
# started in server mode regardless of {@code
# IgniteConfiguration.isClientMode()}.
#
# cas.ticket.registry.ignite.force-server-mode: false

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Used by {@code TcpDiscoveryVmIpFinder} which is an IP Finder which
# works only with pre-configured list of IP addresses specified via this
# setting. By default, this IP finder is not shared, which means that
# all grid nodes have to be configured with the same list of IP
# addresses when this IP finder is used. Parses provided values and
# initializes the internal collection of addresses. Addresses may be
# represented as follows: <ul> <li>IP address (e.g. 127.0.0.1, 9.9.9.9,
# etc);</li> <li>IP address and port (e.g. 127.0.0.1:47500,
# 9.9.9.9:47501, etc);</li> <li>IP address and port range (e.g.
# 127.0.0.1:47500..47510, 9.9.9.9:47501..47504, etc);</li> <li>Hostname
# (e.g. host1.com, host2, etc);</li> <li>Hostname and port (e.g.
# host1.com:47500, host2:47502, etc).</li> <li>Hostname and port range
# (e.g. host1.com:47500..47510, host2:47502..47508, etc).</li> </ul> If
# port is 0 or not provided then default port will be used (depends on
# discovery SPI configuration). If port range is provided (e.g.
# host:port1..port2) the following should be considered: <ul> <li>port1
# &lt; port2 should be true;</li> <li>Both port1 and port2 should be
# greater than 0.</li> </ul>
#
# cas.ticket.registry.ignite.ignite-address: 

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets join timeout. If non-shared IP finder is used and node fails to
# connect to any address from IP finder, node keeps trying to join
# within this timeout. If all addresses are still unresponsive,
# exception is thrown and node startup fails.
#
# cas.ticket.registry.ignite.join-timeout: PT1S

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# The key algorithm to use when creating SSL context.
#
# cas.ticket.registry.ignite.key-algorithm: SunX509

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Keystore file path used to create a SSL context for the ticket
# registry.
#
# cas.ticket.registry.ignite.key-store-file-path: 

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Keystore password used to create a SSL context for the ticket
# registry.
#
# cas.ticket.registry.ignite.key-store-password: 

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Keystore type used to create a SSL context for the ticket registry.
#
# cas.ticket.registry.ignite.key-store-type: JKS

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets local host IP address that discovery SPI uses. If not provided,
# by default a first found non-loopback address will be used. If there
# is no non-loopback address available, then {@code
# InetAddress.getLocalHost()} will be used.
#
# cas.ticket.registry.ignite.local-address: 

# Type: java.lang.Integer
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets local port to listen to.
#
# cas.ticket.registry.ignite.local-port: -1

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets maximum network timeout to use for network operations.
#
# cas.ticket.registry.ignite.network-timeout: PT5S

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# SSL protocol used to create a SSL context for the ticket registry.
#
# cas.ticket.registry.ignite.protocol: TLS

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets socket operations timeout. This timeout is used to limit
# connection time and write-to-socket time. Note that when running
# Ignite on Amazon EC2, socket timeout must be set to a value
# significantly greater than the default (e.g. to 30000).
#
# cas.ticket.registry.ignite.socket-timeout: PT5S

# Type: java.lang.Integer
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Sets thread priority. All threads within SPI will be started with it.
#
# cas.ticket.registry.ignite.thread-priority: 10

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties.TicketsCache
#
# Specifies the atomicity mode. <ul> <li>{@code ATOMIC}: Specifies
# atomic-only cache behaviour. In this mode distributed transactions and
# distributed locking are not supported. Disabling transactions and
# locking allows to achieve much higher performance and throughput
# ratios. In addition to transactions and locking, one of the main
# differences in ATOMIC mode is that bulk writes, such as putAll(...),
# removeAll(...), and transformAll(...) methods, become simple batch
# operations which can partially fail. In case of partial failure
# CachePartialUpdateCheckedException will be thrown which will contain a
# list of keys for which the update failed. It is recommended that bulk
# writes are used whenever multiple keys need to be inserted or updated
# in cache, as they reduce number of network trips and provide better
# performance. Note that even without locking and transactions, ATOMIC
# mode still provides full consistency guarantees across all cache
# nodes. Also note that all data modifications in ATOMIC mode are
# guaranteed to be atomic and consistent with writes to the underlying
# persistent store, if one is configured.</li> <li>{@code
# TRANSACTIONAL}: Specifies fully ACID-compliant transactional cache
# behavior.</li> </ul>
#
# cas.ticket.registry.ignite.tickets-cache.atomicity-mode: TRANSACTIONAL

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties.TicketsCache
#
# Specified the caching mode. <ul> <li>{@code LOCAL}: Specifies
# local-only cache behaviour. In this mode caches residing on different
# grid nodes will not know about each other. Other than distribution,
# local caches still have all the caching features, such as eviction,
# expiration, swapping, querying, etc... This mode is very useful when
# caching read-only data or data that automatically expires at a certain
# interval and then automatically reloaded from persistence store.</li>
# <li> {@code REPLICATED}: Specifies fully replicated cache behavior. In
# this mode all the keys are distributed to all participating nodes.
# User still has affinity control over subset of nodes for any given key
# via AffinityFunction configuration. </li> <li> {@code PARTITIONED}:
# Specifies partitioned cache behaviour. In this mode the overall key
# set will be divided into partitions and all partitions will be split
# equally between participating nodes. User has affinity control over
# key assignment via AffinityFunction configuration. Note that
# partitioned cache is always fronted by local 'near' cache which stores
# most recent data. You can configure the size of near cache via
# NearCacheConfiguration.getNearEvictionPolicy() configuration property.
# </li> </ul>
#
# cas.ticket.registry.ignite.tickets-cache.cache-mode: REPLICATED

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties.TicketsCache
#
# Mode indicating how Ignite should wait for write replies from other
# nodes. Default value is FULL_ASYNC}, which means that Ignite will not
# wait for responses from participating nodes. This means that by
# default remote nodes may get their state updated slightly after any of
# the cache write methods complete, or after Transaction.commit() method
# completes. <ul> <li> {@code FULL_ASYNC}: Flag indicating that Ignite
# will not wait for write or commit responses from participating nodes,
# which means that remote nodes may get their state updated a bit after
# any of the cache write methods complete, or after {@code
# Transaction.commit()} method completes. </li> <li> {@code FULL_SYNC}:
# Flag indicating that Ignite should wait for write or commit replies
# from all nodes. This behavior guarantees that whenever any of the
# atomic or transactional writes complete, all other participating nodes
# which cache the written data have been updated. </li> <li> {@code
# PRIMARY_SYNC}: This flag only makes sense for CacheMode.PARTITIONED
# mode. When enabled, Ignite will wait for write or commit to complete
# on primary node, but will not wait for backups to be updated. </li>
# </ul>
#
# cas.ticket.registry.ignite.tickets-cache.write-synchronization-mode: FULL_SYNC

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Truststore file path used to create a SSL context for the ticket
# registry.
#
# cas.ticket.registry.ignite.trust-store-file-path: 

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Truststore password used to create a SSL context for the ticket
# registry.
#
# cas.ticket.registry.ignite.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-ignite-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.ignite.IgniteProperties
#
# Truststore type used to create a SSL context for the ticket registry.
#
# cas.ticket.registry.ignite.trust-store-type: JKS

# Type: java.lang.Integer
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.registry.InMemoryTicketRegistryProperties
#
# The estimated number of concurrently updating threads. The
# implementation performs internal sizing to try to accommodate this
# many threads.
#
# cas.ticket.registry.in-memory.concurrency: 20

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.in-memory.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.in-memory.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.in-memory.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.in-memory.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.in-memory.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.in-memory.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.in-memory.crypto.signing.key-size: 512

# Type: java.lang.Integer
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.registry.InMemoryTicketRegistryProperties
#
# The initial capacity of the underlying memory store. The
# implementation performs internal sizing to accommodate this many
# elements.
#
# cas.ticket.registry.in-memory.initial-capacity: 1000

# Type: java.lang.Integer
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.registry.InMemoryTicketRegistryProperties
#
# The load factor threshold, used to control resizing. Resizing may be
# performed when the average number of elements per bin exceeds this
# threshold.
#
# cas.ticket.registry.in-memory.load-factor: 1

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# The default auto-commit behavior of connections in the pool.
# Determined whether queries such as update/insert should be immediately
# executed without waiting for an underlying transaction.
#
# cas.ticket.registry.jpa.autocommit: false

# Type: java.lang.Integer
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# A non-zero value enables use of JDBC2 batch updates by Hibernate. e.g.
# recommended values between 5 and 30.
#
# cas.ticket.registry.jpa.batch-size: 100

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Indicates the maximum number of milliseconds that the service can wait
# to obtain a connection.
#
# cas.ticket.registry.jpa.connection-timeout: PT30S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.jpa.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.jpa.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.jpa.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.jpa.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.jpa.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.jpa.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.jpa.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Attempts to do a JNDI data source look up for the data source name
# specified. Will attempt to locate the data source object as is.
#
# cas.ticket.registry.jpa.data-source-name: 

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Hibernate feature to automatically validate and exports DDL to the
# schema. By default, creates and drops the schema automatically when a
# session is starts and ends. Setting the value to {@code validate} or
# {@code none} may be more desirable for production, but any of the
# following options can be used: <ul> <li>{@code validate}: Validate the
# schema, but make no changes to the database.</li> <li>{@code update}:
# Update the schema.</li> <li>{@code create}: Create the schema,
# destroying previous data.</li> <li>{@code create-drop}: Drop the
# schema at the end of the session.</li> <li>{@code none}: Do
# nothing.</li> </ul> <p> Note that during a version migration where any
# schema has changed {@code create-drop} will result in the loss of all
# data as soon as CAS is started. For transient data like tickets this
# is probably not an issue, but in cases like the audit table important
# data could be lost. Using `update`, while safe for data, is confirmed
# to result in invalid database state. {@code validate} or {@code none}
# settings are likely the only safe options for production use. </p> For
# more info, <a
# href="http://docs.spring.io/spring-framework/docs/current/javadoc-api"
# >see this</a>.
#
# cas.ticket.registry.jpa.ddl-auto: update

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Qualifies unqualified table names with the given catalog in generated
# SQL.
#
# cas.ticket.registry.jpa.default-catalog: 

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Qualify unqualified table names with the given schema/tablespace in
# generated SQL.
#
# cas.ticket.registry.jpa.default-schema: 

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# The database dialect is a configuration setting for platform
# independent software (JPA, Hibernate, etc) which allows such software
# to translate its generic SQL statements into vendor specific DDL, DML.
#
# cas.ticket.registry.jpa.dialect: org.hibernate.dialect.HSQLDialect

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# The JDBC driver used to connect to the database.
#
# cas.ticket.registry.jpa.driver-class: org.hsqldb.jdbcDriver

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Whether managing tickets via JPA is enabled.
#
# cas.ticket.registry.jpa.enabled: true

# Type: java.lang.Long
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Set the pool initialization failure timeout. <ul> <li>Any value
# greater than zero will be treated as a timeout for pool
# initialization. The calling thread will be blocked from continuing
# until a successful connection to the database, or until the timeout is
# reached. If the timeout is reached, then a {@code
# PoolInitializationException} will be thrown. </li> <li>A value of zero
# will <i>not</i> prevent the pool from starting in the case that a
# connection cannot be obtained. However, upon start the pool will
# attempt to obtain a connection and validate that the {@code
# connectionTestQuery} and {@code connectionInitSql} are valid. If those
# validations fail, an exception will be thrown. If a connection cannot
# be obtained, the validation is skipped and the the pool will start and
# continue to try to obtain connections in the background. This can mean
# that callers to {@code DataSource#getConnection()} may encounter
# exceptions. </li> <li>A value less than zero will <i>not</i> bypass
# any connection attempt and validation during startup, and therefore
# the pool will start immediately. The pool will continue to try to
# obtain connections in the background. This can mean that callers to
# {@code DataSource#getConnection()} may encounter exceptions. </li>
# </ul> Note that if this timeout value is greater than or equal to zero
# (0), and therefore an initial connection validation is performed, this
# timeout does not override the {@code connectionTimeout} or {@code
# validationTimeout}; they will be honored before this timeout is
# applied. The default value is one millisecond.
#
# cas.ticket.registry.jpa.fail-fast-timeout: 1

# Type: java.lang.Integer
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Used to specify number of rows to be fetched in a select query.
#
# cas.ticket.registry.jpa.fetch-size: 100

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Allow hibernate to generate query statistics.
#
# cas.ticket.registry.jpa.generate-statistics: false

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# The SQL query to be executed to test the validity of connections. This
# is for "legacy" databases that do not support the JDBC4 {@code
# Connection.isValid()} API.
#
# cas.ticket.registry.jpa.health-query: 

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Controls the maximum amount of time that a connection is allowed to
# sit idle in the pool.
#
# cas.ticket.registry.jpa.idle-timeout: PT10M

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# This property determines whether data source isolates internal pool
# queries, such as the connection alive test, in their own transaction.
# <p> Since these are typically read-only queries, it is rarely
# necessary to encapsulate them in their own transaction. This property
# only applies if {@link #autocommit} is disabled.
#
# cas.ticket.registry.jpa.isolate-internal-queries: false

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Defines the isolation level for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.ticket.registry.jpa.isolation-level-name: ISOLATION_READ_COMMITTED

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Indicates the lock duration when one is about to be acquired by the
# cleaner.
#
# cas.ticket.registry.jpa.jpa-locking-timeout: PT1H

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Controls the amount of time that a connection can be out of the pool
# before a message is logged indicating a possible connection leak.
#
# cas.ticket.registry.jpa.leak-threshold: PT6S

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# The database connection password.
#
# cas.ticket.registry.jpa.password: 

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Fully-qualified name of the class that can control the physical naming
# strategy of hibernate.
#
# cas.ticket.registry.jpa.physical-naming-strategy-class-name: org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the keepalive interval for a connection in the
# pool. An in-use connection will never be tested by the keepalive
# thread, only when it is idle will it be tested. Default is zero, which
# disables this feature.
#
# cas.ticket.registry.jpa.pool.keep-alive-time: 0

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the maximum number of connections to keep in the pool,
# including both idle and in-use connections.
#
# cas.ticket.registry.jpa.pool.max-size: 18

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Sets the maximum time in seconds that this data source will wait while
# attempting to connect to a database. <p> A value of zero specifies
# that the timeout is the default system timeout if there is one;
# otherwise, it specifies that there is no timeout.
#
# cas.ticket.registry.jpa.pool.max-wait: PT2S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# This property controls the maximum lifetime of a connection in the
# pool. When a connection reaches this timeout, even if recently used,
# it will be retired from the pool. An in-use connection will never be
# retired, only when it is idle will it be removed.
#
# cas.ticket.registry.jpa.pool.maximum-lifetime: PT10M

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Controls the minimum size that the pool is allowed to reach, including
# both idle and in-use connections.
#
# cas.ticket.registry.jpa.pool.min-size: 6

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Set the name of the connection pool. This is primarily used for the
# MBean to uniquely identify the pool configuration.
#
# cas.ticket.registry.jpa.pool.name: 

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# Whether or not pool suspension is allowed. <p> There is a performance
# impact when pool suspension is enabled. Unless you need it (for a
# redundancy system for example) do not enable it.
#
# cas.ticket.registry.jpa.pool.suspension: false

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.support.ConnectionPoolingProperties
#
# The maximum number of milliseconds that the pool will wait for a
# connection to be validated as alive.
#
# cas.ticket.registry.jpa.pool.timeout-millis: 1000

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Defines the propagation behavior for transactions. @see
# org.springframework.transaction.TransactionDefinition
#
# cas.ticket.registry.jpa.propagation-behavior-name: PROPAGATION_REQUIRED

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Additional settings provided by Hibernate (or the connection provider)
# in form of key-value pairs.
#
# cas.ticket.registry.jpa.properties: 

# Type: java.lang.Boolean
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Configures the Connections to be added to the pool as read-only
# Connections.
#
# cas.ticket.registry.jpa.read-only: false

# Type: jakarta.persistence.LockModeType
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# Ticket locking type. Acceptable values are {@code
# READ,WRITE,OPTIMISTIC,OPTIMISTIC_FORCE_INCREMENT,PESSIMISTIC_READ,
# PESSIMISTIC_WRITE,PESSIMISTIC_FORCE_INCREMENT,NONE}.
#
# cas.ticket.registry.jpa.ticket-lock-type: 

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# The database connection URL.
#
# cas.ticket.registry.jpa.url: jdbc:hsqldb:mem:cas-hsql-database

# Type: java.lang.String
# Module: cas-server-support-jpa-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.jpa.ticketregistry.JpaTicketRegistryProperties
#
# The database user. <p> The database user must have sufficient
# permissions to be able to handle schema changes and updates, when
# needed.
#
# cas.ticket.registry.jpa.user: sa

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.memcached.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.memcached.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.memcached.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.memcached.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.memcached.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.memcached.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.memcached.crypto.signing.key-size: 512

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the daemon state of the IO thread (defaults to true).
#
# cas.ticket.registry.memcached.daemon: true

# Type: java.lang.String
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Failure mode. Acceptable values are {@code Redistribute,Retry,Cancel}.
#
# cas.ticket.registry.memcached.failure-mode: Redistribute

# Type: java.lang.String
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Hash algorithm. Acceptable values are {@code
# NATIVE_HASH,CRC_HASH,FNV1_64_HASH,FNV1A_64_HASH,FNV1_32_HASH,FNV1A_32_
# HASH,KETAMA_HASH}.
#
# cas.ticket.registry.memcached.hash-algorithm: FNV1_64_HASH

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# If true, {@code reset} is called automatically after an entire object
# graph has been read or written. If false, {@code reset} must be called
# manually, which allows unregistered class names, references, and other
# information to span multiple object graphs.
#
# cas.ticket.registry.memcached.kryo-auto-reset: false

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# If true, each appearance of an object in the graph after the first is
# stored as an integer ordinal. When set to true, {@code
# MapReferenceResolver} is used. This enables references to the same
# object and cyclic graphs to be serialized, but typically adds overhead
# of one byte per object.
#
# cas.ticket.registry.memcached.kryo-objects-by-reference: false

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# If true, an exception is thrown when an unregistered class is
# encountered. <p> If false, when an unregistered class is encountered,
# its fully qualified class name will be serialized and the default
# serializer for the class used to serialize the object. Subsequent
# appearances of the class within the same object graph are serialized
# as an int id. Registered classes are serialized as an int id, avoiding
# the overhead of serializing the class name, but have the drawback of
# needing to know the classes to be serialized up front. See {@code
# ComponentSerializationPlan} for help here. </p>
#
# cas.ticket.registry.memcached.kryo-registration-required: true

# Type: java.lang.String
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Locator mode. Acceptable values are {@code ARRAY_MOD, CONSISTENT,
# VBUCKET}.
#
# cas.ticket.registry.memcached.locator-type: ARRAY_MOD

# Type: java.lang.Integer
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the value for the maxTotal configuration attribute for pools
# created with this configuration instance.
#
# cas.ticket.registry.memcached.max-idle: 8

# Type: java.lang.Long
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the maximum reconnect delay.
#
# cas.ticket.registry.memcached.max-reconnect-delay: -1

# Type: java.lang.Integer
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Sets the cap on the number of objects that can be allocated by the
# pool (checked out to clients, or idle awaiting checkout) at a given
# time. Use a negative value for no limit.
#
# cas.ticket.registry.memcached.max-total: 20

# Type: java.lang.Integer
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Get the value for the minIdle configuration attribute for pools
# created with this configuration instance.
#
# cas.ticket.registry.memcached.min-idle: 0

# Type: java.lang.Long
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the default operation timeout in milliseconds.
#
# cas.ticket.registry.memcached.op-timeout: -1

# Type: java.lang.String
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Protocol. Acceptable values are {@code TEXT, BINARY}.
#
# cas.ticket.registry.memcached.protocol: TEXT

# Type: java.lang.String
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Comma-separated list of memcached servers.
#
# cas.ticket.registry.memcached.servers: localhost:11211

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set to false if the default operation optimization is not desirable.
#
# cas.ticket.registry.memcached.should-optimize: false

# Type: java.lang.Long
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# The number of seconds to wait for connections to finish before
# shutting down the client.
#
# cas.ticket.registry.memcached.shutdown-timeout-seconds: -1

# Type: java.lang.Integer
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set the maximum timeout exception threshold.
#
# cas.ticket.registry.memcached.timeout-exception-threshold: 2

# Type: org.apereo.cas.configuration.model.support.memcached.BaseMemcachedProperties$TranscoderTypes
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Indicate the transcoder type.
# Available values are as follows:
#
# <ul><li>{@code KRYO}: CAS transcoder implementation based on Kryo fast
# serialization framework
# suited for efficient serialization of
# tickets. Provides pooling mechanisms
# as well as control over object
# registration and sequences.</li><li>{@code SERIAL}: Kryp native
# transcoder that serializes and compresses objects.</li><li>{@code
# WHALIN}: Transcoder that provides compatibility with Greg Whalin's
# memcached client.</li><li>{@code WHALINV1}: Handles old whalin
# encoding: data type is in the first byte of the value.</li></ul>
#
# cas.ticket.registry.memcached.transcoder: KRYO

# Type: java.lang.Integer
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# For transcoders other than kryo, determines the compression threshold.
# Does not apply to kryo.
#
# cas.ticket.registry.memcached.transcoder-compression-threshold: 16384

# Type: java.lang.Boolean
# Module: cas-server-support-memcached-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.memcached.MemcachedTicketRegistryProperties
# This setting is deprecated with a severity level of ERROR.
#
# Set to true if you'd like to enable the Nagle algorithm.
#
# cas.ticket.registry.memcached.use-nagle-algorithm: false

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Name of the database to use for authentication.
#
# cas.ticket.registry.mongo.authentication-database-name: 

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# The connection uri to the mongodb instance. This typically takes on
# the form of {@code
# mongodb://user:psw@ds135522.somewhere.com:35522/db}. If not specified,
# will fallback onto other individual settings. If specified, takes over
# all other settings where applicable.
#
# cas.ticket.registry.mongo.client-uri: 

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.mongo.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.mongo.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.mongo.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.mongo.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.mongo.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.mongo.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.mongo.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# MongoDb database instance name.
#
# cas.ticket.registry.mongo.database-name: 

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Whether collections should be dropped on startup and re-created.
#
# cas.ticket.registry.mongo.drop-collection: false

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# When updating/creating indexes, decide if existing indexes should all
# be dropped once prior to creating/updating indexes. This may be useful
# to avoid conflicts between old and new indexes, in scenarios where CAS
# may be unable to locate the proper difference in index options or
# names during upgrades..
#
# cas.ticket.registry.mongo.drop-indexes: false

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# MongoDb database host for authentication. Multiple host addresses may
# be defined, separated by comma. If more than one host is defined, it
# is assumed that each host contains the port as well, if any. Otherwise
# the configuration may fallback onto the port defined.
#
# cas.ticket.registry.mongo.host: localhost

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Index names to create. By default, all indexes are created. Supported
# indexes are: <ul> <li>{@code IDX_ID}: index created for ticket
# identifiers.</li> <li>{@code IDX_JSON_TYPE_ID}: compound index for
# ticket body, type and id used for text queries.</li> <li>{@code
# IDX_PRINCIPAL}: index created for principal attached to the
# ticket.</li> <li>{@code IDX_EXPIRATION}: index created for ticket
# expiration date.</li></ul>
#
# cas.ticket.registry.mongo.indexes: 

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# MongoDb database password for authentication.
#
# cas.ticket.registry.mongo.password: 

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum idle time of a pooled connection. A zero value indicates
# no limit to the idle time. A pooled connection that has exceeded its
# idle time will be closed and replaced when necessary by a new
# connection.
#
# cas.ticket.registry.mongo.pool.idle-time: PT30S

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time a pooled connection can live for. A zero value
# indicates no limit to the life time. A pooled connection that has
# exceeded its life time will be closed and replaced when necessary by a
# new connection.
#
# cas.ticket.registry.mongo.pool.life-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Maximum number of connections to keep around.
#
# cas.ticket.registry.mongo.pool.max-size: 10

# Type: java.lang.String
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# The maximum time that a thread may wait for a connection to become
# available.
#
# cas.ticket.registry.mongo.pool.max-wait-time: PT60S

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Minimum number of connections to keep around.
#
# cas.ticket.registry.mongo.pool.min-size: 1

# Type: java.lang.Integer
# Module: cas-server-support-mongo-core
# Owner: org.apereo.cas.configuration.model.support.mongo.MongoDbConnectionPoolProperties
#
# Total number of connections allowed per host.
#
# cas.ticket.registry.mongo.pool.per-host: 10

# Type: java.lang.Integer
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# MongoDb database port.
#
# cas.ticket.registry.mongo.port: 27017

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Read concern. Accepted values are: <ul> <li>{@code LOCAL}</li>
# <li>{@code MAJORITY}</li> <li>{@code LINEARIZABLE}</li> <li>{@code
# SNAPSHOT}</li> <li>{@code AVAILABLE}</li> </ul>
#
# cas.ticket.registry.mongo.read-concern: AVAILABLE

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Read preference. Accepted values are: <ul> <li>{@code PRIMARY}</li>
# <li>{@code SECONDARY}</li> <li>{@code SECONDARY_PREFERRED}</li>
# <li>{@code PRIMARY_PREFERRED}</li> <li>{@code NEAREST}</li> </ul>
#
# cas.ticket.registry.mongo.read-preference: PRIMARY

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# A replica set in MongoDB is a group of {@code mongod} processes that
# maintain the same data set. Replica sets provide redundancy and high
# availability, and are the basis for all production deployments.
#
# cas.ticket.registry.mongo.replica-set: 

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Sets whether writes should be retried if they fail due to a network
# error.
#
# cas.ticket.registry.mongo.retry-writes: false

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Whether the database socket connection should be tagged with
# keep-alive.
#
# cas.ticket.registry.mongo.socket-keep-alive: false

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Whether connections require SSL.
#
# cas.ticket.registry.mongo.ssl-enabled: false

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# MongoDb database connection timeout.
#
# cas.ticket.registry.mongo.timeout: PT5S

# Type: java.lang.Boolean
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Whether CAS should attempt to create/update indexes automatically and
# figure out the differences between existing keys and new keys.
#
# cas.ticket.registry.mongo.update-indexes: true

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# MongoDb database user for authentication.
#
# cas.ticket.registry.mongo.user-id: 

# Type: java.lang.String
# Module: cas-server-support-mongo-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.mongo.ticketregistry.MongoDbTicketRegistryProperties
#
# Write concern describes the level of acknowledgement requested from
# MongoDB for write operations to a standalone mongo db or to replica
# sets or to sharded clusters. In sharded clusters, mongo db instances
# will pass the write concern on to the shards.
#
# cas.ticket.registry.mongo.write-concern: ACKNOWLEDGED

# Type: java.lang.Long
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.SimpleCacheProperties
#
# This cache size specifies the maximum number of entries the cache may
# contain. Note that the cache may evict an entry before this limit is
# exceeded or temporarily exceed the threshold while evicting. As the
# cache size grows close to the maximum, the cache evicts entries that
# are less likely to be used again. For example, the cache may evict an
# entry because it hasn't been used recently or very often. Note: to
# disable the cache, you may choose a cache size of {@code 0}.
#
# cas.ticket.registry.redis.cache.cache-size: 10000

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.cache.SimpleCacheProperties
#
# This cache capacity sets the minimum total size for the internal data
# structures. Providing a large enough estimate at construction time
# avoids the need for expensive resizing operations later, but setting
# this value unnecessarily high wastes memory.
#
# cas.ticket.registry.redis.cache.initial-capacity: 1000

# Type: java.io.File
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# May be used when making SSL connections to build the trust manager.
# Sets the certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.ticket.registry.redis.certificate-file: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether adaptive topology refreshing using all available refresh
# triggers should be used.
#
# cas.ticket.registry.redis.cluster.adaptive-topology-refresh: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Whether to discover and query all cluster nodes for obtaining the
# cluster topology. When set to false, only the initial seed nodes are
# used as sources for topology discovery.
#
# cas.ticket.registry.redis.cluster.dynamic-refresh-sources: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The max number of redirects to follow.
#
# cas.ticket.registry.redis.cluster.max-redirects: 0

# Type: java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# List of nodes available in the redis cluster.
#
# cas.ticket.registry.redis.cluster.nodes: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's host address.
#
# cas.ticket.registry.redis.cluster.nodes[].host: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Identifier of this node.
#
# cas.ticket.registry.redis.cluster.nodes[].id: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Name of this node.
#
# cas.ticket.registry.redis.cluster.nodes[].name: 

# Type: int
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Server's port number.
#
# cas.ticket.registry.redis.cluster.nodes[].port: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Set the id of the master node.
#
# cas.ticket.registry.redis.cluster.nodes[].replica-of: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties
#
# Indicate the type/role of this node.
# Accepted values are: {@code
# MASTER, REPLICA}.
#
# cas.ticket.registry.redis.cluster.nodes[].type: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's password.
#
# cas.ticket.registry.redis.cluster.password: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# Enables periodic refresh of cluster topology and sets the refresh
# period.
#
# cas.ticket.registry.redis.cluster.topology-refresh-period: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisClusterProperties
#
# The cluster connection's username.
#
# cas.ticket.registry.redis.cluster.username: 

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Connection timeout.
#
# cas.ticket.registry.redis.connect-timeout: PT10S

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.redis.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.redis.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.redis.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.redis.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.redis.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.redis.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.redis.crypto.signing.key-size: 512

# Type: java.lang.Integer
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Database index used by the connection factory.
#
# cas.ticket.registry.redis.database: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Allows the register to detect the presence of Redis modules, in
# particular RediSearch, which allows the registry to create specific
# indexes and search Redis documents to look up tickets. Enabling
# indexing and searching capabilities may lead to significant
# performance improvements.
#
# cas.ticket.registry.redis.enable-redis-search: true

# Type: java.lang.Boolean
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Whether the module is enabled or not, defaults to true.
#
# cas.ticket.registry.redis.enabled: true

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Redis server host.
#
# cas.ticket.registry.redis.host: localhost

# Type: java.io.File
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# May be used when making SSL connections to build the key manager. Sets
# the key certificate file to use for client authentication. This is
# typically an {@code X.509} certificate file (or chain file) in PEM
# format.
#
# cas.ticket.registry.redis.key-certificate-chain-file: 

# Type: java.io.File
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# May be used when making SSL connections. Sets the key file for client
# authentication. The key is reloaded on each connection attempt that
# allows to replace certificates during runtime. This is typically a
# {@code PKCS#8} private key file in PEM format.
#
# cas.ticket.registry.redis.key-file: 

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# The password of the {@link #keyFile}, or {@code null} if it's not
# password-protected.
#
# cas.ticket.registry.redis.key-password: 

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Login password of the redis server.
#
# cas.ticket.registry.redis.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Enable the pooling configuration.
#
# cas.ticket.registry.redis.pool.enabled: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether or not the pool serves threads waiting to borrow
# objects fairly. True means that waiting threads are served as if
# waiting in a FIFO queue.
#
# cas.ticket.registry.redis.pool.fairness: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether the pool has LIFO (last in, first out) behaviour with
# respect to idle objects - always returning the most recently used
# object from the pool, or as a FIFO (first in, first out) queue, where
# the pool always returns the oldest object in the idle object pool.
#
# cas.ticket.registry.redis.pool.lifo: true

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of connections that can be allocated by the pool at a given
# time. Use a negative value for no limit.
#
# cas.ticket.registry.redis.pool.max-active: 8

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Max number of "idle" connections in the pool. Use a negative value to
# indicate an unlimited number of idle connections.
#
# cas.ticket.registry.redis.pool.max-idle: 8

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Maximum amount of time (in milliseconds) a connection allocation
# should block before throwing an exception when the pool is exhausted.
# Use a negative value to block indefinitely.
#
# cas.ticket.registry.redis.pool.max-wait: PT5S

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)). When non-positive, no
# objects will be evicted from the pool due to idle time alone.
#
# cas.ticket.registry.redis.pool.min-evictable-idle-time-millis: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Target for the minimum number of idle connections to maintain in the
# pool. This setting only has an effect if it is positive.
#
# cas.ticket.registry.redis.pool.min-idle: 0

# Type: java.lang.Integer
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the maximum number of objects to examine during each run (if any)
# of the idle object evictor thread. When positive, the number of tests
# performed for a run will be the minimum of the configured value and
# the number of idle instances in the pool. When negative, the number of
# tests performed will be ceil(getNumIdle()/
# abs(getNumTestsPerEvictionRun())) which means that when the value is
# -n roughly one nth of the idle objects will be tested per run.
#
# cas.ticket.registry.redis.pool.num-tests-per-eviction-run: 0

# Type: java.lang.Long
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Sets the minimum amount of time an object may sit idle in the pool
# before it is eligible for eviction by the idle object evictor (if any
# - see setTimeBetweenEvictionRunsMillis(long)), with the extra
# condition that at least minIdle object instances remain in the pool.
# This setting is overridden by getMinEvictableIdleTimeMillis() (that
# is, if getMinEvictableIdleTimeMillis() is positive, then
# getSoftMinEvictableIdleTimeMillis() is ignored).
#
# cas.ticket.registry.redis.pool.soft-min-evictable-idle-time-millis: 0

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated
# before being returned from the borrowObject() method. Validation is
# performed by the validateObject() method of the factory associated
# with the pool. If the object fails to validate, it will be removed
# from the pool and destroyed, and a new attempt will be made to borrow
# an object from the pool.
#
# cas.ticket.registry.redis.pool.test-on-borrow: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects created for the pool will be validated before
# being returned from the borrowObject() method. Validation is performed
# by the validateObject() method of the factory associated with the
# pool. If the object fails to validate, then borrowObject() will fail.
#
# cas.ticket.registry.redis.pool.test-on-create: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects borrowed from the pool will be validated when
# they are returned to the pool via the returnObject() method.
# Validation is performed by the validateObject() method of the factory
# associated with the pool. Returning objects that fail validation are
# destroyed rather then being returned the pool.
#
# cas.ticket.registry.redis.pool.test-on-return: false

# Type: java.lang.Boolean
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisPoolProperties
#
# Returns whether objects sitting idle in the pool will be validated by
# the idle object evictor ( if any - see
# setTimeBetweenEvictionRunsMillis(long)). Validation is performed by
# the validateObject() method of the factory associated with the pool.
# If the object fails to validate, it will be removed from the pool and
# destroyed.
#
# cas.ticket.registry.redis.pool.test-while-idle: false

# Type: java.lang.Integer
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Redis server port.
#
# cas.ticket.registry.redis.port: 6379

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Redis protocol version.
#
# cas.ticket.registry.redis.protocol-version: RESP3

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Identifier for this CAS server node that tags the sender/receiver in
# the queue and avoid processing of inbound calls. If left blank, an
# identifier is generated automatically and kept in memory.
#
# cas.ticket.registry.redis.queue-identifier: 

# Type: org.apereo.cas.configuration.model.support.redis.BaseRedisProperties$RedisReadFromTypes
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Setting that describes how Lettuce routes read operations to replica
# nodes. Note that modes referencing MASTER/SLAVE are deprecated (but
# still supported) in the Lettuce redis client dependency so migrate
# config to UPSTREAM/REPLICA.
# Available values are as follows:
#
# <ul><li>{@code UPSTREAM}: Read from the current upstream
# node.</li><li>{@code UPSTREAMPREFERRED}: Read from the upstream node,
# but if it is unavailable, read from replica nodes.</li><li>{@code
# MASTER}: Read from the current upstream node.</li><li>{@code
# MASTERPREFERRED}: Read from the upstream node, but if it is
# unavailable, read from replica nodes.</li><li>{@code SLAVE}: Read from
# replica nodes.</li><li>{@code SLAVEPREFERRED}: Read from the replica
# nodes, but if none is unavailable, read from the upstream
# node.</li><li>{@code REPLICA}: Read from replica nodes.</li><li>{@code
# REPLICAPREFERRED}: Read from the replica nodes, but if none is
# unavailable, read from the upstream node.</li><li>{@code ANY}: Read
# from any node of the cluster.</li><li>{@code ANYREPLICA}: Read from
# any replica node of the cluster.</li><li>{@code NEAREST}: Read from
# the nearest node.</li></ul>
#
# cas.ticket.registry.redis.read-from: 

# Type: java.lang.Long
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Redis scan count option. When and if specified, SCAN operations would
# be "counted" or limited by this setting. While SCAN does not provide
# guarantees about the number of elements returned at every iteration,
# it is possible to empirically adjust the behavior of SCAN using the
# COUNT option. Basically with COUNT the user specified the amount of
# work that should be done at every call in order to retrieve elements
# from the collection. This is just a hint for the implementation,
# however generally speaking this is what you could expect most of the
# times from the implementation.
#
# cas.ticket.registry.redis.scan-count: 0

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Name of Redis server.
#
# cas.ticket.registry.redis.sentinel.master: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# list of host:port pairs.
#
# cas.ticket.registry.redis.sentinel.node: 

# Type: java.lang.String
# Module: cas-server-support-redis-core
# Owner: org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties
#
# Login password of the sentinel server.
#
# cas.ticket.registry.redis.sentinel.password: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# The shared native connection is never closed by Lettuce connection,
# therefore it is not validated by default when connections are
# retrieved. If this setting is {@code true}, a shared connection will
# be used for regular operations and a connection provider will be used
# to select a connection for blocking and tx operations only, which
# should not share a connection. If native connection sharing is
# disabled, new (or pooled) connections will be used for all operations.
# By default, multiple connections share a single thread-safe native
# connection. If you enable connection pooling, then native connection
# sharing will be disabled and the connection pool will be used for all
# operations. You may however explicitly control connection sharing via
# this setting as an override.
#
# cas.ticket.registry.redis.share-native-connections: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Start mutual TLS. In order to support TLS, Redis should be configured
# with a X.509 certificate and a private key. In addition, it is
# necessary to specify a CA certificate bundle file or path to be used
# as a trusted root when validating certificates.
#
# cas.ticket.registry.redis.start-tls: false

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Command timeout.
#
# cas.ticket.registry.redis.timeout: PT60S

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Database URI.
#
# cas.ticket.registry.redis.uri: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Whether or not to use SSL for connection factory.
#
# cas.ticket.registry.redis.use-ssl: false

# Type: java.lang.String
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Login username of the redis server.
#
# cas.ticket.registry.redis.username: 

# Type: java.lang.Boolean
# Module: cas-server-support-redis-ticket-registry
# Owner: org.apereo.cas.configuration.model.support.redis.RedisTicketRegistryProperties
#
# Control how peer verification is handled with redis connections. Peer
# verification is a security feature that checks if the host you're
# connecting to is who it says it is. This is often done by checking a
# digital certificate.
#
# cas.ticket.registry.redis.verify-peer: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.ticket.registry.stateless.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.ticket.registry.stateless.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.ticket.registry.stateless.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.ticket.registry.stateless.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.ticket.registry.stateless.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.ticket.registry.stateless.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.ticket.registry.stateless.crypto.signing.key-size: 512

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.registry.StatelessTicketRegistryProperties
#
# Control how data produced by the registry would be managed and stored
# by the browser storage. <p><br> Browser storage is a web storage
# technology that allows CAS to store and retrieve data on a user's
# device. It provides a way to persistently store key-value pairs in a
# web browser. Unlike cookies, browser storage has a larger storage
# capacity (usually 5-10 MB per domain), and the data is not sent to the
# server with every HTTP request, which can improve performance. Browser
# storage is scoped to a particular CAS domain. Each CAS domain has its
# own separate storage, and one website cannot access the storage of
# another domain due to the same-origin policy. <p><br> The following
# options are valid: <ul> <li>{@code LOCAL}: Data stored in local
# storage persists even when the user closes the browser or navigates
# away from the page. It remains available until explicitly cleared by
# the user or the web application. </li> <li>{@code SESSION}: Data
# stored in session storage is only available for the duration of the
# page session. It gets cleared when the user closes the browser or tab.
# If a user opens a new tab or window and navigates to the same page, a
# new session storage instance is created.</li> </ul>
#
# cas.ticket.registry.stateless.storage-type: LOCAL

# Type: java.lang.Integer
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ServiceTicketProperties
#
# Maximum length of generated service tickets.
#
# cas.ticket.st.max-length: 20

# Type: java.lang.Long
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ServiceTicketProperties
#
# Controls number of times a service ticket can be used within CAS
# server. Usage in CAS context means service ticket validation
# transaction.
#
# cas.ticket.st.number-of-uses: 1

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ServiceTicketProperties
#
# Time in seconds that service tickets should be considered live in CAS
# server.
#
# cas.ticket.st.time-to-kill-in-seconds: PT10S

# Type: java.lang.Integer
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.TicketGrantingTicketCoreProperties
#
# Maximum length of tickets.
#
# cas.ticket.tgt.core.max-length: 50

# Type: java.lang.Boolean
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.TicketGrantingTicketCoreProperties
#
# Flag to control whether to track most recent SSO sessions. As multiple
# tickets may be issued for the same application, this impacts how
# session information is tracked for every ticket which then has a
# subsequent impact on logout.
#
# cas.ticket.tgt.core.only-track-most-recent-session: true

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.HardTimeoutTicketExpirationPolicyProperties
#
# Timeout in seconds to kill the session and consider tickets expired.
#
# cas.ticket.tgt.hard-timeout.time-to-kill-in-seconds: 

# Type: java.lang.Integer
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because max-time-to-live-in-seconds setting is moved into the primary namespace.
# Replace with: max-time-to-live-in-seconds setting is moved into the primary namespace.
#
# 
#
# cas.ticket.tgt.max-time-to-live-in-seconds: 

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.PrimaryTicketExpirationPolicyProperties
#
# Maximum time in seconds tickets would be live in CAS server.
#
# cas.ticket.tgt.primary.max-time-to-live-in-seconds: PT8H

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.PrimaryTicketExpirationPolicyProperties
#
# Time in seconds after which tickets would be destroyed after a period
# of inactivity.
#
# cas.ticket.tgt.primary.time-to-kill-in-seconds: PT2H

# Type: java.lang.Boolean
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.RememberMeAuthenticationProperties
#
# Flag to indicate whether remember-me facility is enabled.
#
# cas.ticket.tgt.remember-me.enabled: false

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.RememberMeAuthenticationProperties
#
# Regular expression that, when defined, forces CAS to create a
# remember-me authentication session if the current client ip (remote)
# address matches this pattern. If a match is not found, remember-me is
# ignored. If left undefined, remember-me authentication will proceed
# with the default CAS behavior.
#
# cas.ticket.tgt.remember-me.supported-ip-addresses: 

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.RememberMeAuthenticationProperties
#
# Regular expression that, when defined, forces CAS to create a
# remember-me authentication session if the current user-agent matches
# this pattern. If a match is not found, remember-me is ignored. If left
# undefined, remember-me authentication will proceed with the default
# CAS behavior.
#
# cas.ticket.tgt.remember-me.supported-user-agents: 

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.RememberMeAuthenticationProperties
#
# Time in seconds after which remember-me enabled SSO session will be
# destroyed.
#
# cas.ticket.tgt.remember-me.time-to-kill-in-seconds: P14D

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ThrottledTimeoutTicketExpirationPolicyProperties
#
# Timeout in between each attempt.
#
# cas.ticket.tgt.throttled-timeout.time-in-between-uses-in-seconds: 

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.ThrottledTimeoutTicketExpirationPolicyProperties
#
# Timeout in seconds to kill the session and consider tickets expired.
#
# cas.ticket.tgt.throttled-timeout.time-to-kill-in-seconds: 

# Type: java.lang.Integer
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because time-to-kill-in-seconds setting is moved into the primary namespace.
# Replace with: time-to-kill-in-seconds setting is moved into the primary namespace.
#
# 
#
# cas.ticket.tgt.time-to-kill-in-seconds: 

# Type: java.lang.String
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.TimeoutTicketExpirationPolicyProperties
#
# Maximum time in seconds. for TGTs to be live in CAS server.
#
# cas.ticket.tgt.timeout.max-time-to-live-in-seconds: 

# Type: java.lang.Boolean
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.util.TicketProperties
#
# Indicates whether tickets issued and linked to a ticket-granting
# ticket may also be tracked, and then removed as part of logout ops.
# There are a number of tickets issued by CAS whose expiration policy is
# usually by default bound to the SSO expiration policy and the active
# TGT, yet such tickets may be allowed to live beyond the normal
# lifetime of a CAS SSO session with options to be renewed. Examples
# include OAuth access tokens, etc. Set this option to true if you want
# all linked tickets to be tracked and then removed.
#
# cas.ticket.track-descendant-tickets: false

# Type: java.lang.Long
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.TransientSessionTicketProperties
#
# Controls number of times a ticket can be used within CAS server.
#
# cas.ticket.tst.number-of-uses: 1

# Type: java.lang.Long
# Module: cas-server-core-tickets
# Owner: org.apereo.cas.configuration.model.core.ticket.TransientSessionTicketProperties
#
# Number of seconds after which this ticket becomes invalid.
#
# cas.ticket.tst.time-to-kill-in-seconds: 15

# Type: java.lang.Boolean
# Module: null
# Owner: null
# This setting is deprecated with a severity level of ERROR.
# because cas.server.* moved to cas.server.tomcat.*.
# Replace with: cas.server.* moved to cas.server.tomcat.*.
#
# 
#
# cas.tomcat.clustering.enabled: 

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.ViewProperties
#
# When set to {@code true}, attempts to calculate and display the list
# of authorized services for the authenticated user on successful
# authentication attempts.
#
# cas.view.authorized-services-on-successful-login: false

# Type: org.apereo.cas.configuration.model.core.web.view.Cas10ViewProperties$ValidationAttributesRendererTypes
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas10ViewProperties
#
# Indicates how attributes in the final validation response should be
# formatted.
# Available values are as follows:
# <ul><li>{@code
# DEFAULT}: Render attributes using CAS protocol
# suggestions.</li><li>{@code VALUES_PER_LINE}: Inline attribute
# value(s) on each line.</li></ul>
#
# cas.view.cas1.attribute-renderer-type: DEFAULT

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas20ViewProperties
#
# The relative location of the CAS3 failure view bean.
#
# cas.view.cas2.failure: protocol/2.0/casServiceValidationFailure

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas20ProxyViewProperties
#
# The relative location of the CAS2 proxy failure view bean.
#
# cas.view.cas2.proxy.failure: protocol/2.0/casProxyFailureView

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas20ProxyViewProperties
#
# The relative location of the CAS2 proxy success view bean.
#
# cas.view.cas2.proxy.success: protocol/2.0/casProxySuccessView

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas20ViewProperties
#
# The relative location of the CAS2 success view bean.
#
# cas.view.cas2.success: protocol/2.0/casServiceValidationSuccess

# Type: java.lang.Boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas20ViewProperties
#
# Whether v2 protocol support should be forward compatible to act like
# v3 and match its response, mainly for attribute release.
#
# cas.view.cas2.v3-forward-compatible: true

# Type: org.apereo.cas.configuration.model.core.web.view.Cas30ViewProperties$ValidationAttributesRendererTypes
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas30ViewProperties
#
# Indicates how attributes in the final validation response should be
# formatted.
# Available values are as follows:
# <ul><li>{@code
# DEFAULT}: Render attributes using CAS protocol
# suggestions.</li><li>{@code INLINE}: Inline attribute name/value as
# XML attributes.</li></ul>
#
# cas.view.cas3.attribute-renderer-type: DEFAULT

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas30ViewProperties
#
# The relative location of the CAS3 success validation bean.
#
# cas.view.cas3.failure: protocol/3.0/casServiceValidationFailure

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.Cas30ViewProperties
#
# The relative location of the CAS3 success validation bean.
#
# cas.view.cas3.success: protocol/3.0/casServiceValidationSuccess

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.CustomLoginFieldViewProperties
#
# The id of the custom converter to use to convert bound property
# values.
#
# cas.view.custom-login-form-fields.[key].converter: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.CustomLoginFieldViewProperties
#
# The key for this field found in the message bundle
# used to present a
# label/text in CAS views.
#
# cas.view.custom-login-form-fields.[key].message-bundle-key: 

# Type: boolean
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.CustomLoginFieldViewProperties
#
# Whether this field is required to have a value.
#
# cas.view.custom-login-form-fields.[key].required: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.ViewProperties
#
# The default redirect URL if none is specified after a successful login
# or logout event. For logout redirects, this setting is closely related
# to and requires {@link LogoutProperties#isFollowServiceRedirects()}.
# This URL must be registered i the CAS server's service registry.
#
# cas.view.default-redirect-url: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.RestfulViewProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.view.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.RestfulViewProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.view.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.RestfulViewProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.view.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.RestfulViewProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.view.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.RestfulViewProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.view.rest.url: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.ViewProperties
#
# Comma separated paths to where CAS templates may be found. Example
# might be {@code classpath:templates,file:/templates}.
#
# cas.view.template-prefixes: 

# Type: org.apereo.cas.configuration.model.core.web.view.ViewProperties$ThemeSourceTypes
# Module: cas-server-core-web
# Owner: org.apereo.cas.configuration.model.core.web.view.ViewProperties
#
# How to search for theme resource bundles and how to deal with multiple
# property files found for a given theme. The {@link
# ThemeSourceTypes#DEFAULT} type uses the first theme resource bundle
# found across the template prefixes. The {@link
# ThemeSourceTypes#AGGREGATE} type combines all the bundles found across
# template prefixes with the last prefix overriding the first.
#
# Available values are as follows:
# <ul><li>{@code DEFAULT}: Theme
# source that gets the first theme property file found in the prefix
# locations.</li><li>{@code AGGREGATE}: Theme source that combines all
# themes property files in all template prefix locations.</li></ul>
#
# cas.view.theme-source-type: DEFAULT

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# Decide if cookie paths should be automatically configured based on the
# application context path, when the cookie path is not configured.
#
# cas.warning-cookie.auto-configure-cookie-path: true

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# Cookie domain. Specifies the domain within which this cookie should be
# presented. The form of the domain name is specified by RFC 2965. A
# domain name begins with a dot (.foo.com) and means that the cookie is
# visible to servers in a specified Domain Name System (DNS) zone (for
# example, www.foo.com, but not a.b.foo.com). By default, cookies are
# only returned to the server that sent them.
#
# cas.warning-cookie.domain: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# true if this cookie contains the HttpOnly attribute. This means that
# the cookie should not be accessible to scripting engines, like
# javascript.
#
# cas.warning-cookie.http-only: true

# Type: java.lang.Integer
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# The maximum age of the cookie, specified in seconds. By default,
# {@code -1} indicating the cookie will persist until browser shutdown.
# A positive value indicates that the cookie will expire after that many
# seconds have passed. Note that the value is the maximum age when the
# cookie will expire, not the cookie's current age. A negative value
# means that the cookie is not stored persistently and will be deleted
# when the Web browser exits. A zero value causes the cookie to be
# deleted.
#
# cas.warning-cookie.max-age: -1

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# Cookie name. Constructs a cookie with a specified name and value. The
# name must conform to RFC 2965. That means it can contain only ASCII
# alphanumeric characters and cannot contain commas, semicolons, or
# white space or begin with a {@code $} character. The cookie's name
# cannot be changed after creation. By default, cookies are created
# according to the RFC 2965 cookie specification. Cookie names are
# automatically calculated assigned by CAS at runtime, and there is
# usually no need to customize the name or assign it a different value
# unless a special use case warrants the change.
#
# cas.warning-cookie.name: 

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# Cookie path. Specifies a path for the cookie to which the client
# should return the cookie. The cookie is visible to all the pages in
# the directory you specify, and all the pages in that directory's
# subdirectories. A cookie's path must include the servlet that set the
# cookie, for example, /catalog, which makes the cookie visible to all
# directories on the server under /catalog. Consult RFC 2965 (available
# on the Internet) for more information on setting path names for
# cookies.
#
# cas.warning-cookie.path: 

# Type: java.lang.String
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# If a cookie is only intended to be accessed in a first party context,
# the developer has the option to apply one of settings {@code
# SameSite=Lax} or {@code SameSite=Strict} or {@code SameSite=None} to
# prevent external access. <p> To safeguard more websites and their
# users, the new secure-by-default model assumes all cookies should be
# protected from external access unless otherwise specified. Developers
# must use a new cookie setting, {@code SameSite=None}, to designate
# cookies for cross-site access. When the {@code SameSite=None}
# attribute is present, an additional {@code Secure} attribute is used
# so cross-site cookies can only be accessed over HTTPS connections.
# </p> Accepted values are: <ul> <li>{@code Lax}</li> <li>{@code
# Strict}</li> <li>{@code None}</li> <li>{@code Off}: Disable the
# generation of the SameSite cookie attribute altogether.</li> <li>Path
# to a Groovy script that is able to generate the SameSite cookie
# attribute dynamically.</li> <li>Fully qualified name of a class that
# implements {@code org.apereo.cas.web.cookie.CookieSameSitePolicy}</li>
# </ul>
#
# cas.warning-cookie.same-site-policy: 

# Type: java.lang.Boolean
# Module: cas-server-core-cookie
# Owner: org.apereo.cas.configuration.model.support.cookie.WarningCookieProperties
#
# True if sending this cookie should be restricted to a secure protocol,
# or false if the it can be sent using any protocol.
#
# cas.warning-cookie.secure: true

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# Whether webflow auto-configuration should be enabled.
#
# cas.webflow.auto-configuration.enabled: true

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowAutoConfigurationProperties
#
# The order in which the webflow is configured.
#
# cas.webflow.auto-configuration.order: 0

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# The signing/encryption algorithm to use.
#
# cas.webflow.crypto.alg: AES

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether crypto operations are enabled.
#
# cas.webflow.crypto.enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# The encryption key. The encryption key by default and unless specified
# otherwise must be randomly-generated string whose length is defined by
# the encryption key size setting.
#
# cas.webflow.crypto.encryption.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedCryptoProperties
#
# Encryption key size.
#
# cas.webflow.crypto.encryption.key-size: 16

# Type: java.lang.Boolean
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.EncryptionRandomizedSigningJwtCryptographyProperties
#
# Whether signing encryption operations are enabled.
#
# cas.webflow.crypto.signing-enabled: true

# Type: java.lang.String
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key is a JWT whose length is defined by the signing key
# size setting.
#
# cas.webflow.crypto.signing.key: 

# Type: java.lang.Integer
# Module: cas-server-core-util
# Owner: org.apereo.cas.configuration.model.core.util.SigningJwtCryptoProperties
#
# The signing key size.
#
# cas.webflow.crypto.signing.key-size: 512

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.GroovyWebflowProperties
#
# This setting allows one to provide an alternative implementation to
# Spring Webflow's actions as implemented in Groovy. See CAS
# documentation on the outline of the script as well as any inputs and
# outputs expected. This setting is defined as map, where the key is
# expected to be the name/identifier of the bean that supplies the
# Spring Webflow action and the value is a resource path to the Groovy
# script (i.e. {@code file:/path/to/Script.groovy}) that shall be
# executed when the action is called upon by CAS and the Spring Webflow
# execution runtime. You will need to examine the CAS codebase to locate
# the proper bean identifier for the action in question. Note that
# Groovy scripts entirely supplant the CAS implementation for Spring
# Webflow actions and must be designed carefully and in compliance with
# the rest of the webflow orchestration.
#
# cas.webflow.groovy.actions: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.GroovyWebflowProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.webflow.groovy.location: 

# Type: org.springframework.core.io.Resource
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.GroovyWebflowLoginDecoratorProperties
#
# The location of the resource. Resources can be URLs, or files found
# either on the classpath or outside somewhere in the file system. <p>
# In the event the configured resource is a Groovy script, specially if
# the script set to reload on changes, you may need to adjust the total
# number of {@code inotify} instances. On Linux, you may need to add the
# following line to {@code /etc/sysctl.conf}: {@code
# fs.inotify.max_user_instances = 256}. <p> You can check the current
# value via {@code cat /proc/sys/fs/inotify/max_user_instances}. <p> In
# situations and scenarios where CAS is able to automatically watch the
# underlying resource for changes and detect updates and modifications
# dynamically, you may be able to specify the following setting as
# either an environment variable or system property with a value of
# {@code false} to disable the resource watcher: {@code
# org.apereo.cas.util.io.PathWatcherService}.
#
# cas.webflow.login-decorator.groovy.location: 

# Type: java.lang.String
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.RestfulWebflowLoginDecoratorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# password for authentication.
#
# cas.webflow.login-decorator.rest.basic-auth-password: 

# Type: java.lang.String
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.RestfulWebflowLoginDecoratorProperties
#
# If REST endpoint is protected via basic authentication, specify the
# username for authentication.
#
# cas.webflow.login-decorator.rest.basic-auth-username: 

# Type: java.util.Map<java.lang.String,java.lang.String>
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.RestfulWebflowLoginDecoratorProperties
#
# Headers, defined as a Map, to include in the request when making the
# REST call. Will overwrite any header that CAS is pre-defined to send
# and include in the request. Key in the map should be the header name
# and the value in the map should be the header value.
#
# cas.webflow.login-decorator.rest.headers: 

# Type: java.lang.String
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.RestfulWebflowLoginDecoratorProperties
#
# HTTP method to use when contacting the rest endpoint. Examples include
# {@code GET, POST}, etc.
#
# cas.webflow.login-decorator.rest.method: GET

# Type: java.lang.String
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.RestfulWebflowLoginDecoratorProperties
#
# The endpoint URL to contact and retrieve attributes.
#
# cas.webflow.login-decorator.rest.url: 

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowServerSessionsProperties
#
# Whether or not the snapshots should be compressed. Only relevant if
# session storage is done on the server.
#
# cas.webflow.session.server.compress: false

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports both synchronous and asynchronous backups. By
# default, backup operations are synchronous. In this case, backup
# operations block operations until backups are successfully copied to
# backup members (or deleted from backup members in case of remove) and
# acknowledgements are received. Therefore, backups are updated before a
# put operation is completed, provided that the cluster is stable.
# Asynchronous backups, on the other hand, do not block operations. They
# are fire and forget and do not require acknowledgements; the backup
# operations are performed at some point in time.
#
# cas.webflow.session.server.hazelcast.cluster.core.async-backup-count: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Used when replication is turned on with {@link #isReplicated()}. <p>
# If a new member joins the cluster, there are two ways you can handle
# the initial provisioning that is executed to replicate all existing
# values to the new member. Each involves how you configure the async
# fill up. <ul> <li>First, you can configure async fill up to true,
# which does not block reads while the fill up operation is underway.
# That way, you have immediate access on the new member, but it will
# take time until all the values are eventually accessible. Not yet
# replicated values are returned as non-existing (null). </li>
# <li>Second, you can configure for a synchronous initial fill up (by
# configuring the async fill up to false), which blocks every read or
# write access to the map until the fill up operation is finished. Use
# this with caution since it might block your application from
# operating.</li> </ul>
#
# cas.webflow.session.server.hazelcast.cluster.core.async-fillup: true

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# To provide data safety, Hazelcast allows you to specify the number of
# backup copies you want to have. That way, data on a cluster member
# will be copied onto other member(s). To create synchronous backups,
# select the number of backup copies. When this count is 1, a map entry
# will have its backup on one other member in the cluster. If you set it
# to 2, then a map entry will have its backup on two other members. You
# can set it to 0 if you do not want your entries to be backed up, e.g.,
# if performance is more important than backing up. The maximum value
# for the backup count is 6. Sync backup operations have a blocking cost
# which may lead to latency issues.
#
# cas.webflow.session.server.hazelcast.cluster.core.backup-count: 1

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# CP Subsystem is a component of a Hazelcast cluster that builds a
# strongly consistent layer for a set of distributed data structures.
# Its data structures are CP with respect to the CAP principle, i.e.,
# they always maintain linearizability and prefer consistency over
# availability during network partitions. Besides network partitions, CP
# Subsystem withstands server and client failures. All members of a
# Hazelcast cluster do not necessarily take part in CP Subsystem. The
# number of Hazelcast members that take part in CP Subsystem is
# specified here. CP Subsystem must have at least 3 CP members.
#
# cas.webflow.session.server.hazelcast.cluster.core.cp-member-count: 0

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast supports policy-based eviction for distributed maps.
# Currently supported policies are LRU (Least Recently Used) and LFU
# (Least Frequently Used) and NONE. See <a
# href="http://docs.hazelcast.org/docs/latest-development/manual/html/Di
# stributed_Data_Structures/Map/Map_Eviction.html">this</a> for more
# info.
#
# cas.webflow.session.server.hazelcast.cluster.core.eviction-policy: LRU

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# The instance name.
#
# cas.webflow.session.server.hazelcast.cluster.core.instance-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Hazelcast has a flexible logging configuration and doesn't depend on
# any logging framework except JDK logging. It has in-built adaptors for
# a number of logging frameworks and also supports custom loggers by
# providing logging interfaces. To use built-in adaptors you should set
# this setting to one of predefined types below. <ul> <li>{@code jdk}:
# JDK logging</li> <li>{@code log4j}: Log4j</li> <li>{@code slf4j}:
# Slf4j</li> <li>{@code none}: Disable logging</li> </ul>
#
# cas.webflow.session.server.hazelcast.cluster.core.logging-type: slf4j

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Define how data items in Hazelcast maps are merged together from
# source to destination. By default, merges map entries from source to
# destination if they don't exist in the destination map. Accepted
# values are: <ul> <li>{@code PUT_IF_ABSENT}: Merges data structure
# entries from source to destination if they don't exist in the
# destination data structure.</li> <li>{@code HIGHER_HITS}: * Merges
# data structure entries from source to destination data structure if
# the source entry has more hits than the destination one.</li>
# <li>{@code DISCARD}: Merges only entries from the destination data
# structure and discards all entries from the source data structure.
# </li> <li>{@code PASS_THROUGH}: Merges data structure entries from
# source to destination directly unless the merging entry is null</li>
# <li>{@code EXPIRATION_TIME}: Merges data structure entries from source
# to destination data structure if the source entry will expire later
# than the destination entry. This policy can only be used if the clocks
# of the nodes are in sync. </li> <li>{@code LATEST_UPDATE}: Merges data
# structure entries from source to destination data structure if the
# source entry was updated more frequently than the destination entry.
# This policy can only be used if the clocks of the nodes are in sync.
# </li> <li>{@code LATEST_ACCESS}: Merges data structure entries from
# source to destination data structure if the source entry has been
# accessed more recently than the destination entry. This policy can
# only be used if the clocks of the nodes are in sync.</li> </ul>
#
# cas.webflow.session.server.hazelcast.cluster.core.map-merge-policy: PUT_IF_ABSENT

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Max timeout of heartbeat in seconds for a node to assume it is dead.
#
# cas.webflow.session.server.hazelcast.cluster.core.max-no-heartbeat-seconds: 300

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Sets the maximum size of the map.
#
# cas.webflow.session.server.hazelcast.cluster.core.max-size: 85

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# <ul> <li>{@code FREE_HEAP_PERCENTAGE}: Policy based on minimum free
# JVM heap memory percentage per JVM.</li> <li>{@code FREE_HEAP_SIZE}:
# Policy based on minimum free JVM heap memory in megabytes per
# JVM.</li> <li>{@code FREE_NATIVE_MEMORY_PERCENTAGE}: Policy based on
# minimum free native memory percentage per Hazelcast instance.</li>
# <li>{@code FREE_NATIVE_MEMORY_SIZE}: Policy based on minimum free
# native memory in megabytes per Hazelcast instance.</li> <li>{@code
# PER_NODE}: Policy based on maximum number of entries stored per data
# structure (map, cache etc) on each Hazelcast instance.</li> <li>{@code
# PER_PARTITION}: Policy based on maximum number of entries stored per
# data structure (map, cache etc) on each partition.</li> <li>{@code
# USED_HEAP_PERCENTAGE}: Policy based on maximum used JVM heap memory
# percentage per data structure (map, cache etc) on each Hazelcast
# instance .</li> <li>{@code USED_HEAP_SIZE}: Policy based on maximum
# used JVM heap memory in megabytes per data structure (map, cache etc)
# on each Hazelcast instance.</li> <li>{@code
# USED_NATIVE_MEMORY_PERCENTAGE}: Policy based on maximum used native
# memory percentage per data structure (map, cache etc) on each
# Hazelcast instance.</li> <li>{@code USED_NATIVE_MEMORY_SIZE}: Policy
# based on maximum used native memory in megabytes per data structure
# (map, cache etc) on each Hazelcast instance .</li> </ul>
#
# cas.webflow.session.server.hazelcast.cluster.core.max-size-policy: USED_HEAP_PERCENTAGE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# With {@code PartitionGroupConfig}, you can control how primary and
# backup partitions are mapped to physical Members. Hazelcast will
# always place partitions on different partition groups so as to provide
# redundancy. Accepted value are: {@code PER_MEMBER, HOST_AWARE, CUSTOM,
# ZONE_AWARE, SPI}. In all cases a partition will never be created on
# the same group. If there are more partitions defined than there are
# partition groups, then only those partitions, up to the number of
# partition groups, will be created. For example, if you define 2
# backups, then with the primary, that makes 3. If you have only two
# partition groups only two will be created. <ul> <li>{@code}PER_MEMBER
# Partition Groups}: This is the default partition scheme and is used if
# no other scheme is defined. Each Member is in a group of its own.</li>
# <li>{@code}HOST_AWARE Partition Groups}: In this scheme, a group
# corresponds to a host, based on its IP address. Partitions will not be
# written to any other members on the same host. This scheme provides
# good redundancy when multiple instances are being run on the same
# host.</li> <li>{@code}CUSTOM Partition Groups}: In this scheme, IP
# addresses, or IP address ranges, are allocated to groups. Partitions
# are not written to the same group. This is very useful for ensuring
# partitions are written to different racks or even availability
# zones.</li> <li>{@code}ZONE_AWARE Partition Groups}: In this scheme,
# groups are allocated according to the metadata provided by Discovery
# SPI Partitions are not written to the same group. This is very useful
# for ensuring partitions are written to availability zones or different
# racks without providing the IP addresses to the config ahead.</li>
# <li>{@code}SPI Partition Groups}: In this scheme, groups are allocated
# according to the implementation provided by Discovery SPI.</li> </ul>
#
# cas.webflow.session.server.hazelcast.cluster.core.partition-member-group-type: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# A Replicated Map is a distributed key-value data structure where the
# data is replicated to all members in the cluster. It provides full
# replication of entries to all members for high speed access. A
# Replicated Map does not partition data (it does not spread data to
# different cluster members); instead, it replicates the data to all
# members. Replication leads to higher memory consumption. However, a
# Replicated Map has faster read and write access since the data is
# available on all members. Writes could take place on local/remote
# members in order to provide write-order, eventually being replicated
# to all other members. <br><p> If you have a large cluster or very high
# occurrences of updates, the Replicated Map may not scale linearly as
# expected since it has to replicate update operations to all members in
# the cluster. Since the replication of updates is performed in an
# asynchronous manner, Hazelcast recommends you enable back pressure in
# case your system has high occurrences of updates. <p> Note that
# Replicated Map does not guarantee eventual consistency because there
# are some edge cases that fail to provide consistency. <br><p>
# Replicated Map uses the internal partition system of Hazelcast in
# order to serialize updates happening on the same key at the same time.
# This happens by sending updates of the same key to the same Hazelcast
# member in the cluster. <br><p> Due to the asynchronous nature of
# replication, a Hazelcast member could die before successfully
# replicating a "write" operation to other members after sending the
# "write completed" response to its caller during the write process. In
# this scenario, Hazelcast’s internal partition system promotes one of
# the replicas of the partition as the primary one. The new primary
# partition does not have the latest "write" since the dead member could
# not successfully replicate the update.
#
# cas.webflow.session.server.hazelcast.cluster.core.replicated: false

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreClusterProperties
#
# Connection timeout in seconds for the TCP/IP config and members
# joining the cluster.
#
# cas.webflow.session.server.hazelcast.cluster.core.timeout: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS access key.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.access-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# ECS cluster short name or ARN; default is the current cluster.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.cluster: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# The maximum amount of time Hazelcast will try to connect to a well
# known member before giving up. Setting this value too low could mean
# that a member is not able to connect to a cluster. Setting the value
# too high means that member startup could slow down because of longer
# timeouts (for example, when a well known member is not up). Increasing
# this value is recommended if you have many IPs listed and the members
# cannot properly build up the cluster. Its default value is 5.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.connection-timeout-seconds: 5

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks with the given family name; mutually
# exclusive with {@link #getServiceName()}.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.family: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Host header. i.e. {@code ec2.amazonaws.com}. The URL that is the entry
# point for a web service.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.host-header: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If you do not want to use access key and secret key, you can specify
# iam-role. Hazelcast fetches your credentials by using your IAM role.
# This setting only affects deployments on Amazon EC2. If you are
# deploying CAS in an Amazon ECS environment, the role should not be
# specified. The role is fetched from the task definition that is
# assigned to run CAS.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.iam-role: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Hazelcast port. Typically may be set to {@code 5701}. You can set
# searching for other ports rather than 5701 if you've members on
# different ports.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS region. i.e. {@code us-east-1}. The region where your members are
# running.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.region: us-east-1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# AWS secret key.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.secret-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a security group is configured, only instances within that security
# group are selected.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.security-group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# Filter to look only for ECS tasks from the given service; mutually
# exclusive with {@link #getFamily()}.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.service-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.tag-key: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-aws
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAwsDiscoveryProperties
#
# If a tag key/value is set, only instances with that tag key/value will
# be selected.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.aws.tag-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client ID.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.azure.client-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory Service Principal client secret.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.azure.client-secret: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The name of the tag on the hazelcast vm resources. With every
# Hazelcast Virtual Machine you deploy in your resource group, you need
# to ensure that each VM is tagged with the value of cluster-id defined
# in your Hazelcast configuration. The only requirement is that every VM
# can access each other either by private or public IP address.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.azure.cluster-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure resource group name of the cluster. You can find this in the
# Azure portal or CLI.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.azure.group-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure subscription ID.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.azure.subscription-id: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-azure
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastAzureDiscoveryProperties
#
# The Azure Active Directory tenant ID.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.azure.tenant-id: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastDiscoveryProperties
#
# Whether discovery should be enabled via the configured strategies
# below.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A range of ports where the plugin looks for Hazelcast members.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.gcp.hz-port: 5701-5708

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filter to look only for instances labeled as specified; property
# format: {@code key=value}.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.gcp.label: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A filesystem path to the private key for GCP service account in the
# JSON format; if not set, the access token is fetched from the GCP VM
# instance.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.gcp.private-key-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of projects where the plugin looks for instances; if not set,
# the current project is used.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.gcp.projects: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A region where the plugin looks for instances; if not set, the {@link
# #getZones()} property is used; if it and {@link #getZones()} property
# not set, all zones of the current region are used.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.gcp.region: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-gcp
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastGoogleCloudPlatformDiscoveryProperties
#
# A list of zones where the plugin looks for instances; if not set, all
# zones of the current region are used.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.gcp.zones: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider credential, can be thought of as a password for cloud
# services.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.credential: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for cloud providers which require an extra JSON or P12 key file.
# This denotes the path of that file. Only tested with Google Compute
# Engine. (Required if Google Compute Engine is used.)
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.credential-path: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines the endpoint for a generic API such as OpenStack or CloudStack
# (optional).
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.endpoint: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters instance groups (optional). When used with AWS it maps to
# security group.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Cloud Provider identity, can be thought of as a user name for cloud
# services.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.identity: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Port which the hazelcast instance service uses on the cluster member.
# Default value is 5701. (optional)
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.port: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# String value that is used to identify ComputeService provider. For
# example, "google-compute-engine" is used for Google Cloud services.
# See <a
# href="https://jclouds.apache.org/reference/providers/#compute">here</a
# > for more info.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.provider: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines region for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.regions: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Used for IAM role support specific to AWS (optional, but if defined,
# no identity or credential should be defined in the configuration).
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.role-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional). Can be used with comma
# separated values for multiple values.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.tag-keys: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Filters cloud instances with tags (optional) Can be used with comma
# separated values for multiple values.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.tag-values: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-jclouds
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastJCloudsDiscoveryProperties
#
# Defines zone for a cloud service (optional). Can be used with comma
# separated values for multiple values.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.jclouds.zones: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the number of retries to Kubernetes API. Defaults to: 3.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.api-retries: 3

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an oauth token for the kubernetes client to access the
# kubernetes REST API. Defaults to reading the token from the
# auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/token}.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.api-token: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# CA Authority certificate from Kubernetes Master. Defaults to reading
# the certificate from the auto-injected file at: {@code
# /var/run/secrets/kubernetes.io/serviceaccount/ca.crt}.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.ca-certificate: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines an alternative address for the kubernetes master. Defaults to:
# {@code https://kubernetes.default.svc}
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.kubernetes-master: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the namespace of the application POD through the Service
# Discovery REST API of Kubernetes.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.namespace: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label to lookup through the Service Discovery REST API
# of Kubernetes.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.pod-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the pod label value to lookup through the Service Discovery
# REST API of Kubernetes.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.pod-label-value: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if not ready addresses should be evaluated to be discovered on
# startup.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.resolve-not-ready-addresses: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup domain. This is defined as something
# similar to {@code my-svc.my-namespace.svc.cluster.local}.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.service-dns: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the DNS service lookup timeout in seconds. Defaults to 5 secs.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.service-dns-timeout: -1

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label to lookup through the Service Discovery REST
# API of Kubernetes.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.service-label-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service label value to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.service-label-value: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines the service name of the POD to lookup through the Service
# Discovery REST API of Kubernetes.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.service-name: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# If specified with a value greater than 0, its value defines the
# endpoint port of the service (overriding the default).
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.service-port: 0

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-discovery-kubernetes
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastKubernetesDiscoveryProperties
#
# Defines if the node name should be used as external address, instead
# of looking up the external IP using the {@code /nodes} resource.
# Default is false.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.kubernetes.use-node-name-as-external-address: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Enables a multicast configuration using a group address and port.
# Contains the configuration for the multicast discovery mechanism. With
# the multicast discovery mechanism Hazelcast allows Hazelcast members
# to find each other using multicast. So Hazelcast members do not need
# to know concrete addresses of members, they just multicast to everyone
# listening. It depends on your environment if multicast is possible or
# allowed; otherwise you need to have a look at the tcp/ip cluster
#
# cas.webflow.session.server.hazelcast.cluster.discovery.multicast.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast group address used for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.multicast.group: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# The multicast port used for discovery.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.multicast.port: 0

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Gets the time to live for the multicast package in seconds. This is
# the default time-to-live for multicast packets sent out on the socket
#
# cas.webflow.session.server.hazelcast.cluster.discovery.multicast.time-to-live: 32

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# specifies the time in seconds that a member should wait for a valid
# multicast response from another member running in the network before
# declaring itself the leader member (the first member joined to the
# cluster) and creating its own cluster. This only applies to the
# startup of members where no leader has been assigned yet. If you
# specify a high value, such as 60 seconds, it means that until a leader
# is selected, each member will wait 60 seconds before moving on. Be
# careful when providing a high value. Also, be careful not to set the
# value too low, or the members might give up too early and create their
# own cluster.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.multicast.timeout: 2

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastClusterMulticastProperties
#
# Multicast trusted interfaces for discovery. With the multicast
# auto-discovery mechanism, Hazelcast allows cluster members to find
# each other using multicast communication. The cluster members do not
# need to know the concrete addresses of the other members, as they just
# multicast to all the other members for listening. Whether multicast is
# possible or allowed depends on your environment.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.multicast.trusted-interfaces: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Name of this Hazelcast cluster. You can have multiple distinct
# clusters to use the same ZooKeeper installation
#
# cas.webflow.session.server.hazelcast.cluster.discovery.zookeeper.group: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Path in zookeeper to be used for auto-discovery of members where
# members are tracked.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.zookeeper.path: /discovery/hazelcast

# Type: java.lang.String
# Module: cas-server-support-hazelcast-discovery-zookeeper
# Owner: org.apereo.cas.configuration.model.support.hazelcast.discovery.HazelcastZooKeeperDiscoveryProperties
#
# Zookeeper url address typically in the format of {@code
# ip-address:port}.
#
# cas.webflow.session.server.hazelcast.cluster.discovery.zookeeper.url: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# IPv6 support has been switched off by default, since some platforms
# have issues in use of IPv6 stack. And some other platforms such as
# Amazon AWS have no support at all. To enable IPv6 support set this
# setting to false.
#
# cas.webflow.session.server.hazelcast.cluster.network.ipv4-enabled: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# If this property is set, then this is the address where the server
# socket is bound to.
#
# cas.webflow.session.server.hazelcast.cluster.network.local-address: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Sets the well known members. If members is empty, calling this method
# will have the same effect as calling {@code clear()}. A member can be
# a comma separated string, e..g {@code 10.11.12.1,10.11.12.2} which
# indicates multiple members are going to be added. The list of members
# must include ALL CAS server node, including the current node that owns
# this configuration.
#
# cas.webflow.session.server.hazelcast.cluster.network.members: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify which network interfaces that Hazelcast should use.
# Servers mostly have more than one network interface, so you may want
# to list the valid IPs. Range characters ('*' and '-') can be used for
# simplicity. For instance, 10.3.10.* refers to IPs between 10.3.10.0
# and 10.3.10.255. Interface 10.3.10.4-18 refers to IPs between
# 10.3.10.4 and 10.3.10.18 (4 and 18 included). If network interface
# configuration is enabled (it is disabled by default) and if Hazelcast
# cannot find an matching interface, then it will print a message on the
# console and will not start on that node. <p> Interfaces can be
# separated by a comma.
#
# cas.webflow.session.server.hazelcast.cluster.network.network-interfaces: 

# Type: java.util.List<java.lang.String>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The outbound ports for the Hazelcast configuration.
#
# cas.webflow.session.server.hazelcast.cluster.network.outbound-ports: 

# Type: java.lang.Integer
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You can specify the ports which Hazelcast will use to communicate
# between cluster members. The name of the parameter for this is port
# and its default value is 5701. By default, Hazelcast will try 100
# ports to bind. Meaning that, if you set the value of port as 5701, as
# members are joining to the cluster, Hazelcast tries to find ports
# between 5701 and 5801.
#
# cas.webflow.session.server.hazelcast.cluster.network.port: 5701

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# You may also want to choose to use only one port. In that case, you
# can disable the auto-increment feature of port.
#
# cas.webflow.session.server.hazelcast.cluster.network.port-auto-increment: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# The default public address to be advertised to other cluster members
# and clients.
#
# cas.webflow.session.server.hazelcast.cluster.network.public-address: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Comma-separated list of cipher suite names allowed to be used. Its
# default value are all supported suites in your Java runtime.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.cipher-suites: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the authentication keys are
# provided.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.key-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the keystore. Its default value is JKS. Another commonly used
# type is the PKCS12. Available keystore/truststore types depend on your
# Operating system and the Java runtime. Only needed when the mutual
# authentication is used.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.key-store-type: JKS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your keystore file. Only needed when the mutual authentication
# is used.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.keystore: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to access the key from your keystore file. Only needed when
# the mutual authentication is used.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.keystore-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Mutual authentication configuration. It’s empty by default which means
# the client side of connection is not authenticated. Available values
# are: <ul> <li>{@code REQUIRED} - server forces usage of a trusted
# client certificate</li> <li>{@code OPTIONAL} - server asks for a
# client certificate, but it doesn't require it</li> </ul>
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.mutual-authentication: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm which is used in your TLS/SSL. For the protocol
# property, we recommend you to provide TLS with its version
# information, e.g., TLSv1.2. Note that if you write only TLS, your
# application chooses the TLS version according to your Java version.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.protocol: TLS

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Name of the algorithm based on which the trust managers are provided.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.trust-manager-algorithm: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Path of your truststore file. The file truststore is a keystore file
# that contains a collection of certificates trusted by your
# application.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.trust-store: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Password to unlock the truststore file.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.trust-store-password: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Type of the truststore. Its default value is JKS. Another commonly
# used type is the PKCS12. Available keystore/truststore types depend on
# your Operating system and the Java runtime.
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.trust-store-type: JKS

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkSslProperties
#
# Flag which allows enabling endpoint identity validation. It means,
# during the TLS handshake client verifies if the server’s hostname (or
# IP address) matches the information in X.509 certificate (Subject
# Alternative Name extension).
#
# cas.webflow.session.server.hazelcast.cluster.network.ssl.validate-identity: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastNetworkClusterProperties
#
# Enable TCP/IP config. Contains the configuration for the Tcp/Ip join
# mechanism. The Tcp/Ip join mechanism relies on one or more well known
# members. So when a new member wants to join a cluster, it will try to
# connect to one of the well known members. If it is able to connect, it
# will now about all members in the cluster and doesn't rely on these
# well known members anymore.
#
# cas.webflow.session.server.hazelcast.cluster.network.tcpip-enabled: true

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Whether WAN should be enabled.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.enabled: false

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# Name of this replication group.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.replication-name: apereo-cas

# Type: java.util.List<org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationProperties
#
# List of target clusters to be used for synchronization and
# replication.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
#     <li>{@code ACK_ON_RECEIPT}: ACK
# after WAN operation is received by the target cluster (without waiting
# the result of actual operation invocation).</li>
#     <li>{@code
# ACK_ON_OPERATION_COMPLETE}: Wait till the operation is complete on
# target cluster.</li>
# </ul>
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].acknowledge-type: ACK_ON_OPERATION_COMPLETE

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum amount of time, in milliseconds, to be waited before
# sending
# a batch of events in case batch.size is not reached.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].batch-maximum-delay-milliseconds: 1000

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Maximum size of events that are sent to the target cluster in a single
# batch.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].batch-size: 500

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Sets the cluster name used as an endpoint group password for
# authentication
# on the target endpoint.
# If there is no separate
# publisher ID property defined, this cluster name
# will also be used
# as a WAN publisher ID. This ID is then used for
# identifying the
# publisher.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].cluster-name: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Strategy for checking the consistency of data between replicas.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].consistency-check-strategy: NONE

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Comma separated list of endpoints in this replication group.
# IP
# addresses and ports of the cluster members for which the WAN
# replication is implemented. These endpoints are not necessarily
# the
# entire target cluster and WAN does not perform the discovery of other
# members in the target cluster. It only expects
# that these IP
# addresses (or at least some of them) are available.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].endpoints: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The number of threads that the replication executor will have. The
# executor is used to send WAN
# events to the endpoints and ideally you
# want to have one thread per endpoint. If this property is omitted
#
# and you have specified the endpoints property, this will be the case.
# If necessary you can manually define
# the number of threads that the
# executor will use. Once the executor has been initialized there is
# thread
# affinity between the discovered endpoints and the executor
# threads - all events for a single endpoint will
# go through a single
# executor thread, preserving event order. It is important to determine
# which number of
# executor threads is a good value. Failure to do so
# can lead to performance issues - either contention on a
# too small
# number of threads or wasted threads that will not be performing any
# work.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].executor-thread-count: 2

# Type: java.util.Map<String,Comparable>
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# The WAN publisher properties.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].properties: 

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Publisher class name for WAN replication.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].publisher-class-name: com.hazelcast.enterprise.wan.replication.WanBatchReplication

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Returns the publisher ID used for identifying the publisher.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].publisher-id: 

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# For huge clusters or high data mutation rates, you might need to
# increase the replication queue size.
# The default queue size for
# replication queues is 10,000. This means, if you have heavy
# put/update/remove
# rates, you might exceed the queue size so that the
# oldest, not yet replicated, updates might get
# lost.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].queue-capacity: 10000

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Accepted values are:
# <ul>
# <li>{@code THROW_EXCEPTION}: Instruct
# WAN replication implementation to throw an exception and doesn't allow
# further processing.</li>
# <li>{@code DISCARD_AFTER_MUTATION}:
# Instruct WAN replication implementation to drop new events when WAN
# event queues are full.</li>
# <li>{@code
# THROW_EXCEPTION_ONLY_IF_REPLICATION_ACTIVE}: Similar to {@code
# THROW_EXCEPTION} but only throws exception when WAN replication is
# active.
# * Discards the new events if WAN replication is
# stopped.</li>
# </ul>
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].queue-full-behavior: THROW_EXCEPTION

# Type: int
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# Time, in milliseconds, to be waited for the acknowledgment of a sent
# WAN event to target cluster.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].response-timeout-milliseconds: 60000

# Type: boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastWANReplicationTargetClusterProperties
#
# When set to true, only the latest events (based on key) are selected
# and sent in a batch.
#
# cas.webflow.session.server.hazelcast.cluster.wan-replication.targets[].snapshot-enabled: 

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables compression when default java serialization is used.
#
# cas.webflow.session.server.hazelcast.core.enable-compression: false

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enable Jet configuration/service on the hazelcast instance. Hazelcast
# Jet is a distributed batch and stream processing system that can do
# stateful computations over massive amounts of data with consistent low
# latency. Jet service is required when executing SQL queries with the
# SQL service.
#
# cas.webflow.session.server.hazelcast.core.enable-jet: true

# Type: java.lang.Boolean
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Enables scripting from Management Center.
#
# cas.webflow.session.server.hazelcast.core.enable-management-center-scripting: true

# Type: java.lang.String
# Module: cas-server-support-hazelcast-core
# Owner: org.apereo.cas.configuration.model.support.hazelcast.HazelcastCoreProperties
#
# Hazelcast enterprise license key.
#
# cas.webflow.session.server.hazelcast.core.license-key: 

# Type: java.lang.String
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowServerSessionsProperties
#
# Sets the time period that can elapse before a timeout occurs on an
# attempt to acquire a conversation lock. The default is 30 seconds.
# Only relevant if session storage is done on the server.
#
# cas.webflow.session.server.lock-timeout: PT30S

# Type: java.lang.Integer
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowServerSessionsProperties
#
# Using the maxConversations property, you can limit the number of
# concurrently active conversations allowed in a single session. If the
# maximum is exceeded, the conversation manager will automatically end
# the oldest conversation. The default is 5, which should be fine for
# most situations. Set it to -1 for no limit. Setting maxConversations
# to 1 allows easy resource cleanup in situations where there should
# only be one active conversation per session. Only relevant if session
# storage is done on the server.
#
# cas.webflow.session.server.max-conversations: 5

# Type: java.lang.Boolean
# Module: cas-server-core-webflow
# Owner: org.apereo.cas.configuration.model.core.web.flow.WebflowSessionManagementProperties
#
# Controls whether spring webflow sessions are to be stored server-side
# or client side. By default state is managed on the client side, that
# is also signed and encrypted.
#
# cas.webflow.session.storage: false

